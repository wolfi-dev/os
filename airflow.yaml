package:
  name: airflow
  version: "2.10.5"
  epoch: 0
  description: Platform to programmatically author, schedule, and monitor workflows
  options:
    #  There is a dependency on libarrow.so although it
    #  is provided in the virtual environment. Enabling no-depends
    #  works around this
    no-depends: true
  dependencies:
    runtime:
      - coreutils # numfmt is required
      - netcat-openbsd # nc is required
      - posix-libc-utils # genconf is required
      - python-3.12
      - tzdata
      - unixodbc
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - cargo-auditable
      - gcc
      - glibc-dev
      - mariadb-connector-c-dev
      - mariadb-dev
      - nodejs
      - pkgconf-dev
      - postgresql-dev
      - py3-pip
      - py3-xmlsec
      - py3.12-build-bin
      - py3.12-pip
      # Airflow requires pytonn<3.13
      - python-3.12
      - python-3.12-dev
      - rust
      - wolfi-base
      - xmlsec-dev
      - xmlsec-openssl
      - yarn

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/airflow
      tag: ${{package.version}}
      expected-commit: b93c3db6b1641b0840bd15ac7d05bc58ff2cccbf

  - runs: |
      # by default airflow celery provider is not built,but running the upstream helm chart requires it
       python patch.py
       # remove the patcher
       rm -rf patch.py

  - uses: patch
    with:
      patches: requests.patch urllib3.patch

  - working-directory: ./airflow/www
    runs: |
      # front-end build
      yarn install --frozen-lockfile
      yarn run build
      rm -rf node_modules

  - runs: |
      # requires EPOCH to be later that 1980
      export SOURCE_DATE_EPOCH=315532800

      # To install mysqlclient wheel
      export MYSQLCLIENT_CFLAGS=`mysql_config --cflags`
      export MYSQLCLIENT_CFLAGS=`mysql_config --cflags`

      python3.12 -m build --wheel
      pip3.12 install --verbose \
       --prefix="/opt/airflow" --root=${{targets.contextdir}} dist/*.whl

  - runs: |
      # CVE-2024-6345 GHSA-cx63-2mw6-8hw5
      # setuptools comes from airflow/providers/google/provider.yaml having
      # gcloud-aio-auth>=4.0.0,<5.0.0 . gcloud-aio-auth 4 is backlevel and has
      # setuptools in it's pyproject.toml 'tool.poetry.dependencies'
      # The tldr; For that case it is not needed in runtime.
      pip3.12 uninstall --yes setuptools

      #GHSA-8w49-h785-mj3c/GHSA-8495-4g3g-x7pr/GHSA-27mf-ghqm-j3j8 fixes
      pip3.12 install --verbose \
        --force-reinstall --prefix=/opt/airflow --root="${{targets.contextdir}}" \
        aiohttp>=3.10.11 tornado>=6.4.2 statsd packaging pyparsing

  - runs: find . -name '__pycache__' -exec rm -rf {} +

  - runs: |
      mkdir -p ${{targets.destdir}}/opt/airflow/dags
      mkdir -p ${{targets.destdir}}/scripts/docker

      # The first time you run Airflow, it will create a file called `airflow.cfg` in
      # `$AIRFLOW_HOME` directory
      # However, for production case it is advised to generate the configuration
      export PYTHONPATH=${{targets.destdir}}/opt/airflow/lib/python3.12/site-packages

      ${{targets.destdir}}/opt/airflow/bin/airflow config list --defaults > ${{targets.destdir}}/"airflow.cfg"

      cp airflow/config_templates/default_webserver_config.py ${{targets.destdir}}/

      cp scripts/docker/entrypoint_prod.sh ${{targets.destdir}}/entrypoint
      chmod 755 ${{targets.destdir}}/entrypoint

      cp scripts/docker/clean-logs.sh ${{targets.destdir}}/clean-logs
      chmod 755 ${{targets.destdir}}/clean-logs

      cp scripts/docker/airflow-scheduler-autorestart.sh ${{targets.destdir}}/airflow-scheduler-autorestart
      chmod 755 ${{targets.destdir}}/airflow-scheduler-autorestart

      cp -r scripts/docker/* ${{targets.destdir}}/scripts/docker
      chmod 755 ${{targets.destdir}}/scripts/docker

subpackages:
  - name: airflow-compat
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          # Symlink libstdc++ from usr/lib to /usr/lib/$(uname -m)-linux-gnu/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/$(uname -m)-linux-gnu
          ln -sf /usr/lib/libstdc++.so.6 ${{targets.subpkgdir}}/usr/lib/$(uname -m)-linux-gnu/

update:
  enabled: true
  ignore-regex-patterns:
    - 'rc\d+$'
    - 'helm-chart*'
  github:
    identifier: apache/airflow

test:
  environment:
    contents:
      packages:
        - python3
  pipeline:
    - runs: |
        export PATH=/opt/airflow/bin:$PATH
        export PYTHONPATH=/opt/airflow/lib/python3.12/site-packages
        HOME=/home/build airflow version
        python3.12 -c "import airflow"
