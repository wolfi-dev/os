package:
  name: apache-activemq-artemis
  version: "2.39.0"
  epoch: 0
  description: ActiveMQ Artemis is the next generation message broker from Apache ActiveMQ.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      - coreutils
      - dash-binsh
      - glibc-locale-en
      - libaio
      - openjdk-${{vars.java-runtime-version}}-default-jvm
      - openssl
      - procps

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - coreutils
      - fontconfig-config
      - fontconfig-dev
      - libfontconfig1
      - maven
      - openjdk-${{vars.java-build-version}}-default-jdk
      - openssl
      - procps

# Note: the upstream project requires the release version to be built with openjdk-17 but ships with openjdk-21.
vars:
  java-build-version: 17
  java-runtime-version: 21

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/activemq-artemis
      tag: ${{package.version}}
      expected-commit: fb1c6e3217e7453226e2e441df776e7a880571e1

  - runs: |
      mvn -Prelease package -DskipTests -Drat.excludesFile=rat-exclusions.txt
      mkdir -p "${{targets.contextdir}}"/opt/activemq-artemis
      cp -r artemis-distribution/target/apache-artemis-${{package.version}}-bin/apache-artemis-${{package.version}}/* "${{targets.contextdir}}"/opt/activemq-artemis/

subpackages:
  - name: "${{package.name}}-compat"
    description: "Compatibility package to place binaries and symlinks in location expected by the container"
    pipeline:
      - runs: |
          cp artemis-docker/docker-run.sh "${{targets.contextdir}}"/
          mkdir -p ${{targets.destdir}}/opt/java/
          ln -sf /usr/lib/jvm/default-jvm ${{targets.destdir}}/opt/java/openjdk

update:
  enabled: true
  ignore-regex-patterns:
    - -doc
  github:
    identifier: apache/activemq-artemis
    use-tag: true

test:
  environment:
    contents:
      packages:
        - git
        - maven
        - openjdk-${{vars.java-runtime-version}}-default-jdk
  pipeline:
    - name: "Setup activemq-artemis broker and start service"
      runs: |
        mkdir /var/lib/artemis-instance
        export BROKER_HOME=/var/lib/
        export CONFIG_PATH=$BROKER_HOME/etc
        cd /var/lib/artemis-instance
        /opt/activemq-artemis/bin/artemis create --user artemis --password artemis --allow-anonymous .
        /var/lib/artemis-instance/bin/artemis-service start
    - name: "Clone official apache activemq-artemis examples"
      runs: |
        git clone https://github.com/apache/activemq-artemis-examples.git
    - name: "Run standard queue read and write test against running activemq-artemis service"
      runs: |
        cd activemq-artemis-examples/examples/features/standard/queue
        mvn -PnoServer verify > test_output.txt
        if grep -q "Sent message: This is a text message" "test_output.txt" &&\
            grep -q "Received message: This is a text message" "test_output.txt"; then
          echo "Successfully wrote to and read from activemq-artemis queue."
          exit 0
        else
          echo "Failed to write to and read from active-artemis queue."
          exit 1
        fi
