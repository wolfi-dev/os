package:
  name: apache-exporter
  version: "1.0.10"
  epoch: 0
  description: apache-exporter exposes Apache server metrics for Prometheus monitoring
  copyright:
    - license: MIT

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/Lusitaniae/apache_exporter
      tag: v${{package.version}}
      expected-commit: c4206b529038d79f20f2eeba98a9780c8cb4a2c2

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.38.0
        golang.org/x/oauth2@v0.27.0

  - uses: go/build
    with:
      packages: .
      output: apache_exporter
      ldflags: |
        -X github.com/prometheus/common/version.Version=${{package.version}} \
        -X github.com/prometheus/common/version.Revision=$(git rev-parse --short HEAD) \
        -X github.com/prometheus/common/version.Branch=$(git rev-parse --abbrev-ref HEAD) \
        -X github.com/prometheus/common/version.BuildUser=linky@chainguard.dev \
        -X github.com/prometheus/common/version.BuildDate=$(date -u -d "@$SOURCE_DATE_EPOCH" +"%Y-%m-%dT%H:%M:%SZ")

update:
  enabled: true
  github:
    identifier: Lusitaniae/apache_exporter
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - curl
        - apache2
        - wait-for-it
  pipeline:
    - name: "Basic functionality tests"
      runs: |
        set -o pipefail
        apache_exporter --version 2>&1 | grep -F -e "${{package.version}}"
        apache_exporter --help 2>&1 | grep -F -e "usage: apache_exporter"
    - name: "Test entrypoint /bin/apache_exporter"
      runs: |
        stat /bin/apache_exporter
        test -x /bin/apache_exporter
    - name: "Test exporter startup without Apache"
      uses: test/daemon-check-output
      with:
        start: apache_exporter --scrape_uri="http://localhost:9999/server-status?auto"
        timeout: 15
        expected_output: |
          Starting apache_exporter
          Listening on
        post: |
          set -o pipefail
          # Test that metrics endpoint is accessible even when Apache is down
          curl -s --retry 3 http://localhost:9117/metrics | grep -F -e "apache_up"
          # Should show apache_up as 0 since Apache is not accessible
          curl -s --retry 3 http://localhost:9117/metrics | grep -F -e "apache_up 0"
    - name: "Test with mock Apache server"
      uses: test/daemon-check-output
      with:
        setup: |
          # Create Apache configuration for mod_status
          mkdir -p /etc/apache2/conf.d
          cat > /etc/apache2/conf.d/status.conf <<EOF
          <Location "/server-status">
              SetHandler server-status
              Require all granted
          </Location>
          ExtendedStatus On
          EOF

          # Start Apache server
          httpd -D FOREGROUND > /dev/null 2>&1 &

          wait-for-it localhost:80 -t 10 --strict
        start: apache_exporter --scrape_uri="http://localhost/server-status?auto"
        timeout: 30
        expected_output: |
          Starting apache_exporter
          Listening on
        post: |
          #!/bin/sh -e
          # Test that metrics endpoint is accessible and shows Apache is up
          curl -s --retry 3 http://localhost:9117/metrics | grep -F -e "apache_up 1"
