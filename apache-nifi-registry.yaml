package:
  name: apache-nifi-registry
  version: "2.4.0"
  epoch: 0
  description: Apache NiFi Registry is a registry for storing and managing shared resources such as versioned flows across one or more instances of NiFi.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      - busybox
      - git
      - java-common-jre
      - openjdk-${{vars.java-version}}-jre
      - xmlstarlet

vars:
  # Bump java-version when NiFiâ€™s build baseline moves beyond Java 21
  #(NiFi 2.x adopted Java 21 in the NAR Maven Plugin 2.1.0 release on Sept 25 2024: https://mvnrepository.com/artifact/org.apache.nifi/nifi-nar-maven-plugin/2.1.0
  #or when Java 21 reaches EOL: https://endoflife.date/java  (Dec 2029)
  java-version: '21'

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - git
      - libarchive-tools
      - maven
      - openjdk-${{vars.java-version}}-default-jdk
      - rsync
      - unzip
      - xmlstarlet
  environment:
    MAVEN_OPTS: |
      -Xmx4g
      -XX:ReservedCodeCacheSize=1g
      -XX:+UseG1GC
      -Dorg.slf4j.simpleLogger.defaultLogLevel=INFO
      -Daether.connector.http.retryHandler.count=5
      -Daether.connector.http.connectionMaxTtl=30
    LANG: "en_US.UTF-8"
    LANGUAGE: "en_US:en"
    JAVA_HOME: "/usr/lib/jvm/java-${{vars.java-version}}-openjdk"
    NIFI_REGISTRY_BASE_DIR: "/opt/nifi-registry"
    NIFI_REGISTRY_HOME: "/opt/nifi-registry/nifi-registry-current"
    NIFI_TOOLKIT_HOME: "/opt/nifi-registry/nifi-toolkit-current"
    NIFI_REGISTRY_LOG_DIR: "/opt/nifi-registry/nifi-registry-current/logs"
    NIFI_REGISTRY_PID_DIR: "/opt/nifi-registry/nifi-registry-current/run"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/nifi
      tag: rel/nifi-${{package.version}}
      expected-commit: 65c7732e46cdfcb17afe0dd7b0a3e0956226bcbb

  - runs: |
      MAVEN_THREADS=1

      cd nifi-registry
      ../mvnw -T${MAVEN_THREADS}C clean package \
        --projects nifi-registry-assembly \
        --also-make \
        -DskipTests

      mkdir -p "${{targets.contextdir}}${NIFI_REGISTRY_BASE_DIR}/nifi-registry-${{package.version}}"
      cd nifi-registry-assembly/target

      bsdtar -xf nifi-registry-${{package.version}}-bin.zip \
        --strip-components=1 \
        -C "${{targets.contextdir}}${NIFI_REGISTRY_BASE_DIR}/nifi-registry-${{package.version}}"

      for d in conf logs database flow_storage work run; do
        mkdir -p "${{targets.contextdir}}${NIFI_REGISTRY_BASE_DIR}/nifi-registry-${{package.version}}/$d"
        chmod 0755    "${{targets.contextdir}}${NIFI_REGISTRY_BASE_DIR}/nifi-registry-${{package.version}}/$d"
      done

      mkdir -p "${{targets.contextdir}}${NIFI_REGISTRY_BASE_DIR}/scripts"
      cp /home/build/nifi-registry/nifi-registry-core/nifi-registry-docker/dockerhub/sh/*.sh \
        "${{targets.contextdir}}${NIFI_REGISTRY_BASE_DIR}/scripts/"
      chmod +x "${{targets.contextdir}}${NIFI_REGISTRY_BASE_DIR}/scripts/"*.sh

      ln -sf "${NIFI_REGISTRY_BASE_DIR}/nifi-registry-${{package.version}}" \
            "${{targets.contextdir}}${NIFI_REGISTRY_HOME}"

  - uses: strip

subpackages:
  - name: ${{package.name}}-toolkit
    description: "Toolkit for Apache NiFi Registry"
    pipeline:
      - runs: |
          cd /home/build/nifi-registry/nifi-registry-toolkit
          ../../mvnw clean package \
            --projects nifi-registry-toolkit-assembly \
            --also-make \
            -DskipTests

          mkdir -p "${{targets.subpkgdir}}/${NIFI_REGISTRY_BASE_DIR}/nifi-toolkit-registry-${{package.version}}"

          cd nifi-registry-toolkit-assembly/target
          unzip nifi-registry-toolkit-${{package.version}}-bin.zip \
            -d "${{targets.subpkgdir}}/${NIFI_REGISTRY_BASE_DIR}/nifi-toolkit-registry-${{package.version}}"

          ln -sf "${NIFI_REGISTRY_BASE_DIR}/nifi-toolkit-registry-${{package.version}}" \
                 "${{targets.subpkgdir}}/${NIFI_TOOLKIT_HOME}"
      - uses: strip
    test:
      pipeline:
        - runs: |
            for dir in \
              "${NIFI_TOOLKIT_HOME}/bin" \
              "${NIFI_TOOLKIT_HOME}/lib"; do
              if [ ! -d "$dir" ] || [ ! -w "$dir" ]; then
                echo "Error: Directory does not exist or is not writable: $dir"
                exit 1
              fi
              echo "OK: Directory exists and is writable: $dir"
            done

update:
  enabled: true
  ignore-regex-patterns:
    - -RC
    - -M
  github:
    identifier: apache/nifi
    use-tag: true
    strip-prefix: rel/nifi-
    tag-filter: rel/nifi-

test:
  environment:
    contents:
      packages:
        - ${{package.name}}
        - ${{package.name}}-toolkit
        - java-common-jre
        - openjdk-${{vars.java-version}}-jre
        - curl
        - grep
        - wait-for-it
    environment:
      LANG: "en_US.UTF-8"
      LANGUAGE: "en_US:en"
      JAVA_HOME: "/usr/lib/jvm/java-${{vars.java-version}}-openjdk"
      NIFI_REGISTRY_BASE_DIR: "/opt/nifi-registry"
      NIFI_REGISTRY_HOME: "/opt/nifi-registry/nifi-registry-current"
      NIFI_TOOLKIT_HOME: "/opt/nifi-registry/nifi-toolkit-current"
      NIFI_REGISTRY_PID_DIR: "/opt/nifi-registry/nifi-registry-current/run"
      NIFI_REGISTRY_LOG_DIR: "/opt/nifi-registry/nifi-registry-current/logs"
      NIFI_REGISTRY_WEB_HTTP_HOST: "0.0.0.0" #for testing
  pipeline:
    - name: Verify Installation
      runs: |
        set -e
        # Verify symlinks point to correct versioned directories
        [ "$(readlink -f ${NIFI_REGISTRY_HOME})" = "${NIFI_REGISTRY_BASE_DIR}/nifi-registry-${{package.version}}" ] || exit 1
        [ "$(readlink -f ${NIFI_TOOLKIT_HOME})" = "${NIFI_REGISTRY_BASE_DIR}/nifi-toolkit-registry-${{package.version}}" ] || exit 1

        # Verify binary executables
        for bin in \
          "${NIFI_REGISTRY_HOME}/bin/nifi-registry.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/start.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/common.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/secure.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/update_database.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/update_bundle_provider.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/update_flow_provider.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/update_login_providers.sh" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts/update_oidc_properties.sh"; do
          if [ ! -x "$bin" ]; then
            echo "Error: Binary is not executable: $bin"
            exit 1
          fi
        done

        # Verify core application directories
        for dir in \
          "${NIFI_REGISTRY_HOME}/bin" \
          "${NIFI_REGISTRY_HOME}/lib" \
          "${NIFI_REGISTRY_HOME}/docs" \
          "${NIFI_REGISTRY_BASE_DIR}/scripts" \
          "${NIFI_REGISTRY_HOME}/conf" \
          "${NIFI_REGISTRY_HOME}/logs" \
          "${NIFI_REGISTRY_HOME}/database" \
          "${NIFI_REGISTRY_HOME}/flow_storage" \
          "${NIFI_REGISTRY_HOME}/work" \
          "${NIFI_REGISTRY_HOME}/run"; do
          if [ ! -d "$dir" ] || [ ! -w "$dir" ]; then
            echo "Error: Directory does not exist or is not writable: $dir"
            exit 1
          fi
          echo "OK: Directory exists and is writable: $dir"
        done
    - uses: test/daemon-check-output
      with:
        setup: |
          # Configure NiFi Registry to listen on all interfaces
          sed -i 's/^nifi.registry.web.http.host=.*/nifi.registry.web.http.host=0.0.0.0/' /opt/nifi-registry/nifi-registry-current/conf/nifi-registry.properties
        start: /opt/nifi-registry/scripts/start.sh start
        expected_output: |
          Started Server on
          Successfully initiated communication with Bootstrap
          Started Application
        timeout: 60
        post: |
          wait-for-it localhost:18080 -t 15
          curl -s http://localhost:18080/nifi-registry-api/access | grep -q "anonymous" || {
            exit 1
          }
