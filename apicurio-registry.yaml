package:
  name: apicurio-registry
  version: "3.0.9"
  epoch: 4
  description: An API/Schema registry - stores APIs and Schemas
  copyright:
    - license: Apache-2.0
  target-architecture:
    - x86_64 # Currently, we can't build for aarch64: https://github.com/Apicurio/apicurio-registry/issues/5633

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - curl
      - go
      - icu
      - maven
      - nodejs-20
      - npm
      - openjdk-17-default-jdk
  environment:
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/Apicurio/apicurio-registry
      tag: v${{package.version}}
      expected-commit: 5a832c5bf75663c0ec05f83a91935d382e012083

  - uses: auth/maven

  - uses: maven/pombump

  - name: Build
    runs: |
      # fixes xml prior to install. previously formatting had issues.
      ./mvnw clean install \
        -Pprod \
        -DskipTests \
        -T$(nproc)C \
        --no-snapshot-updates \
        --no-transfer-progress \
        --fail-fast

  - name: Install
    runs: |
      dest="${{targets.contextdir}}/usr/share/java/${{package.name}}"
      mkdir -p "$dest"

      install -Dm644 ./LICENSE "${dest}/LICENSE"
      install -Dm644 ./README.md "${dest}/README.md"

      tar -zxf ./app/target/apicurio-registry-app-${{package.version}}-all.tar.gz -C "$dest"
      find . -type f -path "*/target/*-${{package.version}}.jar" -exec cp {} "$dest" \;
      find . -type f -path "*/target/*-${{package.version}}-runner.jar" -exec cp {} "$dest" \;

  - uses: strip

subpackages:
  - name: ${{package.name}}-ui
    description: Web UI for Apicurio Registry (apicurio-registry-ui)
    dependencies:
      runtime:
        - nodejs-20
    pipeline:
      - working-directory: ui
        runs: |
          npm install
          npm run clean
          npm audit fix --package-lock-only --legacy-peer-deps || true
          npm run build
          npm run package

          # Move UI assets to expected directory
          mkdir -p ${{targets.contextdir}}/opt/app-root/src
          cp -r ui-app/dist/* ${{targets.contextdir}}/opt/app-root/src/

  - name: ${{package.name}}-nginx-config
    description: nginx configuration files for upstream configuration
    dependencies:
      runtime:
        - docker-nginx
    pipeline:
      - working-directory: ui
        runs: |
          # Copy configuration scripts (per upstream)
          config_dest="${{targets.contextdir}}/usr/local/bin/"
          install -Dm644 .docker-scripts/create-config.cjs "${config_dest}/create-config.cjs"
          install -Dm644 .docker-scripts/update-base-href.cjs "${config_dest}/update-base-href.cjs"
          install -Dm644 .docker-scripts/entrypoint.sh "${config_dest}/entrypoint.sh"
          install -Dm644 .docker-scripts/nginx.conf "${config_dest}/etc/nginx/nginx.conf"

update:
  enabled: true
  github:
    identifier: Apicurio/apicurio-registry
    use-tag: true
    strip-prefix: v
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - openjdk-17-default-jvm
        - bash
        - curl
        - jq
    environment:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk
      DEST: /usr/share/java/apicurio-registry
  pipeline:
    - name: Validate essential JARs
      runs: |
        stat "$DEST/apicurio-registry-app-${{package.version}}.jar"
        stat "$DEST/apicurio-registry-common-${{package.version}}.jar"
    - name: Ensure lib dir
      runs: stat "$DEST/lib"
    - name: "Test runner"
      uses: test/daemon-check-output
      with:
        start: "java -jar $DEST/apicurio-registry-app-${{package.version}}-runner.jar --server.port=8080"
        timeout: 60
        expected_output: |
          constructed successfully
          Initializing the Apicurio Registry
        post: |
          curl -s http://localhost:8080/apis/registry/v2 | grep -qi "Core Registry API"
