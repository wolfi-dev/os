package:
  name: apisix-ingress-controller
  version: "1.8.4"
  epoch: 2
  description: APISIX Ingress Controller for Kubernetes.
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 019d719ef421e97ab47e68c0f34724010b05f1e0
      repository: https://github.com/apache/apisix-ingress-controller
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.38.0
        golang.org/x/oauth2@v0.27.0
        google.golang.org/grpc@v1.57.1

  - uses: go/build
    with:
      packages: .
      ldflags: |
        -X=github.com/apache/apisix-ingress-controller/pkg/version._buildVersion=${{package.version}}
        -X=github.com/apache/apisix-ingress-controller/pkg/version._buildGitRevision=$(git rev-parse --short HEAD)
        -X=github.com/apache/apisix-ingress-controller/pkg/version._buildOS=$(uname -s)/$(uname -m)
      output: apisix-ingress-controller

subpackages:
  # NOTE: Upstream v1.8.x uses the "/ingress-apisix" layout with a custom entrypoint.
  # This package mirrors that structure for compatibility. When bumping to v2.x (currently in RC stage it use "/app/..." layout) and need to update entrypoint and file paths accordingly
  - name: ${{package.name}}-compat
    description: Compatibility package for apisix-ingress-controller to match upstream paths
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/ingress-apisix/conf
          ln -sf /usr/bin/apisix-ingress-controller ${{targets.subpkgdir}}/ingress-apisix/apisix-ingress-controller
          cp ./conf/apisix-schema.json ${{targets.subpkgdir}}/ingress-apisix/conf/apisix-schema.json
    test:
      pipeline:
        - runs: |
            stat /ingress-apisix/apisix-ingress-controller

update:
  enabled: true
  github:
    identifier: apache/apisix-ingress-controller
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - runs: |
        set -o pipefail
        apisix-ingress-controller version | grep "${{ package.version }}"
        apisix-ingress-controller --help 2>&1 | grep -F -e "Yet another Ingress controller"
    - uses: test/kwok/cluster
    - uses: test/daemon-check-output
      with:
        setup: |
          kubectl config view --minify --raw > /tmp/kubeconfig.yaml
        start: |
          apisix-ingress-controller ingress --default-apisix-cluster-base-url http://apisix-service:9180/apisix/admin --kubeconfig /tmp/kubeconfig.yaml
        timeout: 30
        expected_output: |
          start leader election
          start api server
        post: |
          curl -fsSL http://127.0.0.1:8080/metrics | grep -q go_gc_duration_seconds && echo "Metrics endpoint is live"
