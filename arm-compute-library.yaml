package:
  name: arm-compute-library
  version: "52.4.0"
  epoch: 1
  description: A collection of low-level machine learning functions optimized for Arm® Cortex®-A, Arm® Neoverse™ and Arm® Mali™ GPUs architectures
  copyright:
    - license: Apache-2.0 AND BSD-3-Clause AND MIT

# We build an empty package on !aarch64 so that it can be declared as a
# build-dependency, since melange doesn't support arch-specific build-deps
environment:
  contents:
    packages:
      - build-base
      - busybox
      - scons

pipeline:
  - if: ${{build.arch}} == 'aarch64'
    uses: git-checkout
    with:
      repository: https://github.com/ARM-software/ComputeLibrary
      tag: v${{package.version}}
      expected-commit: c1d8580bef90c09a3c480d6bb3f72f13678af2eb

  - if: ${{build.arch}} == 'aarch64'
    runs: |
      # From https://github.com/uxlfoundation/oneDNN/blob/v3.9.1/.github/automation/aarch64/build_acl.sh
      scons -j$(nproc) Werror=0 asserts=0 neon=1 opencl=0 embed_kernels=0 os=linux arch=armv8.2-a build=native multi_isa=1 fixed_format_kernels=1 cppthreads=0 openmp=1 examples=0 validation_tests=0 install_dir=install

  - if: ${{build.arch}} == 'aarch64'
    runs: |
      mkdir -p "${{targets.contextdir}}/usr/lib"
      mv build/libarm_compute* "${{targets.contextdir}}/usr/lib"
      mv build/install/include "${{targets.contextdir}}/usr"
      # https://github.com/ARM-software/ComputeLibrary/issues/1177
      mkdir -p "${{targets.contextdir}}/usr/include/arm_compute/runtime/experimental/operators/src/cpu"
      cp -a src/cpu/*.h "${{targets.contextdir}}/usr/include/arm_compute/runtime/experimental/operators/src/cpu"

test:
  pipeline:
    - if: ${{build.arch}} == 'aarch64'
      uses: test/tw/ldd-check
    - if: ${{build.arch}} != 'aarch64'
      uses: test/emptypackage

subpackages:
  - name: ${{package.name}}-dev
    description: A collection of low-level machine learning functions optimized for Arm® Cortex®-A, Arm® Neoverse™ and Arm® Mali™ GPUs architectures -- development files
    dependencies:
      runtime:
        - ${{package.name}}=${{package.full-version}}
    pipeline:
      - if: ${{build.arch}} == 'aarch64'
        uses: split/dev
    test:
      environment:
        contents:
          packages:
            - build-base
      pipeline:
        - if: ${{build.arch}} == 'aarch64'
          uses: git-checkout
          with:
            repository: https://github.com/ARM-software/ComputeLibrary
            tag: v${{package.version}}
            expected-commit: c1d8580bef90c09a3c480d6bb3f72f13678af2eb
        - if: ${{build.arch}} == 'aarch64'
          runs: |
            # https://artificial-intelligence.sites.arm.com/computelibrary/latest/how_to_build.xhtml
            g++ examples/neon_cnn.cpp utils/Utils.cpp \
              -I. -Iinclude -std=c++14 -larm_compute -o neon_cnn
            ./neon_cnn
            g++ examples/graph_lenet.cpp utils/Utils.cpp \
              utils/GraphUtils.cpp utils/CommonGraphOptions.cpp \
              -I. -Iinclude -std=c++14 -larm_compute_graph -larm_compute \
              -Wl,--allow-shlib-undefined -o graph_lenet
            ./graph_lenet
        - if: ${{build.arch}} != 'aarch64'
          uses: test/emptypackage

update:
  enabled: true
  github:
    identifier: ARM-software/ComputeLibrary
    strip-prefix: v
