#nolint:valid-pipeline-git-checkout-commit,valid-pipeline-git-checkout-tag
package:
  name: atmoz-sftp
  version: "0.0.0_git20250519"
  epoch: 0
  description: Various scripts from https://github.com/atmoz/sftp to help run SFTP in a container
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - bash
      - coreutils
      - grep
      - openssh-client # Includes `sftp` command
      - openssh-keygen # used in entrypoint script
      - openssh-server # includes sshd-session
      - openssh-sftp-server
      - posix-libc-utils # For `getent` command
      - sed
      - shadow

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - libedit-dev
      - openssh-client
      - openssh-keygen
      - openssl-dev
      - posix-libc-utils
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/atmoz/sftp
      branch: master

  - runs: |
      mkdir -p ${{targets.contextdir}}/etc/ssh/sshd_config.d
      mkdir -p ${{targets.contextdir}}/usr/local/bin
      mkdir -p ${{targets.contextdir}}/usr/bin
      mkdir -p ${{targets.contextdir}}/var/run/sshd

      # minimal sftp config
      cat <<EOF > ${{targets.contextdir}}/etc/ssh/sshd_config.d/atmoz_sftp.conf
      # Faster connection
      # See: https://github.com/atmoz/sftp/issues/11
      UseDNS no

      # Limited access
      PermitRootLogin no
      X11Forwarding no
      AllowTcpForwarding no

      # Force sftp and chroot jail
      Subsystem sftp internal-sftp
      ForceCommand internal-sftp
      ChrootDirectory %h
      EOF

      cp -av files/create-sftp-user ${{targets.contextdir}}/usr/local/bin/
      cp -av files/entrypoint ${{targets.contextdir}}/

      rm -f ${{targets.contextdir}}/etc/ssh/ssh_host_*key*

test:
  environment:
    contents:
      packages:
        - wait-for-it
        - sshpass
    accounts:
      groups:
        - groupname: users
          gid: 100
      run-as: 0 # entrypoint script needs root to run some commands like chown
  pipeline:
    - name: "Verify SFTP entrypoint"
      runs: |
        /entrypoint foo:pass:::upload & wait-for-it localhost:22
        netstat -tan | grep ':22'

        echo "test file" > /tmp/test.txt
        sshpass -p "pass" sftp -o StrictHostKeyChecking=no -P 22 foo@127.0.0.1 <<EOF
          put /tmp/test.txt upload/test.txt
          ls upload/test.txt
          exit
        EOF

update:
  enabled: true
  git: {}
  schedule:
    period: weekly
    reason: This project doesn't do releases and everything is commit based
