package:
  name: aws-load-balancer-controller
  version: 2.11.0
  epoch: 3
  description: A Kubernetes controller for Elastic Load Balancers
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kubernetes-sigs/aws-load-balancer-controller
      tag: v${{package.version}}
      expected-commit: ba4152c1ba7c75be194d75cf343219d4aeaeb116

  - uses: go/bump
    with:
      deps: golang.org/x/net@v0.33.0

  - runs: |
      # https://github.com/kubernetes-sigs/aws-load-balancer-controller/blob/main/Dockerfile#L18-L27
      VERSION_PKG=sigs.k8s.io/aws-load-balancer-controller/pkg/version
      GIT_VERSION=$(git describe --tags --dirty --always) && \
      GIT_COMMIT=$(git rev-parse HEAD) && \
      BUILD_DATE=$(date +%Y-%m-%dT%H:%M:%S%z) && \
      GOOS=$(go env GOOS) GOARCH=$(go env GOARCH) GO111MODULE=on \
      CGO_CPPFLAGS="-D_FORTIFY_SOURCE=2" \
      CGO_LDFLAGS="-Wl,-z,relro,-z,now" \
      go build -buildmode=pie -tags 'osusergo,netgo,static_build' -ldflags="-w -linkmode=external -extldflags '-static-pie' -X ${VERSION_PKG}.GitVersion=${GIT_VERSION} -X ${VERSION_PKG}.GitCommit=${GIT_COMMIT} -X ${VERSION_PKG}.BuildDate=${BUILD_DATE}" -mod=readonly -a -o /home/build/out/controller main.go

  - runs: |
      install -Dm755 /home/build/out/controller "${{targets.destdir}}"/usr/bin/controller

subpackages:
  - name: "aws-load-balancer-controller-compat"
    description: "Compatibility package to place binaries in the location expected by upstream helm charts"
    pipeline:
      - runs: |
          # The helm chart expects the binaries to be in / instead of /usr/bin
          mkdir -p "${{targets.subpkgdir}}"
          ln -sf /usr/bin/controller ${{targets.subpkgdir}}/controller

update:
  enabled: true
  github:
    identifier: kubernetes-sigs/aws-load-balancer-controller
    strip-prefix: v
    tag-filter: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - bash
        - coreutils
        - grep
  pipeline:
    - name: "Verify binary exists and is executable"
      runs: |
        test -x /usr/bin/controller
    - name: "Check basic controller initialization"
      runs: |
        # Should fail gracefully without AWS credentials
        if controller --cluster-name=test 2>&1 | grep -q "error"; then
          exit 0
        else
          exit 1
        fi
    - name: "Verify controller metrics endpoint configuration"
      runs: |
        controller --metrics-bind-addr=":8080" --help 2>&1 | grep -q "metrics-bind-addr"
