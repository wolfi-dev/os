package:
  name: az
  version: "2.69.0"
  epoch: 0
  description: Azure CLI
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - py3-pip
      - python-3
      - python-3-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/Azure/azure-cli/
      tag: azure-cli-${{package.version}}
      expected-commit: cf83ff0089398910a91dc40d1f8b716b4be179de

  - name: Python Build
    runs: |
      pip install wheel
      cd src/azure-cli
      python setup.py bdist_wheel
      cd ../azure-cli-core
      python setup.py bdist_wheel

  - runs: |
      # Install the built wheels directly into the package filesystem
      pip install --prefix=${{targets.destdir}}/usr --no-compile src/azure-cli/dist/*.whl src/azure-cli-core/dist/*.whl

  - uses: strip

update:
  enabled: true
  github:
    identifier: Azure/azure-cli
    strip-prefix: azure-cli-

test:
  pipeline:
    - name: Validate Core CLI Commands
      runs: |
        # Check az version in multiple formats
        az version -o json
        az version -o table
        az version -o yaml

        # Check top-level help commands
        az -h
        az --help

        # Verify that core command groups exist
        for cmd in account group network storage; do
          if ! az "$cmd" -h > /dev/null; then
            echo "Core command group '$cmd' not found"
            exit 1
          fi
        done

        echo "Basic command tests passed!"
    - name: Extended CLI Functionality Checks
      runs: |
        # Test cloud-related commands without authentication
        az cloud list -o table
        az cloud show -n AzureCloud -o json

        # Test configure commands
        az configure -h
        az configure --list-defaults

        # Verify presence of additional command groups
        for cmd in cloud extension configure; do
          if ! az "$cmd" -h > /dev/null; then
            echo "Command group '$cmd' not found"
            exit 1
          fi
        done

        # List available extensions (no need to install them)
        az extension list-available --output table

        # Check if 'az find' help works
        az find --help

        # Validate debug output
        az version --debug

        # Verify additional commands are available
        for cmd in feedback rest upgrade interactive; do
          if ! az "$cmd" -h > /dev/null; then
            echo "Command group or command '$cmd' not found"
            exit 1
          fi
        done

        # Check help for these commands explicitly
        az feedback -h
        az rest -h
        az upgrade -h
        az interactive -h

        echo "Expanded command tests passed!"
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}
