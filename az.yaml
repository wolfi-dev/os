package:
  name: az
  version: "2.75.0"
  epoch: 0
  description: Azure CLI
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - py3-cryptography

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - py3-cryptography
      - py3-pip
      - python-3
      - python-3-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/Azure/azure-cli/
      tag: azure-cli-${{package.version}}
      expected-commit: 7952300337b5b7f986131aee2efa39ea403a6902

  - name: Python Build
    runs: |
      pip install wheel
      cd src/azure-cli
      python setup.py bdist_wheel
      cd ../azure-cli-core
      python setup.py bdist_wheel

  - runs: |
      # Install the built wheels directly into the package filesystem
      pip install --prefix=${{targets.destdir}}/usr --no-compile src/azure-cli/dist/*.whl src/azure-cli-core/dist/*.whl

  - uses: strip

update:
  enabled: true
  github:
    identifier: Azure/azure-cli
    strip-prefix: azure-cli-

test:
  pipeline:
    - name: Validate Core CLI Commands
      runs: |
        # Check az version in multiple formats
        az version -o json
        az version -o table
        az version -o yaml

        # Check top-level help commands
        az -h
        az --help

        # Verify that core command groups exist
        for cmd in account group network storage; do
          if ! az "$cmd" -h > /dev/null; then
            echo "Core command group '$cmd' not found"
            exit 1
          fi
        done

        echo "Basic command tests passed!"
    - name: Extended CLI Functionality Checks
      runs: |
        # Test cloud-related commands without authentication
        az cloud list -o table
        az cloud show -n AzureCloud -o json

        # Test configure commands
        az configure -h
        az configure --list-defaults

        # Verify presence of additional command groups
        for cmd in cloud extension configure; do
          if ! az "$cmd" -h > /dev/null; then
            echo "Command group '$cmd' not found"
            exit 1
          fi
        done

        # List available extensions (no need to install them)
        az extension list-available --output table

        # Check if 'az find' help works
        az find --help

        # Validate debug output
        az version --debug

        # Verify additional commands are available
        for cmd in feedback rest upgrade interactive; do
          if ! az "$cmd" -h > /dev/null; then
            echo "Command group or command '$cmd' not found"
            exit 1
          fi
        done

        # Check help for these commands explicitly
        az feedback -h
        az rest -h
        az upgrade -h
        az interactive -h

        echo "Expanded command tests passed!"
    - uses: test/tw/ldd-check

subpackages:
  - name: ${{package.name}}-iamguarded-compat
    description: "compat package with iamguarded/azure-cli image"
    dependencies:
      runtime:
        - az=${{package.full-version}}
        - bash
        - busybox
        - merged-usrsbin
        - python-3
        - wolfi-baselayout
    pipeline:
      - uses: iamguarded/build-compat
        with:
          package: azure-cli
          version: "2"
      - runs: |
          mkdir -p /opt/iamguarded/azure-cli/bin
          chmod g+rwX /opt/iamguarded

          # Create symlink for az binary
          ln -sf /usr/bin/az /opt/iamguarded/azure-cli/bin/az

          # Create expected directories
          mkdir -p /opt/iamguarded/azure-cli/tmp
          mkdir -p /opt/iamguarded/azure-cli/logs
          mkdir -p /iamguarded/azure-cli
      - uses: iamguarded/finalize-compat
        with:
          package: azure-cli
          version: "2"
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: iamguarded/test-compat
          with:
            package: azure-cli
            version: "2"
        - name: Verify iamguarded symlinks work
          runs: |
            # Test az command through symlink
            /opt/iamguarded/azure-cli/bin/az --version

            # Test basic command functionality
            /opt/iamguarded/azure-cli/bin/az -h
            /opt/iamguarded/azure-cli/bin/az version -o json
