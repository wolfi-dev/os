From 50902b50a894a8d50b86b3229fbdaaf4a8496ff5 Mon Sep 17 00:00:00 2001
From: Debasish Biswas <debasishbsws.dev@gmail.com>
Date: Mon, 13 Oct 2025 16:49:47 +0000
Subject: [PATCH] fix(melange): downgrade bazel_features to v1.21.0 for Bazel
 7.6.2 compatibility

Problem:
- bazel_features v1.21.0+ expects the 'macro' function introduced in Bazel 8.0.0
- During bootstrap, Bazel 7.6.2 builds itself using its own source, creating a
  bootstrap binary that lacks the macro function
- This causes name 'macro' is not defined errors when bazel_features attempts
  to use globals.bzl functionality during the self-hosted build phase

Root Cause:
The issue manifests during Bazel's two-stage bootstrap process:
1. Stage 1: Build minimal Bazel 7.6.2 from scratch using javac
2. Stage 2: Use bootstrap Bazel 7.6.2 to build final optimized binary
The failure occurs in Stage 2 when the bootstrap Bazel encounters incompatible
bazel_features that expects newer Bazel 8.0.0+ APIs.

Solution:
- Use bazel_features v1.21.0, which is the latest version compatible with Bazel 7.x
- This version provides feature detection capabilities without requiring the
  macro function introduced in symbolic macros (Bazel 8.0.0+)

Signed-off-by: Debasish Biswas <debasishbsws.dev@gmail.com>
---
 MODULE.bazel | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/MODULE.bazel b/MODULE.bazel
index 0a5ea5b..0788de9 100755
--- a/MODULE.bazel
+++ b/MODULE.bazel
@@ -42,6 +42,11 @@ single_version_override(
     patches = ["//third_party:rules_jvm_external_6.0.patch"],
 )
 
+single_version_override(
+    module_name = "bazel_features",
+    version = "1.21.0",
+)
+
 local_path_override(
     module_name = "remoteapis",
     path = "./third_party/remoteapis",
-- 
2.51.0

