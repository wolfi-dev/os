#nolint:git-checkout-must-use-github-updates
package:
  name: binutils
  version: "2.44"
  epoch: 0
  description: "GNU binutils"
  copyright:
    - license: GPL-3.0-or-later
  resources:
    cpu: 16
    memory: 16Gi

environment:
  contents:
    packages:
      - bison
      - build-base
      - busybox
      - ca-certificates-bundle
      - flex
      - isl
      - posix-libc-utils
      - texinfo
      - wolfi-baselayout
      - zstd-dev

var-transforms:
  - from: ${{package.version}}
    match: \.
    replace: _
    to: underscore-package-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://sourceware.org/git/binutils-gdb.git
      tag: binutils-${{vars.underscore-package-version}}
      expected-commit: 815d9a14cbbb3b81843f7566222c87fb22e7255d

  - name: 'Configure binutils'
    runs: |
      ./configure \
        --prefix=/usr \
        --build=$(./config.guess) \
        --host=${{host.triplet.gnu}} \
        --target=${{host.triplet.gnu}} \
        --disable-nls \
        --disable-werror \
        --disable-multilib \
        --disable-gprofng \
        --disable-gdb \
        --disable-gdbserver \
        --enable-deterministic-archives \
        --enable-ld=default \
        --enable-gold \
        --enable-plugins \
        --enable-default-execstack=no \
        --enable-default-hash-style=gnu \
        --enable-textrel-check=error

  - uses: autoconf/make

  - uses: autoconf/make-install

  - name: 'Clean up documentation'
    runs: |
      rm -rf ${{targets.destdir}}/usr/share/info

  - uses: strip

subpackages:
  - name: "binutils-dev"
    description: "binutils development headers"
    pipeline:
      - uses: split/dev

  - name: "binutils-gold"
    description: "binutils (gold linker)"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv "${{targets.destdir}}"/usr/bin/ld.gold "${{targets.subpkgdir}}"/usr/bin/
    test:
      pipeline:
        - runs: |
            ld.gold --version
            ld.gold --help

update:
  enabled: true
  release-monitor:
    identifier: 7981

test:
  pipeline:
    - name: Verify no gdb or gdbserver
      runs: |
        set +x
        fails=""
        for p in gdb gdbserver; do
          if ! out=$(command -v "$p"); then
            echo "PASS: package does not contain '$p'"
            continue
          fi
          echo "FAIL: package contains $p:  $out"
          fails="$fails $out"
        done
        [ -z "$fails" ] || exit 1
    # AUTOGENERATED
    - runs: |
        addr2line --version
        ar --version
        as --version
        c++filt --version
        dwp --version
        elfedit --version
        gprof --version
        ld --version
        ld.bfd --version
        nm --version
        objcopy --version
        objdump --version
        ranlib --version
        readelf --version
        size --version
        strings --version
        strip --version
        addr2line --help
        ar --help
        as --help
        c++filt --help
        dwp --help
        elfedit --help
        gprof --help
        ld --help
        ld.bfd --help
        nm --help
        objcopy --help
        objdump --help
        ranlib --help
        readelf --help
        size --help
        strings --help
        strip --help
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}
