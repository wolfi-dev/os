package:
  name: bison
  version: 3.8.2
  epoch: 7
  description: "The GNU general-purposes parser generator"
  copyright:
    - license: GPL-3.0-or-later
  dependencies:
    runtime:
      - m4

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - m4
      - wolfi-baselayout

pipeline:
  - uses: fetch
    with:
      uri: https://ftp.gnu.org/gnu/bison/bison-${{package.version}}.tar.gz
      expected-sha256: 06c9e13bdf7eb24d4ceb6b59205a4f67c2c7e7213119644430fe82fbd14a0abb

  - name: 'Configure bison'
    runs: |
      ./configure \
        --prefix=/usr \
        --libdir=/lib \
        --sysconfdir=/etc \
        --datadir=/usr/share \
        --mandir=/usr/share/man \
        --infodir=/usr/share/info \
        --host=${{host.triplet.gnu}} \
        --target=${{host.triplet.gnu}}

  - runs: |
      make -j$(nproc) V=1

  - uses: autoconf/make-install

  - runs: |
      rm -rf "${{targets.destdir}}"/usr/lib

  - uses: strip

update:
  enabled: true
  release-monitor:
    identifier: 193

test:
  environment:
    contents:
      packages:
        - build-base
        - m4
        - gcc
  pipeline:
    - name: "Verify basic command availability"
      runs: |
        bison --version
        yacc --version
    - name: "Test basic grammar parsing"
      runs: |
        cat > calc.y << 'EOF'
        %{
        #include <stdio.h>
        void yyerror(const char *s) { fprintf(stderr, "%s\n", s); }
        int yylex(void) { return 0; }
        int main(void) { return 0; }
        %}
        %token NUMBER
        %%
        exp: NUMBER
        %%
        EOF
        bison calc.y
    - name: "Test yacc compatibility mode"
      runs: |
        cat > simple.y << 'EOF'
        %token TOKEN
        %%
        start: TOKEN
        %%
        EOF
        yacc simple.y
    - name: "Verify different output formats"
      runs: |
        cat > test.y << 'EOF'
        %token TEST
        %%
        rule: TEST
        %%
        EOF
        bison -d test.y
        test -f test.tab.h
        test -f test.tab.c
    - name: "Test verbose output generation"
      runs: |
        bison -v test.y
        test -f test.output
    - name: "Test XML output capability"
      runs: |
        bison -x test.y
        test -f test.xml
    - name: "Test error handling with invalid input"
      runs: |
        cat > invalid.y << 'EOF'
        %invalid_directive
        %%
        invalid: grammar
        %%
        EOF
        ! bison invalid.y
    - name: "Test grammar with multiple rules"
      runs: |
        cat > multi.y << 'EOF'
        %token NUM ID
        %%
        expr: NUM
           | ID
           | expr '+' expr
           | expr '*' expr
           ;
        %%
        EOF
        bison multi.y
    - name: "Test location tracking feature"
      runs: |
        cat > loc.y << 'EOF'
        %locations
        %token TOKEN
        %%
        start: TOKEN
        %%
        EOF
        bison --locations loc.y
    - name: "Verify report generation"
      runs: |
        bison --report=all test.y
        test -f test.output

subpackages:
  - name: bison-doc
    description: bison documentation
    pipeline:
      - uses: split/manpages
      - uses: split/infodir
    test:
      pipeline:
        - uses: test/docs
