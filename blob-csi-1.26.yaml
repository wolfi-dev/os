package:
  name: blob-csi-1.26
  version: 1.26.2
  epoch: 2
  description: Azure Blob Storage CSI driver
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - blob-csi=${{package.full-version}}

environment:
  contents:
    packages:
      - bash
      - blobfuse2
      - blobfuse2-health-monitor
      - ca-certificates
      - conntrack-tools
      - curl
      - fuse3
      - iproute2
      - iptables
      - kmod
      - procps
      - util-linux

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 4f9a396d340c0e625883eedc1d1d85ae4b7d86f7
      repository: https://github.com/kubernetes-sigs/blob-csi-driver
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/net@v0.38.0
        golang.org/x/oauth2@v0.27.0

  - uses: go/build
    with:
      ldflags: |
        -X sigs.k8s.io/blob-csi-driver/pkg/blob.driverVersion=v${{package.version}}
        -X sigs.k8s.io/blob-csi-driver/pkg/blob.gitCommit=$(git rev-parse HEAD)
        -X sigs.k8s.io/blob-csi-driver/pkg/blob.buildDate=$(TZ="UTC" date +"%Y-%m-%dT%H:%M:%SZ")
      output: blobplugin
      packages: ./pkg/blobplugin

  - uses: go/build
    with:
      ldflags: |
        -X sigs.k8s.io/blob-csi-driver/pkg/blob.driverVersion=v${{package.version}}
        -X sigs.k8s.io/blob-csi-driver/pkg/blob.gitCommit=$(git rev-parse HEAD)
        -X sigs.k8s.io/blob-csi-driver/pkg/blob.buildDate=$(TZ="UTC" date +"%Y-%m-%dT%H:%M:%SZ")
      output: blobfuse-proxy
      packages: ./pkg/blobfuse-proxy

  - runs: |
      mkdir -p ${{targets.contextdir}}/usr/lib/blobfuse-proxy
      mkdir -p ${{targets.contextdir}}/lib/systemd/system
      cp ./pkg/blobfuse-proxy/init.sh ${{targets.contextdir}}/usr/lib/blobfuse-proxy/
      cp ./pkg/blobfuse-proxy/install-proxy.sh ${{targets.contextdir}}/usr/lib/blobfuse-proxy/
      cp ./pkg/blobfuse-proxy/install-proxy-rhcos.sh ${{targets.contextdir}}//usr/lib/blobfuse-proxy/
      cp ./pkg/blobfuse-proxy/blobfuse-proxy.service ${{targets.contextdir}}/lib/systemd/system/

subpackages:
  - name: "${{package.name}}-compat"
    description: "Compatibility package to place binaries in the location expected by upstream helm charts"
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}
          mkdir -p ${{targets.subpkgdir}}/blobfuse-proxy
          ln -sf /usr/bin/blobplugin ${{targets.subpkgdir}}/blobplugin
          ln -sf /usr/bin/blobfuse-proxy ${{targets.subpkgdir}}/blobfuse-proxy/blobfuse-proxy
          ln -sf /usr/lib/blobfuse-proxy/init.sh ${{targets.subpkgdir}}/blobfuse-proxy/init.sh
          ln -sf /usr/lib/blobfuse-proxy/install-proxy.sh ${{targets.subpkgdir}}/blobfuse-proxy/install-proxy.sh
          ln -sf /usr/lib/blobfuse-proxy/install-proxy-rhcos.sh ${{targets.subpkgdir}}/blobfuse-proxy/install-proxy-rhcos.sh
          ln -sf /lib/systemd/system/blobfuse-proxy.service ${{targets.subpkgdir}}/blobfuse-proxy/blobfuse-proxy.service
    dependencies:
      provides:
        - blob-csi-compat=${{package.full-version}}

update:
  enabled: true
  github:
    identifier: kubernetes-sigs/blob-csi-driver
    strip-prefix: v
    tag-filter: v1.26.

test:
  pipeline:
    - uses: test/kwok/cluster
    - runs: blobplugin --version | grep ${{package.version}}
    - runs: |
        mkdir -p /etc/kubernetes
        cat <<EOF > /etc/kubernetes/azure.json
        {
          "cloud":"AzurePublicCloud",
          "tenantId": "xxxx-xxxx-xxxx-xxxx-xxxx",
          "subscriptionId": "xxxx-xxxx-xxxx-xxxx-xxxx",
          "resourceGroup": "resource-group-name",
          "location": "eastus2",
          "aadClientId": "xxxx-xxxx-xxxx-xxxx-xxxx",
          "aadClientSecret": "xxxx-xxxx-xxxx-xxxx-xxxx",
          "useManagedIdentityExtension": false,
          "userAssignedIdentityID": "",
          "useInstanceMetadata": true
        }
        EOF
    # Run the binary and verify its startup
    - name: Run and test `blobplugin`
      uses: test/daemon-check-output
      with:
        start: /usr/bin/blobplugin -kubeconfig=/root/.kube/config -v=5
        timeout: 30
        expected_output: |
          Driver Version: v${{package.version}}
          Driver Name: blob.csi.azure.com
          Enabling controller service capability: CREATE_DELETE_VOLUME
          Enabling controller service capability: CLONE_VOLUME
          Enabling volume access mode: MULTI_NODE_MULTI_WRITER
