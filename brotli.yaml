package:
  name: brotli
  version: 1.1.0
  epoch: 4
  description: "a generic lossless compression algorithm"
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - libtool
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/google/brotli.git
      tag: v${{package.version}}
      expected-commit: ed738e842d2fbdf2d6459e39267a633c4a9b2f5d

  - uses: cmake/configure

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

subpackages:
  - name: "brotli-dev"
    description: "headers for brotli"
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - brotli
    test:
      pipeline:
        - uses: test/pkgconf

  - name: "libbrotlicommon1"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv "${{targets.destdir}}"/usr/lib/libbrotlicommon.so.* "${{targets.subpkgdir}}"/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: libbrotlicommon1

  - name: "libbrotlienc1"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv "${{targets.destdir}}"/usr/lib/libbrotlienc.so.* "${{targets.subpkgdir}}"/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: libbrotlienc1

  - name: "libbrotlidec1"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv "${{targets.destdir}}"/usr/lib/libbrotlidec.so.* "${{targets.subpkgdir}}"/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: libbrotlidec1

update:
  enabled: true
  ignore-regex-patterns:
    - "^dev\\/null$"
  github:
    identifier: google/brotli
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - bash
        - coreutils
        - findutils
  pipeline:
    - name: "Verify brotli version"
      runs: |
        brotli --version
    - name: "Basic compression test"
      runs: |
        echo "Hello, Brotli compression test" > original.txt
        brotli original.txt
        test -f original.txt.br
        rm original.txt  # Remove original before decompressing
        brotli --decompress original.txt.br
        diff original.txt <(echo "Hello, Brotli compression test")
    - name: "Compression levels test"
      runs: |
        echo "Testing different compression levels" > level_test.txt
        brotli -q 1 level_test.txt -o level1.br
        brotli -q 11 level_test.txt -o level11.br
        test -f level1.br
        test -f level11.br
        brotli --decompress level1.br
        brotli --decompress level11.br
        diff level_test.txt level1
        diff level_test.txt level11
    - name: "Stream compression test"
      runs: |
        echo "Testing stream compression" | brotli > stream.br
        brotli --decompress < stream.br > stream_decoded
        diff stream_decoded <(echo "Testing stream compression")
    - name: "Input validation test"
      runs: |
        # Should fail with non-existent input
        ! brotli nonexistent.txt
        # Should fail with invalid compression level
        ! brotli -q 12 test1.txt
