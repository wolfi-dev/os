package:
  name: buf
  version: "1.50.0"
  epoch: 2
  description: A new way of working with Protocol Buffers.
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - ca-certificates-bundle
      - wolfi-baselayout

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/bufbuild/buf
      tag: v${{package.version}}
      expected-commit: b2393b4dd155690d51b284bc7504808b32e2998d

  - uses: go/build
    with:
      packages: ./cmd/buf
      modroot: .
      output: buf
      ldflags: -X main.version=${{package.version}} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date ${SOURCE_DATE_EPOCH:+ -d@${SOURCE_DATE_EPOCH}} "+%Y-%m-%dT%H:%M:%SZ")

  - uses: strip

update:
  enabled: true
  github:
    strip-prefix: v
    identifier: bufbuild/buf

test:
  pipeline:
    - name: Test buf version command
      runs: |
        # Check the version of buf
        buf --version
        buf --help
    - name: Test buf lint command
      runs: |
        # Create a sample .proto file
        echo 'syntax = "proto3"; package examplepb;' > invalidFileName.proto

        # Create a sample buf.yaml configuration file
        cat <<EOF > buf.yaml
        version: v1
        name: buf.build/bufbuild/buf
        lint:
          use:
            - DEFAULT
            - UNARY_RPC
        breaking:
          use:
            - FILE
          ignore_unstable_packages: true
        EOF

        # Expected output
        expected_output=$(cat <<'EOF'
        invalidFileName.proto:1:1:Filename "invalidFileName.proto" should be lower_snake_case.proto, such as "invalid_file_name.proto".
        invalidFileName.proto:2:1:Files with package "examplepb" must be within a directory "examplepb" relative to root but were in directory ".".
        invalidFileName.proto:2:1:Package name "examplepb" should be suffixed with a correctly formed version, such as "examplepb.v1".
        EOF
        )

        # Run the lint command and check the output
        buf lint invalidFileName.proto 2>&1 | grep -q "$expected_output"
