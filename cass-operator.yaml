package:
  name: cass-operator
  version: "1.24.0"
  epoch: 1
  description: Manages Cassandra cluster as standalone product or as part of the k8ssandra-operator
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go
      - wolfi-baselayout

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/k8ssandra/cass-operator.git
      tag: v${{package.version}}
      expected-commit: 70e1c9e42159c50f903cafb8fd0caf83827afe7d

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/net@v0.38.0

  - uses: go/build
    with:
      modroot: .
      packages: ./cmd
      output: manager

  - uses: strip

subpackages:
  - name: cass-operator-compat
    description: "Compatibility package to place binaries in the location expected by upstream helm charts"
    pipeline:
      - runs: |
          # The helm chart expects the cass-operator binaries to be in / instead of /usr/bin
          mkdir -p "${{targets.subpkgdir}}"
          ln -sf /usr/bin/manager ${{targets.subpkgdir}}/manager
      - uses: strip
    test:
      pipeline:
        - runs: |
            # Verify that the symlink exists and points to the correct location
            test -L /manager && test "$(readlink /manager)" = "/usr/bin/manager"

  - name: cass-operator-config
    description: "A configuration file for the Vector"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/etc/vector
          cp ./config/logger/vector_config.toml ${{targets.contextdir}}/etc/vector/vector.toml
    test:
      pipeline:
        - runs: |
            # Verify that the configuration file exists and is readable
            test -f /etc/vector/vector.toml && test -r /etc/vector/vector.toml

update:
  enabled: true
  github:
    identifier: k8ssandra/cass-operator
    strip-prefix: v
    tag-filter: v

vars:
  bin-name: manager

test:
  environment:
    contents:
      packages:
        - cmd:mkcert
        - curl
    environment:
      KUBERNETES_SERVICE_HOST: "127.0.0.1"
      KUBERNETES_SERVICE_PORT: "8080"
  pipeline:
    - uses: test/tw/ldd-check
    - runs: |
        ${{vars.bin-name}} --help
    - uses: test/kwok/cluster
    - name: Launch operator with dummy kubeconfig
      uses: test/daemon-check-output
      with:
        setup: |
          kubectl config view --minify --raw > /tmp/kubeconfig.yaml
          mkcert example.com myapp.dev localhost 127.0.0.1 ::1
          mkdir -p /tmp/k8s-webhook-server/serving-certs
          mv example.com+4-key.pem /tmp/k8s-webhook-server/serving-certs/tls.key
          mv example.com+4.pem /tmp/k8s-webhook-server/serving-certs/tls.crt
          mkdir -p /configs
          touch /configs/image_config.yaml
        start: ${{vars.bin-name}} --kubeconfig=/tmp/kubeconfig.yaml
        timeout: 30
        # Ignore ERROR keyword, since it is expected.
        error_strings: |
          FAIL
          FATAL
          Traceback.*most.recent.call
          Exception in thread
          java.lang.NullPointerException
          java.lang.RuntimeException
          Gem::MissingSpecError
          command not found
        expected_output: |
          Registering a mutating webhook
          Registering webhook
          Starting webhook server
          Updated current TLS certificate
          Starting certificate poll+watcher
          Serving webhook server
          Starting EventSource
          Starting Controller
        post: |
          echo "Verifying metrics endpoint"
          curl -sf http://127.0.0.1:8080/metrics
          echo "Metrics endpoint is serving as expected"
