package:
  name: ceph
  version: "19.2.2"
  description: Distributed object, block, and file storage
  epoch: 2
  copyright:
    - license: LGPL-2.1
  dependencies:
    runtime:
      - blkid
      - cryptsetup
      - curl
      - device-mapper
      - libaio
      - libedit
      - libgcc
      - libstdc++
      - libudev
      - lsblk
      - lvm2
      - mount
      - nvme-cli
      - openssh-client
      - openssl
      - parted
      - py${{vars.py-version}}-bcrypt-3.2
      - py${{vars.py-version}}-cherrypy
      - py${{vars.py-version}}-cryptography
      - py${{vars.py-version}}-jinja2
      - py${{vars.py-version}}-jsonpatch
      - py${{vars.py-version}}-kubernetes
      - py${{vars.py-version}}-packaging
      - py${{vars.py-version}}-pecan
      - py${{vars.py-version}}-prettytable
      - py${{vars.py-version}}-pyopenssl
      - py${{vars.py-version}}-python-dateutil
      - py${{vars.py-version}}-pyyaml
      - py${{vars.py-version}}-requests
      - py${{vars.py-version}}-routes
      - py${{vars.py-version}}-scikit-learn
      - py${{vars.py-version}}-scipy
      - py${{vars.py-version}}-urllib3
      - py${{vars.py-version}}-werkzeug
      - python-${{vars.py-version}}
      - sgdisk
      - smartmontools
      - systemd
      - udev
      - uuidgen
      - xfsprogs

vars:
  py-version: 3.11
  lua-version: 5.4

environment:
  contents:
    packages:
      - apache-arrow-dev
      - autoconf
      - automake
      - bash
      - bison
      - boost-dev
      - build-base
      - cmake
      - cryptsetup-dev
      - curl-dev
      - doxygen
      - eudev
      - expat-dev
      - flex
      - fuse3-dev
      - gperf
      - gperftools-dev
      - icu-dev
      - jq
      - keyutils-dev
      - libaio-dev
      - libarrow
      - libcap-dev
      - libcap-ng-dev
      - libedit-dev
      - libnl3-dev
      - librdkafka-dev
      - libtirpc-dev
      - libtool
      - liburing-dev
      - libxml2-dev
      - lttng-ust-tools
      - lua${{vars.lua-version}}-dev
      - lz4-dev
      - make
      - nasm
      - ncurses-dev
      - ninja
      - nodejs
      - npm
      - oath-toolkit-dev
      - openldap-dev
      - openssl-dev
      - pkgconf
      - posix-libc-utils
      - py${{vars.py-version}}-cython
      - py${{vars.py-version}}-prettytable
      - py${{vars.py-version}}-pyyaml
      - py${{vars.py-version}}-setuptools
      - py${{vars.py-version}}-sphinx-bin
      - python-${{vars.py-version}}-dev
      - re2-dev
      - snappy-dev
      - swagger
      - systemd-dev
      - thrift-dev
      - usrmerge-tool
      - util-linux-dev
      - wolfi-base
      - xfs-scrub
      - xfsprogs

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/ceph/ceph.git
      tag: v${{package.version}}
      expected-commit: 0eceb0defba60152a8182f7bd87d164b639885b8
      recurse-submodules: true

  - uses: patch
    with:
      patches: fix-submodule.patch fix-osd-class-dir.patch

  - uses: cmake/configure
    with:
      opts: |
        -Wno-dev \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_CXX_STANDARD=17 \
        -DCMAKE_INSTALL_LOCALSTATEDIR=/var \
        -DPython3_LIBRARIES=/usr/lib/python${{vars.py-version}} \
        -DCMAKE_INSTALL_SYSCONFDIR=/etc \
        -DNINJA_MAX_COMPILE_JOBS=$(nproc) \
        -DWITH_GTEST_PARALLEL=ON \
        -DWITH_PYTHON3=${{vars.py-version}} \
        -DENABLE_GIT_VERSION=ON \
        -DLUA_LIBRARIES=/usr/lib/lua${{vars.lua-version}}/liblua.so \
        -DWITH_BABELTRACE=OFF \
        -DWITH_JAEGER=OFF \
        -DWITH_LTTNG=OFF \
        -DWITH_MANPAGE=ON \
        -DWITH_RADOSGW_AMQP_ENDPOINT=OFF \
        -DWITH_RADOSGW_SELECT_PARQUET=ON \
        -DWITH_RADOSGW_POSIX=OFF \
        -DWITH_RDMA=OFF \
        -DWITH_REENTRANT_STRSIGNAL=ON \
        -DWITH_SEASTAR=OFF \
        -DWITH_SPDK=OFF \
        -DWITH_SYSTEMD=ON \
        -DWITH_CEPHFS_SHELL=ON \
        -DWITH_SYSTEM_ARROW=ON \
        -DWITH_SYSTEM_BOOST=OFF \
        -DWITH_SYSTEM_FMT=OFF \
        -DWITH_SYSTEM_LIBURING=ON \
        -DWITH_SYSTEM_NPM=ON \
        -DWITH_MGR_DASHBOARD_FRONTEND=ON \
        -DWITH_SYSTEM_ROCKSDB=OFF \
        -DWITH_SYSTEM_ZSTD=ON \
        -DWITH_QATLIB=OFF \
        -DWITH_QATZIP=OFF \
        -DWITH_TESTS=OFF \
        -DWITH_THREAD_SAFE_RES_QUERY=ON

  - runs: cmake --build output --target common-options-objs

  - uses: cmake/build

  - uses: cmake/install

  - runs: |
      # Drop broken mgr modules due to lack of sub-interpreter
      # support in PyO3
      rm -rf ${{targets.destdir}}/usr/share/ceph/mgr/restful
      rm -rf ${{targets.destdir}}/usr/share/ceph/mgr/cephadm
      mkdir -p ${{targets.destdir}}/etc/ceph
      mkdir -p ${{targets.destdir}}/var/log/ceph
      for component in mds mon mgr osd radosgw; do
        mkdir -p ${{targets.destdir}}/var/lib/ceph/$component
      done
      for component in mds mgr osd rbd rbd-mirror rgw; do
        mkdir -p ${{targets.destdir}}/var/lib/ceph/bootstrap-$component
      done
      mkdir -p ${{targets.destdir}}/etc/logrotate.d
      touch ${{targets.destdir}}/etc/logrotate.d/ceph
      usrmerge-tool -usr-sbin ${{targets.destdir}}

  - uses: strip

subpackages:
  - name: ${{package.name}}-dev
    pipeline:
      - uses: split/dev
    test:
      pipeline:
        - uses: test/tw/ldd-check

  - name: ${{package.name}}-libs
    description: "libraries for ${{package.name}}"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/ceph
          mv "${{targets.destdir}}"/usr/lib/lib*.so.* "${{targets.subpkgdir}}"/usr/lib
          mv "${{targets.destdir}}"/usr/lib/ceph/lib*.so.* "${{targets.subpkgdir}}"/usr/lib
    test:
      pipeline:
        - uses: test/tw/ldd-check

  - name: ${{package.name}}-doc
    pipeline:
      - uses: split/manpages
    description: ceph manpages
    test:
      pipeline:
        - uses: test/docs

test:
  environment:
    contents:
      packages:
        - ${{package.name}}-dev
        - ${{package.name}}-libs
  pipeline:
    - name: Ensure version build
      runs: |
        ceph --version  | grep ${{package.version}}
        cephadm version | grep ${{package.version}}
        ceph-fuse --version | grep ${{package.version}}
        ceph-mds --version  | grep ${{package.version}}
        ceph-mgr --version | grep ${{package.version}}
        ceph-mon --version | grep ${{package.version}}
        ceph-osd --version | grep ${{package.version}}
        ceph-objectstore-tool --version | grep ${{package.version}}
        radosgw --version | grep ${{package.version}}
        radosgw-admin --version | grep ${{package.version}}
        rbd --version | grep ${{package.version}}
    - name: Bootstrap and validate Ceph cluster
      runs: |
        UUID=$(uuidgen)
        HOSTNAME=$(hostname)

        mkdir -p /run/ceph
        ln -s /run /var/run
        cat <<EOF > /etc/ceph/ceph.conf
        [global]
        fsid = ${UUID}
        mon_initial_members = ${HOSTNAME}
        mon_host = 127.0.0.1
        public network = 127.0.0.0/8
        auth_cluster required = cephx
        auth_service required = cephx
        auth_client required = cephx
        osd_pool_default_size = 1
        osd_pool_default_min_size = 1
        mon warn on insecure global id reclaim allowed = false
        mon warn on insecure global id reclaim = false
        mon warn on pool no redundancy = false
        EOF

        mkdir -p /var/lib/ceph/mon/ceph-${HOSTNAME}

        # Create required keyrings
        # Ceph MON keyring
        ceph-authtool --create-keyring /tmp/ceph.mon.keyring \
          --gen-key -n mon. --cap mon 'allow *'

        # Ceph Admin keyring
        ceph-authtool --create-keyring /etc/ceph/ceph.client.admin.keyring \
          --gen-key -n client.admin \
          --cap mon 'allow *' \
          --cap osd 'allow *' \
          --cap mds 'allow *' \
          --cap mgr 'allow *'

        # Ceph OSD bootstrap keyring
        ceph-authtool --create-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring \
          --gen-key -n client.bootstrap-osd \
          --cap mon 'profile bootstrap-osd' \
          --cap mgr 'allow r'

        # Import admin and OSD bootstrap keyrings to mon keyring
        ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.client.admin.keyring
        ceph-authtool /tmp/ceph.mon.keyring --import-keyring /var/lib/ceph/bootstrap-osd/ceph.keyring

        # Create initial monitor map
        monmaptool --create --add ${HOSTNAME} 127.0.0.1 --fsid ${UUID} /tmp/monmap

        # Setup the monitor daemon
        ceph-mon --mkfs -i ${HOSTNAME} --monmap /tmp/monmap --keyring /tmp/ceph.mon.keyring

        # Startup ceph-mon daemon - defaults to run in the background
        ceph-mon --id ${HOSTNAME}
        ceph mon enable-msgr2

        # ceph-mgr setup
        mkdir -p /var/lib/ceph/mgr/ceph-${HOSTNAME}

        # Generate cephx key with mgr permissions
        ceph auth get-or-create mgr.${HOSTNAME} \
          mon 'allow profile mgr' \
          osd 'allow *' \
          mds 'allow *' > /var/lib/ceph/mgr/ceph-${HOSTNAME}/keyring

        # Startup ceph-mgr daemon
        ceph-mgr --id ${HOSTNAME}
        ceph health

        # Bootstrap three OSD daemons
        for osd in `seq 0 2`; do
          OSD_UUID=$(uuidgen)
          OSD_SECRET=$(ceph-authtool --gen-print-key)
          # Generate new OSD ID
          OSD_ID=$(echo "{\"cephx_secret\": \"$OSD_SECRET\"}" | ceph osd new ${OSD_UUID} -i - -n client.bootstrap-osd -k /var/lib/ceph/bootstrap-osd/ceph.keyring)
          mkdir -p /var/lib/ceph/osd/ceph-${OSD_ID}
          # Generate keyring
          ceph-authtool --create-keyring /var/lib/ceph/osd/ceph-${OSD_ID}/keyring \
            --name osd.${OSD_ID} --add-key $OSD_SECRET
          # Create block 'device'
          dd if=/dev/zero of=/var/lib/ceph/osd/ceph-${OSD_ID}/block bs=4M count=512
          # Create the OSD
          ceph-osd --mkfs --id ${OSD_ID} --osd-uuid ${OSD_UUID}
          # Startup the ceph-osd daemon
          ceph-osd --id ${OSD_ID}
        done

        # Check status
        ceph health | grep -q HEALTH_OK || {
          cat /var/log/ceph/*.log
          ceph -s
          ceph osd tree
          exit 1
        }

        ceph osd pool create wolfi-test
        ceph osd pool application enable wolfi-test rbd

        rbd create --size 20 wolfi-test/small-disk
        rbd info wolfi-test/small-disk
        rbd resize --size 50 wolfi-test/small-disk
        rbd info wolfi-test/small-disk
        rbd resize --size 30 --allow-shrink wolfi-test/small-disk
        rbd info wolfi-test/small-disk
        rbd rm wolfi-test/small-disk

        ceph osd pool autoscale-status

        ceph -s

## Currently, version 19.2.1 is the latest active version for ceph.
## While 20.0.0 is available, it is still early days. Therefore, we are not updating the version to 20.0.0.
## See the doc https://docs.ceph.com/en/latest/releases/ for more details.
update:
  enabled: true
  ignore-regex-patterns:
    - '^\d+\.0\.\d+$'
    - '^\d+\.1\.\d+$'
    - '^\d+\.3\.\d+$'
  github:
    identifier: ceph/ceph
    strip-prefix: v
    use-tag: true
