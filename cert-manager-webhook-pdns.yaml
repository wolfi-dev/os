package:
  name: cert-manager-webhook-pdns
  version: "2.5.2"
  epoch: 10
  description: A PowerDNS webhook for cert-manager
  copyright:
    - license: MIT

environment:
  environment:
    CGO_ENABLED: "0"

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 0c44f1340426a5e910a3fc7b06dbd05611ac1592
      repository: https://github.com/zachomedia/cert-manager-webhook-pdns
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.38.0

  - uses: go/build
    with:
      output: webhook
      packages: .
      ldflags: '-w -extldflags "-static"'

update:
  enabled: true
  github:
    identifier: zachomedia/cert-manager-webhook-pdns
    strip-prefix: v
  ignore-regex-patterns:
    - "cert-manager-webhook-pdns-"

test:
  environment:
    environment:
      GROUP_NAME: "acme.zacharyseguin.ca"
      KUBERNETES_SERVICE_HOST: "127.0.0.1"
      KUBERNETES_SERVICE_PORT: 32764
    contents:
      packages:
        - mkcert
  pipeline:
    - uses: test/kwok/cluster
      with:
        serviceaccount: true
    - runs: |
        kubectl create rolebinding default-get-configmap \
        --clusterrole=view \
        --serviceaccount=default:default \
        --namespace=kube-system

        mkcert example.com
        export CA_OTHER="$(cat ~/.local/share/mkcert/rootCA.pem)"
        kubectl create configmap extension-apiserver-authentication \
        --from-literal=client-ca-file="$CA_OTHER" \
        --from-literal=requestheader-client-ca-file="$CA_OTHER" \
        -n kube-system \
        --dry-run=client -o yaml | kubectl apply -f -

        webhook > /tmp/webhook.log 2>&1 &
        sleep 5
        if ! grep -q "Starting controller" /tmp/webhook.log; then
          echo "Webhook server did not start correctly"
          exit 1
        fi

        echo "Webhook server started successfully"
