package:
  name: clamav-1.4
  version: 1.4.2
  epoch: 1
  description: An anti-virus toolkit for UNIX eis-ng backport
  copyright:
    - license: GPL-2.0-only
  dependencies:
    provides:
      - clamav=${{package.full-version}}

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - bzip2-dev
      - ca-certificates-bundle
      - check-dev
      - cmake
      - curl-dev
      - gnutar
      - json-c-dev
      - libmilter-dev
      - libmspack-dev
      - libxml2-dev
      - linux-headers
      - ncurses-dev
      - openssl-dev
      - pcre2-dev
      - rust
      - samurai
      - zlib-dev
      # - clamav-scanner
      # - clamav-daemon

vars:
  CLAMAV_DOCKER_COMMIT: "658ba84dfb16f0a70ea6588c5da208e36962e678"
  CLAMAV_DOCKER_HASH: "5dff45927bd503dfaf71ff8daa541d1bb6fda2c695261e589bf1302fabb03ebe"

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/Cisco-Talos/clamav
      tag: clamav-${{package.version}}
      expected-commit: 98882f5f019ded3b96bacc17a9d1d65fb96dd686

  - uses: cmake/configure
    with:
      opts: |
        -DAPP_CONFIG_DIRECTORY=/etc/clamav \
        -DDATABASE_DIRECTORY=/var/lib/clamav \
        -DENABLE_SYSTEMD=OFF \
        -DENABLE_TESTS=OFF \
        -DENABLE_EXTERNAL_MSPACK=ON \

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

  - runs: |
      # set proper defaults
      sed -i -e "s:^\(Example\):\# \1:" \
        -e "s:.*\(PidFile\) .*:\1 /run/clamav/freshclam.pid:" \
        -e "s:.*\(DatabaseOwner\) .*:\1 clamav:" \
        -e "s:^\#\(UpdateLogFile\) .*:\1 /var/log/clamav/freshclam.log:" \
        -e "s:^\#\(NotifyClamd\).*:\1 /etc/clamav/clamd.conf:" \
        -e "s:^\#\(ScriptedUpdates\).*:\1 yes:" \
        -e "s:^\#\(AllowSupplementaryGroups\).*:\1 yes:" \
        "${{targets.destdir}}"/etc/clamav/freshclam.conf.sample

      # set proper defaults
      sed -i -e "s:^\(Example\):\# \1:" \
        -e "s:.*\(PidFile\) .*:\1 /run/clamav/clamd.pid:" \
        -e "s:.*\(LocalSocket\) .*:\1 /run/clamav/clamd.sock:" \
        -e "s:.*\(User\) .*:\1 clamav:" \
        -e "s:^\#\(LogFile\) .*:\1 /var/log/clamav/clamd.log:" \
        -e "s:^\#\(LogTime\).*:\1 yes:" \
            -e "s:^\#\(AllowSupplementaryGroups\).*:\1 yes:" \
        "${{targets.destdir}}"/etc/clamav/clamd.conf.sample

subpackages:
  - name: clamav-doc
    pipeline:
      - uses: split/manpages
    description: clamav manpages
    test:
      pipeline:
        - uses: test/docs

  - name: clamav-dev
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - clamav
        - openssl-dev
        - clamav-scanner
        - clamav-daemon
    description: clamav dev
    test:
      pipeline:
        - runs: |
            clamav-config --version
            clamav-config --help
        - uses: test/pkgconf

  - name: clamav-libunrar
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv "${{targets.destdir}}"/usr/lib/libclamunrar* "${{targets.subpkgdir}}"/usr/lib/
    dependencies:
      replaces:
        - clamav
    description: ClamAV unrar libraries

  - name: clamav-daemon
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/etc/clamav
          install -d -m 755 \
            "${{targets.subpkgdir}}"/var/log/clamav \
            "${{targets.subpkgdir}}"/var/lib/clamav

          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mkdir -p "${{targets.subpkgdir}}"/usr/sbin
          mv "${{targets.destdir}}"/usr/bin/clamdtop "${{targets.subpkgdir}}"/usr/bin/
          mv "${{targets.destdir}}"/usr/sbin/clamd "${{targets.subpkgdir}}"/usr/sbin/
          mv "${{targets.destdir}}"/usr/bin/clamconf "${{targets.subpkgdir}}"/usr/bin/

          mv "${{targets.destdir}}"/etc/clamav/clamd.conf.sample "${{targets.subpkgdir}}"/etc/clamav/clamd.conf
    dependencies:
      replaces:
        - clamav
      runtime:
        - clamav-clamdscan
        - freshclam
    description: ClamAV daemon scanner
    test:
      pipeline:
        - runs: |
            clamconf --version
            clamconf --help
            clamdtop --version
            clamdtop --help
            clamd --version
            clamd --help

  - name: clamav-clamdscan
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv "${{targets.destdir}}"/usr/bin/clamdscan "${{targets.subpkgdir}}"/usr/bin/
    description: ClamAV daemon client
    test:
      pipeline:
        - runs: |
            clamdscan --help

  - name: clamav-scanner
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv "${{targets.destdir}}"/usr/bin/clamscan "${{targets.subpkgdir}}"/usr/bin/
          mv "${{targets.destdir}}"/usr/bin/sigtool "${{targets.subpkgdir}}"/usr/bin/
          mv "${{targets.destdir}}"/usr/bin/clambc "${{targets.subpkgdir}}"/usr/bin/
    dependencies:
      replaces:
        - clamav
      runtime:
        - freshclam
    description: ClamAV command-line scanner and utils
    test:
      pipeline:
        - runs: |
            clambc --version
            clambc --help
            clamscan --version
            clamscan --help
            sigtool --version
            sigtool --help

  - name: clamav-db
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/var/lib/ \
            "${{targets.subpkgdir}}"/usr/bin \
            "${{targets.subpkgdir}}"/etc/clamav
          install -d -m755 \
            "${{targets.subpkgdir}}"/var/log/clamav \
            "${{targets.subpkgdir}}"/var/lib/clamav
    dependencies:
      replaces:
        - clamav
      runtime:
        - freshclam
    description: ClamAV dummy package for compatibility

  - name: freshclam
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/etc/clamav

          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv "${{targets.destdir}}"/usr/bin/freshclam "${{targets.subpkgdir}}"/usr/bin/

          mv "${{targets.destdir}}"/etc/clamav/freshclam.conf.sample \
            "${{targets.subpkgdir}}"/etc/clamav/freshclam.conf

          install -d -m755 \
            "${{targets.subpkgdir}}"/var/log/clamav \
            "${{targets.subpkgdir}}"/var/lib/clamav
    dependencies:
      replaces:
        - clamav
        - clamav-db
    description: Auto-updater for the Clam Antivirus scanner data-files
    test:
      pipeline:
        - runs: |
            freshclam --version
            freshclam --help

  - name: clamav-milter
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/etc/clamav

          mkdir -p "${{targets.subpkgdir}}"/usr/sbin
          mv "${{targets.destdir}}"/usr/sbin/clamav-milter "${{targets.subpkgdir}}"/usr/sbin/

          mv "${{targets.destdir}}"/etc/clamav/clamav-milter.conf.sample \
            "${{targets.subpkgdir}}"/etc/clamav/clamav-milter.conf
    description: ClamAV milter
    test:
      pipeline:
        - runs: |
            clamav-milter --version
            clamav-milter --help

  - name: ${{package.name}}-docker
    description: Scripts needed to run ClamAV in a Docker container
    dependencies:
      runtime:
        - bash
        - json-c
        - libbz2-1
        - libcurl-openssl4
        - libmilter
        - libstdc++
        - libxml2
        - ncurses
        - netcat-openbsd
        - pcre2
        - tini
        - tzdata
        - zlib
      provides:
        - clamav-docker=${{package.full-version}}
    pipeline:
      - uses: git-checkout
        with:
          repository: https://github.com/Cisco-Talos/clamav-docker
          expected-commit: ${{vars.CLAMAV_DOCKER_COMMIT}}
          tag: ""
          branch: main
      - name: Sanity check to ensure there is corresponding version
        runs: |
          if [ ! -d clamav/${{vars.major-minor-version}} ]; then
            echo "No directory for version ${{vars.major-minor-version}}"
            exit 1
          fi
      - name: Sanity check to ensure folder hash is matching
        runs: |
          expected_hash="${{vars.CLAMAV_DOCKER_HASH}}"
          actual_hash=$(tar --sort=name --mtime='1970-01-01' --owner=0 --group=0 --numeric-owner -cf - clamav/${{vars.major-minor-version}} | sha256sum | cut -d' ' -f1)
          if [ "$expected_hash" != "$actual_hash" ]; then
            echo "Hash mismatch for version ${{vars.major-minor-version}}. Expected $expected_hash, got $actual_hash. Please run 'git clone --depth=1 git@github.com:Cisco-Talos/clamav-docker.git && cd clamav-docker && tar -cf - clamav/1.4 | sha256sum' and update the CLAMAV_DOCKER_HASH variable"
            echo "Please run 'git clone --depth=1 git@github.com:Cisco-Talos/clamav-docker.git && cd clamav-docker && tar -cf - clamav/1.4 | sha256sum' and update the CLAMAV_DOCKER_HASH variable."
            exit 1
          fi
      - name: Create directories
        runs: |
          mkdir -p "${{targets.contextdir}}"/usr/local/bin
          mkdir -p "${{targets.contextdir}}"/etc/clamav
          mkdir -p "${{targets.contextdir}}"/var/lib/clamav
          mkdir -p "${{targets.contextdir}}"/var/log/clamav
          mkdir -p "${{targets.contextdir}}"/run/clamav
          mkdir -p "${{targets.contextdir}}"/tmp
          touch "${{targets.contextdir}}"/var/log/clamav/freshclam.log
      - working-directory: clamav/${{vars.major-minor-version}}/alpine/scripts
        runs: |
          install -Dm755 docker-entrypoint-unprivileged.sh "${{targets.contextdir}}"/init-unprivileged
          install -Dm755 docker-entrypoint.sh "${{targets.contextdir}}"/init
          install -Dm755 clamdcheck.sh "${{targets.contextdir}}"/usr/local/bin/clamdcheck.sh
      - name: Patch files
        runs: |
          sed -i '/^set -eu/a sleep 20' ${{targets.contextdir}}/usr/local/bin/clamdcheck.sh
    test:
      environment:
        contents:
          packages:
            - clamav-daemon
            - clamav-db
            - clamav-libunrar
            - clamav-milter
            - freshclam
        accounts:
          groups:
            - groupname: clamav
              gid: 100
          users:
            - username: clamav
              gid: 100
              uid: 100
          run-as: 0
        environment:
          TINI_SUBREAPER: 1
      pipeline:
        - name: "Test clamdcheck"
          uses: test/daemon-check-output
          with:
            start: "/usr/local/bin/clamdcheck.sh"
            timeout: 60
            error_strings: |
              FAIL
              FATAL
              Traceback.*most.recent.call
              Exception in thread
              java.lang.NullPointerException
              java.lang.RuntimeException
              Gem::MissingSpecError
              command not found
              No such file or directory
            expected_output: |
              Unable to contact server
        # this test will fail locally with run-as set to 0, but pass pipeline.
        # switch to run-as: 100 if running locally.
        - name: "Test init"
          uses: test/daemon-check-output
          with:
            setup: /usr/local/bin/clamdcheck.sh &
            start: "exec tini -s /init > /proc/1/fd/1 2>&1 & sleep 10 && echo 'ok' && sleep 5"
            timeout: 60
            expected_output: |
              ok

update:
  enabled: true
  github:
    identifier: Cisco-Talos/clamav
    strip-prefix: clamav-
    tag-filter-prefix: clamav-1.4.

test:
  pipeline:
    # AUTOGENERATED
    - runs: |
        clamsubmit --version
        clamsubmit --help
