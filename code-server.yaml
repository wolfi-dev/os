package:
  name: code-server
  version: "4.99.4"
  epoch: 0
  description:
  copyright:
    - license: Apache-2.0
  resources:
    cpu: 32
    memory: 64Gi
  dependencies:
    runtime:
      - glibc-locales
      - openssl

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - coreutils
      - findutils
      - gcc
      - git
      - git-lfs
      - glibc-dev
      - glibc-locales
      - grep
      - jq
      - krb5-dev
      - libsecret-dev
      - libx11-dev
      - libxkbcommon-dev
      - libxkbfile-dev
      - make
      - node-gyp
      - nodejs-20
      - npm
      - python3
      - rsync

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/coder/code-server
      tag: v${{package.version}}
      expected-commit: 47d6d3ada5aadef6d221f3d612401eb3dad9299e

  - runs: |
      git submodule update --init
      cp ./patches/* .

  - uses: patch
    with:
      series: series

  - uses: patch
    with:
      patches: node-memory.patch

  - uses: patch
    with:
      patches: GHSA-pq67-2wwv-3xjx.patch

  - runs: |
      mkdir -p "${{targets.contextdir}}"/usr/lib/code-server

      # Update prebuild-install
      npm update prebuild-install

      # Install modules and build backend/frontend
      npm install
      npm run build

      # Builds vscode into /lib/vscode/out-vscode
      VERSION=0.0.0 npm run build:vscode

      # Bundles the 'npm build ...' commands into ./release
      npm run release

      # Install the modules needed for the release
      cd release
      npm install --unsafe-perm --omit=dev

      # Bundles the release with other needed files into ./release-standalone
      cd ..
      npm run release:standalone

      # Add code-server version
      jq --arg v ${{package.version}} '.version = $v' ./release-standalone/package.json > ./release-standalone/tmp.json \
      && mv ./release-standalone/tmp.json ./release-standalone/package.json


      # Copy the release into the conext directory and setup symlink
      cp -r ./release-standalone/* "${{targets.contextdir}}"/usr/lib/code-server
      mkdir -p "${{targets.contextdir}}"/usr/bin
      ln -s /usr/lib/code-server/bin/code-server "${{targets.contextdir}}"/usr/bin/code-server

subpackages:
  - name: "${{package.name}}-compat"
    dependencies:
      runtime:
        - ${{package.name}}
        - busybox
        - dumb-init
        - git
        - git-lfs
        - openssh-client
        - sudo
        - curl
        - htop
        - man-db
        - nano
        - procps
        - vim
        - wget
        - shadow
    pipeline:
      - uses: git-checkout
        with:
          repository: https://github.com/coder/code-server
          tag: v${{package.version}}
          expected-commit: 47d6d3ada5aadef6d221f3d612401eb3dad9299e
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/bin
          cp ci/release-image/entrypoint.sh "${{targets.contextdir}}"/usr/bin/entrypoint.sh
          git lfs install
          mkdir -p "${{targets.contextdir}}"/etc/sudoers.d
          mkdir -p "${{targets.contextdir}}"/etc/fixuid
          echo "coder ALL=(ALL) NOPASSWD:ALL" >> "${{targets.contextdir}}"/etc/sudoers.d/nopasswd
          printf "user: coder\ngroup: coder\n" > "${{targets.contextdir}}"/etc/fixuid/config.yml

update:
  enabled: true
  github:
    identifier: coder/code-server
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - code-server-compat
        - curl
        - wait-for-it
    environment:
      SECRET: root
  pipeline:
    - name: "Test server output"
      uses: test/daemon-check-output
      with:
        start: "/usr/lib/code-server/bin/code-server --bind-addr 0.0.0.0:8080 ."
        expected_output: |
          HTTP server listening on
          Session server listening on
