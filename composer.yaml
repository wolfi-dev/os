package:
  name: composer
  version: "2.8.9"
  epoch: 0
  description: "the PHP package manager"
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - git
      - php
      - php-ctype
      - php-mbstring
      - php-openssl
      - php-phar

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle

pipeline:
  - uses: fetch
    with:
      uri: https://getcomposer.org/download/${{package.version}}/composer.phar
      expected-sha256: 8e8829ec2b97fcb05158236984bc252bef902e7b8ff65555a1eeda4ec13fb82b
      extract: "false"
      delete: "false"

  - name: Install Composer
    runs: |
      EXEC_DIR="${{targets.destdir}}/usr/bin"
      mkdir -p "${EXEC_DIR}"
      mv composer.phar "${EXEC_DIR}/composer"
      chmod +x "${EXEC_DIR}/composer"

update:
  enabled: true
  github:
    identifier: composer/composer

test:
  pipeline:
    - name: "Check Composer version"
      runs: |
        composer --version
        composer --help
    - name: "Test Composer init command"
      runs: |
        mkdir test-project
        cd test-project
        composer init --no-interaction --name=test/project
    - name: "Validate composer.json"
      runs: |
        cd test-project
        composer validate 2>&1 | grep -i "Publish errors"
    - name: "Test Composer require command"
      runs: |
        cd test-project
        composer require --no-update monolog/monolog
    - name: "Check if package was added to composer.json"
      runs: |
        cd test-project
        grep -q '"monolog/monolog"' composer.json
    - name: "Test Composer update command"
      runs: |
        cd test-project
        composer update --no-interaction
    - name: "Check if vendor directory was created"
      runs: |
        test -d test-project/vendor
    - name: "Test Composer show command"
      runs: |
        cd test-project
        composer show | grep monolog/monolog
    - name: "Test Composer project creation and autoloading"
      runs: |
        cat > composer.json << EOL
        {
          "name": "wolfi/test",
          "authors": [
            {
              "name": "Wolfi"
            }
          ],
          "require": {
            "php": ">=5.3.4"
          },
          "autoload": {
            "psr-0": {
              "HelloWorld": "src/"
            }
          }
        }
        EOL

        mkdir -p src/HelloWorld
        cat > src/HelloWorld/Greetings.php << EOL
        <?php

        namespace HelloWorld;

        class Greetings {
          public static function sayHelloWorld() {
            return 'HelloWolfi';
          }
        }
        EOL

        mkdir -p tests
        cat > tests/test.php << EOL
        <?php

        // Autoload files using the Composer autoloader.
        require_once __DIR__ . '/../vendor/autoload.php';

        use HelloWorld\\Greetings;

        echo Greetings::sayHelloWorld();
        EOL

        composer install

        test "$(php tests/test.php)" = "HelloWolfi"
