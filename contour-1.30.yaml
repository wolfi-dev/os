package:
  name: contour-1.30
  version: "1.30.2"
  epoch: 30
  description: Contour is a Kubernetes ingress controller using Envoy proxy.
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - contour=${{package.full-version}}
      # REMOVE_POST_USRMERGE - https://github.com/orgs/wolfi-dev/discussions/40270
      - ${{package.name}}-compat=${{package.full-version}}
    runtime:
      - merged-bin
      - wolfi-baselayout

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go
  environment:
    CGO_ENABLED: "0"
    GO111MODULE: "on"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/projectcontour/contour
      tag: v${{package.version}}
      expected-commit: 6a5021dd96f7e1fe1b5859ee7632e8794328c396

  - uses: go/build
    with:
      packages: ./cmd/contour
      output: contour
      ldflags: |
        -X github.com/projectcontour/contour/internal/build.Version=${{package.version}}
        -X github.com/projectcontour/contour/internal/build.Sha=$(git rev-parse HEAD)
        -X github.com/projectcontour/contour/internal/build.Branch=$(git rev-parse --abbrev-ref HEAD)

subpackages:
  - name: ${{package.name}}-bitnami-compat
    description: "compat package with bitnami/contour image"
    dependencies:
      provides:
        - contour-bitnami-compat=${{package.full-version}}
      runtime:
        - merged-bin
        - wolfi-baselayout
    pipeline:
      - uses: bitnami/compat
        with:
          image: contour
          version-path: ${{vars.major-minor-version}}/debian-12
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/bitnami/contour/bin/
          chmod g+rwX ${{targets.subpkgdir}}/opt/bitnami
          ln -sf /usr/bin/contour ${{targets.subpkgdir}}/opt/bitnami/contour/bin/contour

update:
  enabled: true
  github:
    identifier: projectcontour/contour
    strip-prefix: v
    tag-filter: v1.30.

test:
  environment:
    contents:
      packages:
        - kubectl
  pipeline:
    - name: "Basic checks"
      runs: |
        contour version
        contour --help
        contour serve --help
    - name: "Setup KWOK cluster"
      uses: test/kwok/cluster
    - name: "Install CRDs"
      runs: |
        kubectl apply -f https://raw.githubusercontent.com/projectcontour/contour/v${{package.version}}/examples/contour/01-crds.yaml
        kubectl wait --for=condition=Established crd --all --timeout=60s
    - name: "Launch Contour"
      runs: |
        # Dump the KWOK cluster config
        kubectl config view --minify --raw > /tmp/kwok-kubeconfig.yaml

        contour serve \
          --kubeconfig /tmp/kwok-kubeconfig.yaml \
          --disable-leader-election \
          --insecure \
          > /tmp/contour.log 2>&1 &

        CONTOUR_PID=$!
        sleep 5

        if ! kill -0 "$CONTOUR_PID" 2>/dev/null; then
          echo "ERROR: contour serve exited early. Logs:"
          cat /tmp/contour.log
          exit 1
        fi

        # Check contour is running via log validation.
        if ! grep -qi "started HTTP server" /tmp/contour.log; then
          echo "ERROR: 'started HTTP server' not found in logs"
          cat /tmp/contour.log
          exit 1
        fi
