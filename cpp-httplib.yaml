# Generated from https://git.alpinelinux.org/aports/plain/main/cxxopts/APKBUILD
package:
  name: cpp-httplib
  version: "0.21.0"
  epoch: 0
  description: C++ header-only HTTP/HTTPS server and client library
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - ninja

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/yhirose/cpp-httplib.git
      tag: v${{package.version}}
      expected-commit: 3a1f379e751ef6555f06c5c1ef367a6fce26722c
      recurse-submodules: true

  - uses: cmake/configure

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

update:
  enabled: true
  github:
    identifier: yhirose/cpp-httplib
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - build-base
        - curl
  pipeline:
    - runs: |
        cat << 'EOF' > server.cpp
        #include "httplib.h"

        int main() {
          httplib::Server svr;

          svr.Get("/hi", [](const httplib::Request &, httplib::Response &res) {
            res.set_content("Hello World!", "text/plain");
          });

          svr.listen("0.0.0.0", 8080);
        }
        EOF
        g++ server.cpp -o server
        ./server > /dev/null 2>&1 &

        [ "$(curl --fail http://127.0.0.1:8080/hi)" = "Hello World!" ]

        cat << 'EOF' > client.cpp
        #include <httplib.h>
        #include <iostream>

        int main(void)
        {
          httplib::Client cli("localhost", 8080);

          if (auto res = cli.Get("/hi")) {
            if (res->status == httplib::StatusCode::OK_200) {
              std::cout << res->body << std::endl;
            }
          } else {
            auto err = res.error();
            std::cout << "HTTP error: " << httplib::to_string(err) << std::endl;
          }
        }
        EOF
        g++ client.cpp -o client
        [ "$(./client)" = "Hello World!" ]
