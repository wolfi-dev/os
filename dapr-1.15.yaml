package:
  name: dapr-1.15
  version: "1.15.3"
  epoch: 0
  description: Cluster API meta package
  dependencies:
    provides:
      - dapr=${{package.full-version}}
  copyright:
    - license: Apache-2.0

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

environment:
  contents:
    packages:
      - protobuf
      - protobuf-dev
      - protoc
      - protoc-gen-go
      - protoc-gen-go-grpc
  environment:
    GO_TAGS: "allcomponents"

pipeline:
  - uses: git-checkout
    with:
      expected-commit: c3687714f9592def48b14b8300bf5170fe8a1bff
      repository: https://github.com/dapr/dapr
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        github.com/golang-jwt/jwt/v5@v5.2.2
        golang.org/x/oauth2@v0.27.0
        golang.org/x/net@v0.36.0
        github.com/choleraehyq/pid@v0.0.20
        github.com/golang-jwt/jwt/v4@v4.5.2

  - runs: |
      # Generate proto code
      sed -i '/check-proto-version:/,/^$/d' Makefile
      make gen-proto
      export LD_FLAGS="-X github.com/dapr/dapr/pkg/buildinfo.gitversion=$(git describe --always --abbrev=7 --dirty) -X github.com/dapr/dapr/pkg/buildinfo.gitcommit=$(git rev-list -1 HEAD) -X github.com/dapr/dapr/pkg/buildinfo.version=v${{package.version}} -X github.com/dapr/kit/logger.DaprVersion=v${{package.version}}"

subpackages:
  - name: dapr-daprd-${{vars.major-minor-version}}
    description: Daprd side car
    dependencies:
      provides:
        - dapr-daprd=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: daprd
          packages: ./cmd/daprd
          ldflags: "-X github.com/dapr/dapr/pkg/buildinfo.gitversion=$(git describe --always --abbrev=7 --dirty) -X github.com/dapr/dapr/pkg/buildinfo.gitcommit=$(git rev-list -1 HEAD) -X github.com/dapr/dapr/pkg/buildinfo.version=v${{package.version}} -X github.com/dapr/kit/logger.DaprVersion=v${{package.version}}"
          tags: $GO_TAGS

  - name: dapr-placement-${{vars.major-minor-version}}
    description: Dapr Placement control plane service
    dependencies:
      provides:
        - dapr-placement=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: placement
          packages: ./cmd/placement
          ldflags: "-X github.com/dapr/dapr/pkg/buildinfo.gitversion=$(git describe --always --abbrev=7 --dirty) -X github.com/dapr/dapr/pkg/buildinfo.gitcommit=$(git rev-list -1 HEAD) -X github.com/dapr/dapr/pkg/buildinfo.version=v${{package.version}} -X github.com/dapr/kit/logger.DaprVersion=v${{package.version}}"
          tags: $GO_TAGS

  - name: dapr-operator-${{vars.major-minor-version}}
    description: Dapr Operator service manages Dapr component updates and provides Kubernetes services endpoints for Dapr
    dependencies:
      provides:
        - dapr-operator=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: operator
          packages: ./cmd/operator
          ldflags: "-X github.com/dapr/dapr/pkg/buildinfo.gitversion=$(git describe --always --abbrev=7 --dirty) -X github.com/dapr/dapr/pkg/buildinfo.gitcommit=$(git rev-list -1 HEAD) -X github.com/dapr/dapr/pkg/buildinfo.version=v${{package.version}} -X github.com/dapr/kit/logger.DaprVersion=v${{package.version}}"
          tags: $GO_TAGS

  - name: dapr-injector-${{vars.major-minor-version}}
    description: cluster-api core controller
    dependencies:
      provides:
        - dapr-injector=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: injector
          packages: ./cmd/injector
          ldflags: "-X github.com/dapr/dapr/pkg/buildinfo.gitversion=$(git describe --always --abbrev=7 --dirty) -X github.com/dapr/dapr/pkg/buildinfo.gitcommit=$(git rev-list -1 HEAD) -X github.com/dapr/dapr/pkg/buildinfo.version=v${{package.version}} -X github.com/dapr/kit/logger.DaprVersion=v${{package.version}}"
          tags: $GO_TAGS

  - name: dapr-scheduler-${{vars.major-minor-version}}
    description: Dapr Scheduler service is used to schedule different types of jobs, running in self-hosted mode or on Kubernetes.
    dependencies:
      provides:
        - dapr-scheduler=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: scheduler
          packages: ./cmd/scheduler
          ldflags: "-X github.com/dapr/dapr/pkg/buildinfo.gitversion=$(git describe --always --abbrev=7 --dirty) -X github.com/dapr/dapr/pkg/buildinfo.gitcommit=$(git rev-list -1 HEAD) -X github.com/dapr/dapr/pkg/buildinfo.version=v${{package.version}} -X github.com/dapr/kit/logger.DaprVersion=v${{package.version}}"
          tags: $GO_TAGS

  - name: dapr-sentry-${{vars.major-minor-version}}
    description: Dapr Sentry service manages mTLS between services and acts as a certificate authority
    dependencies:
      provides:
        - dapr-sentry=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: sentry
          packages: ./cmd/sentry
          ldflags: "-X github.com/dapr/dapr/pkg/buildinfo.gitversion=$(git describe --always --abbrev=7 --dirty) -X github.com/dapr/dapr/pkg/buildinfo.gitcommit=$(git rev-list -1 HEAD) -X github.com/dapr/dapr/pkg/buildinfo.version=v${{package.version}} -X github.com/dapr/kit/logger.DaprVersion=v${{package.version}}"
          tags: $GO_TAGS

test:
  environment:
    contents:
      packages:
        - kustomize
        - kubectl
        - git
        - mkcert
        - nss
        - curl
        - dapr
        - dapr-daprd
        - dapr-injector
        - dapr-placement
        - dapr-operator
        - dapr-scheduler
        - dapr-sentry
  pipeline:
    - uses: test/kwok/cluster
    - name: Prepare Dapr configs
      runs: |
        mkdir -p /etc/dapr
        echo '{"id": "testapp", "appPort": 8080}' > /etc/dapr/config.json
        echo 'apiVersion: dapr.io/v1alpha1
              kind: Component
              metadata:
                name: testpubsub
              spec:
                type: pubsub.in-memory
                version: v1
                metadata: []' > /etc/dapr/component.yaml
    - name: Start placement service
      uses: test/daemon-check-output
      with:
        start: placement
        expected_output: "placement server leadership acquired"
        timeout: 15
    - name: Start sentry
      uses: test/daemon-check-output
      with:
        start: sentry --config daprsystem
        expected_output: "Starting Dapr Sentry certificate authority"
        timeout: 10
    - name: Start scheduler
      uses: test/daemon-check-output
      with:
        start: scheduler
        expected_output: "Dapr Scheduler listening on: :50006"
        timeout: 10
    - name: Start injector (expect failure without env)
      uses: test/daemon-check-output
      with:
        start: injector
        expected_output: "Error getting config"
        timeout: 10
    - name: Start operator in KWOK cluster
      uses: test/daemon-check-output
      with:
        start: operator
        expected_output: "Starting Dapr Operator"
        timeout: 10
    - name: Start daprd and ping sidecar
      uses: test/daemon-check-output
      with:
        setup: |
          export DAPR_HTTP_PORT=3500
          export DAPR_GRPC_PORT=50001
          export DAPR_APP_ID=testapp
          export DAPR_COMPONENTS_PATH=/etc/dapr
        start: daprd --app-id=testapp --components-path=/etc/dapr --config /etc/dapr/config.json
        expected_output: "Starting Dapr Runtime"
        timeout: 10
        post: |
          sleep 2
          curl -s http://localhost:3500/v1.0/healthz | grep "OK"
          curl -s http://localhost:3500/v1.0/metadata | jq
          curl -s -X POST http://localhost:3500/v1.0/publish/testpubsub/test -d '"hello"'

update:
  enabled: true
  github:
    identifier: dapr/dapr
    strip-prefix: v
    tag-filter: v1.15.
    use-tag: true
