package:
  name: dask-gateway
  version: 2024.1.0
  epoch: 15
  description: "A multi-tenant server for securely deploying and managing Dask clusters."
  copyright:
    - license: BSD-3-Clause
  dependencies:
    runtime:
      - py${{vars.py-version}}-aiohttp
      - py${{vars.py-version}}-click
      - py${{vars.py-version}}-cloudpickle
      - py${{vars.py-version}}-msgpack
      - py${{vars.py-version}}-packaging
      - py${{vars.py-version}}-psutil
      - py${{vars.py-version}}-pyyaml
      - py${{vars.py-version}}-sortedcontainers
      - py${{vars.py-version}}-tornado

vars:
  py-version: 3.13

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go
      - py${{vars.py-version}}-build-base-dev
      - py${{vars.py-version}}-gpep517
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/dask/dask-gateway
      tag: ${{package.version}}
      expected-commit: 52a523041a509dd4aae3ff831cc09dbaf95bd32c

  - runs: |
      cd ${{package.name}}

      # Build package
      python${{vars.py-version}} -m gpep517 build-wheel --wheel-dir dist --output-fd 1

      # Setup venv and install package
      python${{vars.py-version}} -m venv .venv --system-site-packages
      .venv/bin/pip install -I --no-deps --no-compile dist/*.whl
      .venv/bin/pip install -I --no-deps --no-compile dask
      .venv/bin/pip install -I --no-deps --no-compile distributed
      .venv/bin/pip install -I --no-deps --no-compile locket
      .venv/bin/pip install -I --no-deps --no-compile tblib
      .venv/bin/pip install -I --no-deps --no-compile toolz
      .venv/bin/pip install -I --no-deps --no-compile zict
      mkdir -p ${{targets.destdir}}/usr/share/${{package.name}}
      mv .venv ${{targets.destdir}}/usr/share/${{package.name}}/

      # Fix venv paths
      find ${{targets.destdir}}/usr/share/${{package.name}}/.venv/bin/ -type f | \
        xargs sed -i "s|/home/build|/usr/share|g"

      # Include system site-packages
      sed -i "s|include-system-site-packages = false|include-system-site-packages = true|g" ${{targets.destdir}}/usr/share/${{package.name}}/.venv/pyvenv.cfg

      # Symlink scripts to PATH
      mkdir -p ${{targets.destdir}}/usr/bin/
      ln -s /usr/share/${{package.name}}/.venv/bin/dask ${{targets.destdir}}/usr/bin/dask
      ln -s /usr/share/${{package.name}}/.venv/bin/dask-scheduler ${{targets.destdir}}/usr/bin/dask-scheduler
      ln -s /usr/share/${{package.name}}/.venv/bin/dask-ssh ${{targets.destdir}}/usr/bin/dask-ssh
      ln -s /usr/share/${{package.name}}/.venv/bin/dask-worker ${{targets.destdir}}/usr/bin/dask-worker

subpackages:
  - name: dask-gateway-server
    description: A multi-tenant server for securely deploying and managing Dask clusters
    dependencies:
      runtime:
        - py${{vars.py-version}}-kubernetes-asyncio
        - py${{vars.py-version}}-colorlog
        - py${{vars.py-version}}-sqlalchemy
        - py${{vars.py-version}}-traitlets
    pipeline:
      - name: Python Build
        runs: |
          cd ${{package.name}}-server

          # Build package
          python${{vars.py-version}} -m gpep517 build-wheel --wheel-dir dist --output-fd 1

          # Setup venv and install package
          python${{vars.py-version}} -m venv .venv --system-site-packages
          .venv/bin/pip install -I --no-deps --no-compile dist/*.whl

          mkdir -p ${{targets.subpkgdir}}/usr/share/${{package.name}}-server
          mv .venv ${{targets.subpkgdir}}/usr/share/${{package.name}}-server/

          # Fix venv paths
          find ${{targets.subpkgdir}}/usr/share/${{package.name}}-server/.venv/bin/ -type f | \
            xargs sed -i "s|/home/build|/usr/share|g"

          # Include system site-packages
          sed -i "s|include-system-site-packages = false|include-system-site-packages = true|g" ${{targets.subpkgdir}}/usr/share/${{package.name}}-server/.venv/pyvenv.cfg

          # Symlink scripts to PATH
          mkdir -p ${{targets.subpkgdir}}/usr/bin/
          ln -s /usr/share/${{package.name}}-server/.venv/bin/${{package.name}}-jobqueue-launcher ${{targets.subpkgdir}}/usr/bin/${{package.name}}-jobqueue-launcher
          ln -s /usr/share/${{package.name}}-server/.venv/bin/${{package.name}}-server ${{targets.subpkgdir}}/usr/bin/${{package.name}}-server
    test:
      environment:
        contents:
          packages:
            - wolfi-base
      pipeline:
        - runs: |
            # Version check, also ensures executable paths are correct
            dask-gateway-server --version

            # Test imports in virtual environment
            source /usr/share/${{package.name}}-server/.venv/bin/activate
            python${{vars.py-version}} -c "import dask_gateway_server"
            dask-gateway-jobqueue-launcher --version
            dask-gateway-jobqueue-launcher --help
            dask-gateway-server --help

update:
  enabled: true
  github:
    identifier: dask/dask-gateway
    use-tag: true

test:
  pipeline:
    - runs: |
        # Version check, also ensures executable paths are correct
        dask --version
        dask-scheduler --version
        dask-ssh --version
        dask-worker --version

        # Test imports in virtual environment
        source /usr/share/${{package.name}}/.venv/bin/activate
        python${{vars.py-version}} -c "import dask_gateway"
        python${{vars.py-version}} -c "from dask_gateway import Gateway"
        dask --help
        dask-scheduler --help
        dask-ssh --help
        dask-worker --help
