Author: Sergio Durigan Junior <sergiodj@chainguard.dev>
Bug-Chainguard: https://github.com/chainguard-dev/internal-dev/issues/12556

datadog-agent version 7.66.0 introduces a few changes that break our
build.  Namely:

* https://github.com/DataDog/datadog-agent/commit/494f98eb5db09652258c0e0aac936a35d69d7b62
  changed how the system-probe task refers to the embedded clang
  compiler.  Previously, it would just call "clang" and let $PATH
  resolve it, which would conveniently make it use our version of
  clang-12 installed under /opt/clang/bin.  Now, it hardcodes the
  compiler as being /opt/datadog-agent/embedded/bin/clang-bpf.  While
  this could work fine (because clang-bpf has exactly the same version
  as our clang), upstream's clang doesn't come with system headers
  available.  This makes clang-bpf fail to find stdarg.h, which causes
  an FTBFS.

* https://github.com/DataDog/datadog-agent/commit/81ff57c37398943f4e8f486cb51d6ffeb8f901e7
  got rid of quite a few headers included in
  pkg/security/ebpf/c/prebuilt/probe.c.  One of them, <linux/mount.h>,
  is actually still necessary to perform our build (otherwise clang
  will error out with undefined reference for MNT_INTERNAL).

diff --git a/pkg/security/ebpf/c/prebuilt/probe.c b/pkg/security/ebpf/c/prebuilt/probe.c
index 38655a7246..767c247062 100644
--- a/pkg/security/ebpf/c/prebuilt/probe.c
+++ b/pkg/security/ebpf/c/prebuilt/probe.c
@@ -4,6 +4,8 @@
 #include <linux/types.h>
 #include <linux/version.h>
 
+#include <linux/mount.h>
+
 #include <net/sock.h>
 #include <net/netfilter/nf_conntrack.h>
 #include <net/netfilter/nf_nat.h>
diff --git a/tasks/system_probe.py b/tasks/system_probe.py
index c800313532..7a270835e6 100644
--- a/tasks/system_probe.py
+++ b/tasks/system_probe.py
@@ -132,17 +132,17 @@ def ninja_define_ebpf_compiler(
     nw.variable("kheaders", get_kernel_headers_flags(kernel_release, arch=arch))
     nw.rule(
         name="ebpfclang",
-        command="/opt/datadog-agent/embedded/bin/clang-bpf -MD -MF $out.d $target $ebpfflags $kheaders $flags -c $in -o $out",
+        command="/opt/clang/bin/clang -MD -MF $out.d $target $ebpfflags $kheaders $flags -c $in -o $out",
         depfile="$out.d",
     )
 
-    strip = "/opt/datadog-agent/embedded/bin/llvm-strip -g $out"
-    strip_lbb = "/opt/datadog-agent/embedded/bin/llvm-strip -w -N \"LBB*\" $out"
+    strip = "/opt/clang/bin/llvm-strip -g $out"
+    strip_lbb = "/opt/clang/bin/llvm-strip -w -N \"LBB*\" $out"
     strip_part = f"&& {strip} && {strip_lbb}" if strip_object_files else ""
 
     nw.rule(
         name="llc",
-        command=f"/opt/datadog-agent/embedded/bin/llc-bpf -march=bpf -filetype=obj -o $out $in {strip_part}",
+        command=f"/opt/clang/bin/llc -march=bpf -filetype=obj -o $out $in {strip_part}",
     )
 
 
@@ -151,7 +151,7 @@ def ninja_define_co_re_compiler(nw: NinjaWriter, arch: Arch | None = None):
 
     nw.rule(
         name="ebpfcoreclang",
-        command="/opt/datadog-agent/embedded/bin/clang-bpf -MD -MF $out.d -target bpf $ebpfcoreflags $flags -c $in -o $out",
+        command="/opt/clang/bin/clang -MD -MF $out.d -target bpf $ebpfcoreflags $flags -c $in -o $out",
         depfile="$out.d",
     )
 
