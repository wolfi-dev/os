package:
  name: distribution
  version: 3.0.0
  epoch: 40
  description: The toolkit to pack, ship, store, and deliver container content
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 9ed95e7365224025ee89365e12cf128e1f1bf965
      repository: https://github.com/distribution/distribution
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        github.com/go-jose/go-jose/v4@v4.0.5
        golang.org/x/net@v0.38.0

  - uses: go/build
    with:
      ldflags: -X github.com/distribution/distribution/v3/version.Version=${{package.version}} -X github.com/distribution/distribution/v3/version.Revision=$(git rev-parse --short HEAD) -X github.com/distribution/distribution/v3/version.mainpkg=github.com/distribution/distribution/v3
      output: registry
      packages: ./cmd/registry
      vendor: true

  - uses: go/build
    with:
      ldflags: -X github.com/distribution/distribution/v3/version.Version=${{package.version}} -X github.com/distribution/distribution/v3/version.Revision=$(git rev-parse --short HEAD) -X github.com/distribution/distribution/v3/version.mainpkg=github.com/distribution/distribution/v3
      output: digest
      packages: ./cmd/digest
      vendor: true

  - uses: go/build
    with:
      ldflags: -X github.com/distribution/distribution/v3/version.Version=${{package.version}} -X github.com/distribution/distribution/v3/version.Revision=$(git rev-parse --short HEAD) -X github.com/distribution/distribution/v3/version.mainpkg=github.com/distribution/distribution/v3
      output: registry-api-descriptor-template
      packages: ./cmd/registry-api-descriptor-template
      vendor: true

  - name: Install example configuration
    runs: |
      install -Dpm0644 ./config-example.yml "${{targets.destdir}}/etc/distribution/config.yml"
      install -Dpm0644 ./config-example.yml "${{targets.destdir}}/etc/docker/registry/config.yml"
      install -Dpm0644 -t "${{targets.destdir}}/" ./entrypoint.sh

update:
  enabled: true
  github:
    identifier: distribution/distribution
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - crane
        - wait-for-it
        - bash
  pipeline:
    - name: Smoke tests
      runs: |
        set -o pipefail
        digest --version | grep -F -e "${{package.version}}"
        digest --help 2>&1 | grep -F -e "Calculate the digest of one or more input files"
        registry --version | grep -F -e "${{package.version}}"
        registry --help | grep -F -e "stores and distributes Docker images"
    - name: Ensure digest functionality works
      runs: |
        set -o pipefail
        TEXT="Linkyyyyyy "
        TARGET_SHA256="$(echo "${TEXT}" | digest -a sha256)"
        EXPECTED_SHA256="sha256:6042f051be306e0076dfcfd8c96f0d2e5b48690f2c1d85e9ad9e6a7be32fda58"
        TARGET_SHA512="$(echo "${TEXT}" | digest -a sha512)"
        EXPECTED_SHA512="sha512:75a096dfd753444074660889f5bae9f3071fec23e9fd97ea056cbec6d9a7b4deb580b73f23f24d223b32bdfe0071f8f6cf6c00a28aab750bc3ad8db63ccfed95"
        # https://pubs.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_06_02
        test "${TARGET_SHA256#*"$EXPECTED_SHA256"}" != "$TARGET_SHA256"
        test "${TARGET_SHA512#*"$EXPECTED_SHA512"}" != "$TARGET_SHA512"
    - name: Ensure registry functionality works
      runs: |
        set -o pipefail
        LOCAL_REGISTRY="localhost:5000"
        SOURCE_IMAGE="cgr.dev/chainguard/busybox:latest"
        TARGET_IMAGE="${LOCAL_REGISTRY}/busybox:latest"

        registry serve /etc/docker/registry/config.yml &>/dev/null &
        REGISTRY_PID=$!
        trap 'kill -9 ${REGISTRY_PID}' EXIT
        wait-for-it --strict -t 10 "${LOCAL_REGISTRY}"

        BUSYBOX_TAR="$(mktemp)"
        crane pull "${SOURCE_IMAGE}" "${BUSYBOX_TAR}"
        trap 'rm ${BUSYBOX_TAR}' EXIT
        crane push "${BUSYBOX_TAR}" "${TARGET_IMAGE}"
