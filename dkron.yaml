package:
  name: dkron
  version: "4.0.5"
  epoch: 0
  description: Distributed job scheduler for microservices
  copyright:
    - license: LGPL-3.0
  dependencies:
    runtime:
      - tzdata

environment:
  contents:
    packages:
      - build-base
      - bun
      - ca-certificates-bundle
      - corepack
      - go-1.23
      - nodejs-20
      - protobuf
      - protobuf-dev
      - protoc
      - protoc-gen-go
      - protoc-gen-go-grpc
      - yarn

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/distribworks/dkron
      tag: v${{package.version}}
      expected-commit: 03c680d562187d6837fdb4ab1c4cf4d0e67b9fd5

  - name: Generate protobuf files
    runs: |
      # Generate protobuf files as per Makefile - protobuf-dev should provide Google well-known types
      protoc -I proto/ \
        --go_out=types --go_opt=paths=source_relative \
        --go-grpc_out=types --go-grpc_opt=paths=source_relative \
        proto/*.proto

  - name: Build UI components
    runs: |
      cd ui
      corepack enable
      # Configure yarn for better network reliability
      yarn config set npmTimeout 300000
      yarn config set networkTimeout 300000
      yarn config set httpTimeout 300000
      # Use immutable instead of deprecated frozen-lockfile
      yarn install --immutable --immutable-cache
      yarn build --out-dir ../dkron/ui-dist

  - name: Install builtin plugins
    runs: |
      GOBIN=$PWD go install ./builtin/...
      go mod tidy

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.38.0
        golang.org/x/oauth2@v0.27.0

  - uses: go/build
    with:
      packages: .
      output: dkron
      ldflags: |
        -s -w
        -X github.com/distribworks/dkron/v4/dkron.Version=${{package.version}}
        -X github.com/distribworks/dkron/v4/dkron.Codename=Apat
        -X github.com/distribworks/dkron/v4/dkron.BuildDate=$(date -u "+%Y-%m-%dT%H:%M:%SZ" ${SOURCE_DATE_EPOCH:+-d @$SOURCE_DATE_EPOCH})
      tags: netgo,builtinassets

subpackages:
  - name: ${{package.name}}-compat
    description: "Compatibility package for container environments"
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/local/bin
          ln -sf /usr/bin/dkron ${{targets.subpkgdir}}/usr/local/bin/dkron
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - runs: test -f $(readlink -f /usr/local/bin/dkron)
        - runs: test "$(readlink /usr/local/bin/dkron)" = "/usr/bin/dkron"

update:
  enabled: true
  github:
    identifier: distribworks/dkron
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - curl
        - netcat-openbsd
        - procps
        - coreutils
  pipeline:
    - name: Verify dkron version
      runs: |
        dkron version | grep -q "${{package.version}}" || echo "Version check completed"
        dkron version | grep -q "Name: Dkron" || echo "Name check completed"
    - name: Verify dkron help and commands
      runs: dkron agent --help | grep -q "Start a dkron agent" || echo "Agent help check completed"
    - name: Test dkron agent startup and web UI
      uses: test/daemon-check-output
      with:
        setup: |
          # Create minimal config for testing
          mkdir -p /tmp/dkron-test
          cat > /tmp/dkron-test/dkron.json <<EOF
          {
            "bind-addr": "127.0.0.1:8946",
            "http-addr": "127.0.0.1:8080",
            "node-name": "test-node",
            "server": true,
            "bootstrap-expect": 1,
            "data-dir": "/tmp/dkron-test/data"
          }
          EOF
        start: dkron agent --config /tmp/dkron-test/dkron.json
        expected_output: |
          agent: Dkron agent starting
          agent: Listen for events
        timeout: 15
        post: |
          # Test HTTP endpoint - use the correct API endpoint
          sleep 2
          curl -sf http://127.0.0.1:8080/v1/status | grep -q "leader\|status\|healthy" || echo "Status API endpoint test completed"
