package:
  name: docker
  version: "27.5.1"
  epoch: 2
  description: A meta package for Docker Engine and Docker CLI
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - btrfs-progs
      # Include busybox because dockerd-oci-entrypoint is a shell script that execs the input params given.
      - busybox
      - ca-certificates
      - docker-cli
      - docker-cli-buildx
      - docker-compose
      - dockerd
      - e2fsprogs
      - e2fsprogs-extra
      - fuse-overlayfs
      - git
      - ip6tables
      - iproute2
      # docker dind also needs a couple of runtime dependencies mentioned here (https://github.com/moby/moby/blob/0eecd59153c03ced5f5ddd79cc98f29e4d86daec/project/PACKAGERS.md#runtime-dependencies) below are those dependencies.
      - iptables
      - openssh-client
      - openssl
      - pigz
      - procps
      - shadow-subids # equivalent of shadow-uidmap in wolfi
      - xfsprogs
      - xz
      - zfs
  checks:
    disabled:
      # docker is a meta package pulling in several subpackages at runtime
      - empty

environment:
  contents:
    packages:
      - bash
      - btrfs-progs-dev
      - build-base
      - busybox
      - ca-certificates-bundle
      - containerd
      - coreutils
      - go
      - libseccomp-dev
      - libtool
      - linux-headers
      - lvm2-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/moby/moby
      tag: v${{package.version}}
      expected-commit: 4c9b3b011ae4c30145a7b344c870bdda01b454e2

  - runs: |
      # moby/moby uses a non-standard `vendor.mod` and helper scripts instead
      # of the standard `go.mod`. the only way to modify dependencies is to
      # manually change them in the provided `vendor.mod`. To ensure we don't
      # pin to older dependencies when this package auto updates, we use sed with
      # the specific replacement version.

      # CVE-2023-47108 GHSA-8pgv-569h-w5rw CVE-2023-45142 GHSA-rcjv-mgp8-qvmr CVE-2024-45337 GHSA-w32m-9786-jp63
      sed -i 's|golang.org/x/crypto v0.27.0|golang.org/x/crypto v0.31.0|' vendor.mod
      sed -i 's|golang.org/x/net v0.29.0|golang.org/x/net v0.33.0|' vendor.mod
      sed -i 's|go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.45.0|go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.46.0|' vendor.mod
      sed -i 's|go.opentelemetry.io/otel v1.19.0|go.opentelemetry.io/otel v1.21.0|' vendor.mod
      sed -i 's|go.opentelemetry.io/otel/sdk v1.19.0|go.opentelemetry.io/otel/sdk v1.21.0|' vendor.mod
      sed -i 's|go.opentelemetry.io/otel/trace v1.19.0|go.opentelemetry.io/otel/trace v1.21.0|' vendor.mod
      sed -i 's|go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.19.0|go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp v1.21.0|' vendor.mod
      sed -i 's|google.golang.org/protobuf v1.31.0|google.golang.org/protobuf v1.33.0|' vendor.mod
      sed -i 's|github.com/golang/protobuf v1.5.3|github.com/golang/protobuf v1.5.4|' vendor.mod
      sed -i 's|github.com/opencontainers/runc v1.1.13|github.com/opencontainers/runc v1.1.14|' vendor.mod
      sed -i 's|github.com/golang-jwt/jwt/v4 v4.5.0|github.com/golang-jwt/jwt/v4 v4.5.1|' vendor.mod

      ./hack/vendor.sh

      # Replicate the environment setup performed by docker
      export DOCKER_BUILDTAGS="seccomp"

      ./hack/make.sh dynbinary

  # Independently managed from moby/moby, but contains many utility scripts needed for the official docker images.
  # TODO: Figure out a way to autobump this as required
  # https://github.com/docker-library/docker/tree/master
  - working-directory: /home/docker-library
    pipeline:
      - uses: fetch
        with:
          uri: https://github.com/docker-library/docker/archive/273a2df601253b25e8e98dda8f6675346d7338b8.zip
          expected-sha256: 6ce21996f0b98a850d01de6f8f9f79e54c8a72a83fabfde6e228d2c43e2567d6
          extract: false
      - runs: |
          unzip -q 273a2df601253b25e8e98dda8f6675346d7338b8.zip
          mv */** .

  # Docker is vehemenetly against stripping the resulting binary
  # Ref: https://github.com/moby/moby/blob/d8a51d2887cbc465ab8d76ed98f7a86996ab3c22/project/PACKAGERS.md#stripping-binaries
  # - uses: strip
  - runs: |
      # this exists to appease yam

subpackages:
  - name: dockerd
    description: "Docker Engine (dockerd)"
    dependencies:
      runtime:
        # https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies
        - btrfs-progs
        - e2fsprogs
        - e2fsprogs-extra
        - ip6tables
        - iptables
        - openssl
        - xfsprogs
        - xz
        - pigz
        - zfs
        - containerd
        - ctr
        - tini-static
    pipeline:
      - runs: |
          install -Dm755 bundles/dynbinary-daemon/docker-proxy ${{targets.destdir}}/usr/bin/docker-proxy
          install -Dm755 bundles/dynbinary-daemon/dockerd ${{targets.destdir}}/usr/bin/dockerd
          ln -sf /sbin/tini-static ${{targets.destdir}}/usr/bin/docker-init

  - name: docker-oci-entrypoint
    description: "docker OCI entrypoint"
    pipeline:
      - runs: |
          install -Dm755 /home/docker-library/docker-entrypoint.sh "${{targets.subpkgdir}}"/usr/bin/docker-entrypoint.sh
    test:
      pipeline:
        - runs: |
            stat /usr/bin/docker-entrypoint.sh

  - name: dockerd-oci-entrypoint
    description: "dockerd OCI entrypoint"
    dependencies:
      runtime:
        # Used as a fallback in the dockerd-entrypoint.sh script
        - docker-oci-entrypoint
        # Used as a fallback in the dockerd-entrypoint.sh script
        - docker-dind
    pipeline:
      - runs: |
          install -Dm755 /home/docker-library/dockerd-entrypoint.sh "${{targets.subpkgdir}}"/usr/bin/dockerd-entrypoint.sh
    test:
      pipeline:
        - runs: |
            stat /usr/bin/dockerd-entrypoint.sh

  - name: docker-rootless
    description: "dockerd rootless"
    dependencies:
      runtime:
        - rootlesskit
    pipeline:
      - runs: |
          install -Dm755 contrib/dockerd-rootless-setuptool.sh "${{targets.subpkgdir}}"/usr/bin/dockerd-rootless-setuptool.sh
          install -Dm755 contrib/dockerd-rootless.sh "${{targets.subpkgdir}}"/usr/bin/dockerd-rootless
    test:
      pipeline:
        - runs: |
            dockerd-rootless-setuptool.sh --help

  # Ref: https://github.com/docker-library/docker/blob/master/Dockerfile-dind.template
  - name: docker-dind
    description: "Docker in Docker"
    pipeline:
      - runs: |
          install -Dm755 /home/build/hack/dind "${{targets.subpkgdir}}"/usr/bin/dind

  - name: dockerd-service
    description: "Systemd services for docker"
    dependencies:
      runtime:
        - dockerd
        - containerd-service
        - systemd
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/systemd/system/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system-preset/
          install -Dm644 contrib/init/systemd/docker.socket "${{targets.subpkgdir}}"/usr/lib/systemd/system/
          install -Dm644 contrib/init/systemd/docker.service "${{targets.subpkgdir}}"/usr/lib/systemd/system/
          sed -i "s|\[Service\]|[Service]\nEnvironment="PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"|g" "${{targets.subpkgdir}}"/usr/lib/systemd/system/docker.service
          echo "enable docker.service" > "${{targets.subpkgdir}}/usr/lib/systemd/system-preset/81-docker.preset"
          echo "enable docker.socket" >> "${{targets.subpkgdir}}/usr/lib/systemd/system-preset/81-docker.preset"

update:
  enabled: true
  github:
    identifier: moby/moby
    strip-prefix: v
    tag-filter: v

test:
  pipeline:
    - name: Smoke check
      runs: |
        docker -v
        dockerd --version
        docker-init --version
        docker-init -h
        docker-proxy --version
        docker-proxy --help
        dockerd --help
