package:
  name: dotnet-sdk-9.0.3
  version: 9.0.303
  epoch: 0
  description: ".NET SDK ${{package.version}}"
  copyright:
    - license: MIT
  resources:
    cpu: 2
    memory: 32Gi
  dependencies:
    # Only retain for latest feature band as one may want to install
    # multiple bands at once
    provides:
      - dotnet-sdk=${{package.full-version}}
      - dotnet-${{vars.major-version}}-sdk=${{package.full-version}}
    runtime:
      - dotnet-${{vars.major-version}}-runtime
      - dotnet-${{vars.major-version}}-targeting-pack
      - icu

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+)\.\d+\.\d+$
    replace: "$1"
    to: major-version
  - from: ${{package.name}}
    match: ^dotnet-sdk-(\d+\.\d+\.\d+)$
    replace: '$1"00"'
    to: feature-band

environment:
  environment:
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DISABLE_CROSSGEN: true
    DisableArcade: 1
  contents:
    packages:
      - bash
      - busybox
      - curl
      - dotnet-bootstrap-${{vars.major-version}}
      - icu

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/dotnet/sdk
      tag: v${{package.version}}
      expected-commit: 5d97611193a14ad33379c6cfc2d513e6d3639c5f

  - runs: |
      # Setup .NET bootstrap
      mkdir -p prereqs/packages/archive
      ln -sf /usr/share/dotnet-bootstrap/dotnet .dotnet
      ln -sf /usr/share/dotnet-bootstrap/Private.SourceBuilt.Artifacts.Bootstrap.tar.gz \
        prereqs/packages/archive/Private.SourceBuilt.Artifacts.Bootstrap.tar.gz

      # Extract .NET bootstrap archive
      mkdir -p prereqs/packages/previously-source-built
      tar -xzvf prereqs/packages/archive/Private.SourceBuilt.Artifacts.Bootstrap.tar.gz \
        -C prereqs/packages/previously-source-built/

      # Build .NET SDK
      ./build.sh --configuration Release --build -- \
        /v:n \
        /p:Version=${{package.version}} \
        /p:ContinueOnPrebuiltBaselineError=true \
        /p:MinimalConsoleLogOutput=false \
        /p:SkipPortableRuntimeBuild=true \
        /p:BuildWithOnlineSources=false \
        /p:CustomPrebuiltSourceBuiltPackagesPath=$(realpath prereqs/packages/previously-source-built)

      # Install .NET SDK
      mkdir -p ${{targets.contextdir}}/usr/share/dotnet/sdk-manifests
      cp -R artifacts/bin/redist/Release/dotnet/sdk ${{targets.contextdir}}/usr/share/dotnet
      cp -R artifacts/bin/redist/Release/dotnet/sdk-manifests/${{vars.feature-band}} ${{targets.contextdir}}/usr/share/dotnet/sdk-manifests/

  - uses: strip

update:
  enabled: true
  github:
    identifier: dotnet/sdk
    strip-prefix: v
    use-tag: true
    tag-filter: "v9.0.3"

test:
  pipeline:
    - name: Basic .NET command test
      runs: |
        dotnet --info
        dotnet --list-sdks | grep ${{package.version}}
    - name: Compile and run a simple .NET application
      runs: |
        cat <<'EOF' > HelloWorld.cs
        using System;

        class Program
        {
            static void Main()
            {
                Console.WriteLine("Hello, World!");
            }
        }
        EOF
        dotnet new console -o HelloWorldApp --force
        mv HelloWorld.cs HelloWorldApp/Program.cs
        dotnet run --project HelloWorldApp
    - name: Compile and run a .NET application with arguments
      runs: |
        cat <<'EOF' > ArgumentEcho.cs
        using System;

        class Program
        {
            static void Main(string[] args)
            {
                Console.WriteLine("Arguments: " + String.Join(", ", args));
            }
        }
        EOF
        dotnet new console -o ArgumentEchoApp --force
        mv ArgumentEcho.cs ArgumentEchoApp/Program.cs
        dotnet run --project ArgumentEchoApp -- arg1 arg2 arg3
    - uses: test/tw/ldd-check
