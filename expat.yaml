package:
  name: expat
  version: 2.6.4
  epoch: 1
  description: "XML SAX Parser library written in C"
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle

pipeline:
  - uses: fetch
    with:
      uri: https://downloads.sourceforge.net/project/expat/expat/${{package.version}}/expat-${{package.version}}.tar.bz2
      expected-sha256: 8dc480b796163d4436e6f1352e71800a774f73dbae213f1860b60607d2a83ada

  - name: Configure
    runs: |
      ./configure \
         --host=${{host.triplet.gnu}} \
         --target=${{host.triplet.gnu}} \
         --prefix=/usr \
         --datadir=/usr/share

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

subpackages:
  - name: "expat-dev"
    description: "expat headers"
    pipeline:
      - uses: split/dev
    test:
      pipeline:
        - uses: test/pkgconf

  - name: "libexpat1"
    description: "libexpat shared library"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr
          mv "${{targets.destdir}}"/usr/lib "${{targets.subpkgdir}}"/usr/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: libexpat1

  - name: expat-doc
    description: expat docs
    pipeline:
      - uses: split/manpages
    test:
      pipeline:
        - uses: test/docs

update:
  enabled: true
  release-monitor:
    identifier: 770

test:
  environment:
    contents:
      packages:
        - build-base
        - expat-dev
        - posix-libc-utils
  pipeline:
    - name: "Check expat version"
      runs: |
        xmlwf -v | grep ${{package.version}}
        xmlwf --version
        xmlwf --help
    - name: "Compile and run simple XML parsing test"
      runs: |
        cat > test.c << EOF
        #include <expat.h>
        #include <stdio.h>
        #include <string.h>

        static void XMLCALL
        start_element(void *userData, const XML_Char *name, const XML_Char **atts) {
          printf("Element: %s\n", name);
        }

        int main() {
          XML_Parser parser = XML_ParserCreate(NULL);
          XML_SetElementHandler(parser, start_element, NULL);

          const char *xml = "<root><child>Test</child></root>";
          if (XML_Parse(parser, xml, strlen(xml), 1) == XML_STATUS_ERROR) {
            printf("Error: %s\n", XML_ErrorString(XML_GetErrorCode(parser)));
            return 1;
          }

          XML_ParserFree(parser);
          return 0;
        }
        EOF

        gcc -o test test.c -lexpat
        ./test
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}
    - name: "Verify XML parsing functionality"
      runs: |
        cat > test.xml << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <root>
          <child>Test Content</child>
        </root>
        EOF

        xmlwf test.xml
