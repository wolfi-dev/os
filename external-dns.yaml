package:
  name: external-dns
  version: "0.16.1"
  epoch: 5
  description: Configure external DNS servers (AWS Route53, Google CloudDNS and others) for Kubernetes Ingresses and Services.
  copyright:
    - paths:
        - '*'
      license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 017f7687ca393138b565e51757a6fa8010902066
      repository: https://github.com/kubernetes-sigs/external-dns
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        github.com/golang-jwt/jwt/v5@v5.2.2
        golang.org/x/net@v0.38.0

  - runs: |
      # Our global LDFLAGS conflict with a Makefile parameter
      unset LDFLAGS
      make build
      mkdir -p ${{targets.destdir}}/usr/bin
      mv build/external-dns ${{targets.destdir}}/usr/bin/

  - uses: strip

subpackages:
  - name: ${{package.name}}-bitnami-compat
    pipeline:
      - name: Create symlinks
        runs: |
          mkdir -p "${{targets.contextdir}}/opt/bitnami/external-dns/bin"
          ln -s /usr/bin/external-dns "${{targets.contextdir}}/opt/bitnami/external-dns/bin/external-dns"
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - runs: |
            /opt/bitnami/external-dns/bin/external-dns --version
            /opt/bitnami/external-dns/bin/external-dns --help

update:
  enabled: true
  github:
    identifier: kubernetes-sigs/external-dns
    strip-prefix: v
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - etcd
        - bind-tools
        - coredns
  pipeline:
    - name: Basic binary tests
      runs: |
        external-dns --version
        external-dns --help
    - name: Functional verification
      runs: |
        # Start a local etcd instance
        etcd --listen-client-urls http://127.0.0.1:2379 --advertise-client-urls http://127.0.0.1:2379 &
        etcd_pid=$!
        sleep 2

        etcdctl put /skydns/org/example/foo '{"host":"42.42.42.42"}'

        # Start CoreDNS with etcd backend
        cat > Corefile <<EOF
        .:53 {
            errors
            health
            etcd {
                path /skydns
                endpoint http://127.0.0.1:2379
            }
            forward . /etc/resolv.conf
            cache
        }
        EOF
        coredns -conf Corefile &
        coredns_pid=$!
        sleep 2

        external-dns --provider coredns --log-level debug --etcd-endpoints http://127.0.0.1:2379 &
        external_dns_pid=$!
        sleep 2

        dig @127.0.0.1 foo.example.org +short
        if [ "$(dig @127.0.0.1 foo.example.org +short)" != "42.42.42.42" ]; then
          echo "DNS resolution failed"
          exit 1
        fi

        kill $external_dns_pid || true
        kill $coredns_pid || true
        kill $etcd_pid || true
