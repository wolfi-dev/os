package:
  name: external-dns
  version: "0.16.1"
  epoch: 5
  description: Configure external DNS servers (AWS Route53, Google CloudDNS and others) for Kubernetes Ingresses and Services.
  copyright:
    - paths:
        - '*'
      license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 017f7687ca393138b565e51757a6fa8010902066
      repository: https://github.com/kubernetes-sigs/external-dns
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        github.com/golang-jwt/jwt/v5@v5.2.2
        golang.org/x/net@v0.38.0

  - runs: |
      # Our global LDFLAGS conflict with a Makefile parameter
      unset LDFLAGS
      make build
      mkdir -p ${{targets.destdir}}/usr/bin
      mv build/external-dns ${{targets.destdir}}/usr/bin/

  - uses: strip

subpackages:
  - name: ${{package.name}}-bitnami-compat
    pipeline:
      - name: Create symlinks
        runs: |
          mkdir -p "${{targets.contextdir}}/opt/bitnami/external-dns/bin"
          ln -s /usr/bin/external-dns "${{targets.contextdir}}/opt/bitnami/external-dns/bin/external-dns"
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - runs: |
            /opt/bitnami/external-dns/bin/external-dns --version
            /opt/bitnami/external-dns/bin/external-dns --help

update:
  enabled: true
  github:
    identifier: kubernetes-sigs/external-dns
    strip-prefix: v
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - etcd
        - bind-tools
        - coredns
        - kwok
        - kwokctl
        - kubernetes # depends on kubectl at runtime
  pipeline:
    - name: Basic binary tests
      runs: |
        external-dns --version
        external-dns --help
    - uses: test/kwok/cluster
    - name: Setup RBAC
      runs: |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: default
          namespace: default
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: external-dns
        rules:
        - apiGroups: [""]
          resources: ["services","endpoints","pods","nodes"]
          verbs: ["get","watch","list"]
        - apiGroups: ["extensions","networking.k8s.io"]
          resources: ["ingresses"]
          verbs: ["get","watch","list"]
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: external-dns-viewer
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: external-dns
        subjects:
        - kind: ServiceAccount
          name: default
          namespace: default
        EOF
    - name: Test Service DNS record creation
      runs: |
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: Pod
        metadata:
          name: nginx
          labels:
            app: nginx
        spec:
          serviceAccountName: default
          containers:
          - name: nginx
            image: nginx
            ports:
            - containerPort: 80
        EOF

        kubectl wait --for=condition=ready pod/nginx --timeout=60s

        kubectl expose pod nginx --port=80 --target-port=80 --type=LoadBalancer
        kubectl annotate service nginx "external-dns.alpha.kubernetes.io/hostname=nginx.example.org."

        # Run external-dns in dry-run mode
        external-dns --txt-owner-id test-cluster \
          --provider inmemory \
          --source service \
          --once \
          --dry-run \
          --log-level debug
    - name: Test Ingress DNS record creation
      runs: |
        cat <<EOF | kubectl apply -f -
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: test-ingress
          annotations:
            external-dns.alpha.kubernetes.io/hostname: ingress.example.org
        spec:
          rules:
          - host: ingress.example.org
            http:
              paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: nginx
                    port:
                      number: 80
        EOF

        kubectl wait --for=condition=ready pod/nginx --timeout=60s

        external-dns --txt-owner-id test-cluster \
          --provider inmemory \
          --source ingress \
          --once \
          --dry-run \
          --log-level debug
    - name: Test TXT record ownership
      runs: |
        external-dns --txt-owner-id test-cluster \
          --provider inmemory \
          --source service \
          --registry txt \
          --once \
          --dry-run \
          --log-level debug
    - name: Test domain filtering
      runs: |
        external-dns --txt-owner-id test-cluster \
          --provider inmemory \
          --source service \
          --domain-filter example.org \
          --once \
          --dry-run \
          --log-level debug
