package:
  name: falco-libs
  version: "0.21.0"
  epoch: 1
  description: Foundational components necessary to build Falco
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - abseil-cpp-dev
      - autoconf
      - automake
      - bash
      - binutils
      - bpftool
      - build-base
      - busybox
      - c-ares-dev
      - ca-certificates-bundle
      - clang-16-dev
      - cmake
      - curl-dev
      - elfutils-dev
      - gcc
      - git
      - grpc-dev
      - gtest-dev
      - icu-dev
      - jq-dev
      - json-c-dev
      - libbpf-dev
      - libelf
      - libelf-static
      - libtbb
      - libtbb-dev
      - libtool
      - linux-headers
      - luajit
      - m4
      - make
      - openssl-dev
      - patch
      - perl
      - protobuf-dev
      - re2-dev
      - uthash
      - yaml-cpp-dev
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/falcosecurity/libs
      tag: ${{package.version}}
      expected-commit: 1dcb369c20625db51f6cdca3e62435f61449eacb

data:
  - name: libs
    items:
      libscap: System capture library to manage the data capture process
      libscap-modern-ebpf: System capture library to manage the data capture process with modern eBPF driver
      libsinsp: libsinsp

subpackages:
  - range: libs
    name: falco-${{range.key}}
    description: ${{range.value}}
    pipeline:
      - runs: |
          export MODERN_BPF=Off
          [ "${{range.key}}" == "libscap-modern-ebpf" ] && export MODERN_BPF=On

          mkdir -p build
          cd build
          cmake \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DCMAKE_INSTALL_LIBDIR=/usr/lib \
            -DFALCO_ETC_DIR=/etc/falco \
            -DCMAKE_BUILD_TYPE=Release \
            -DUSE_BUNDLED_DEPS=Off \
            -DUSE_BUNDLED_JSONCPP=On \
            -DUSE_BUNDLED_VALIJSON=On \
            -DUSE_BUNDLED_TBB=Off \
            -DBUILD_LIBSCAP_MODERN_BPF=${MODERN_BPF} \
          ..
      - runs: |
          cd build
          if [ "${{range.key}}" == "libsinsp" ]; then
            # sinsp depends on target scap.
            # See https://github.com/falcosecurity/libs#build
            make scap
            make sinsp
            mkdir -p "${{targets.subpkgdir}}"/usr/lib/libsinsp
            cp -R ../userspace/libsinsp/. "${{targets.subpkgdir}}"/usr/lib/libsinsp
          else
            make scap
            mkdir -p "${{targets.subpkgdir}}"/usr/lib/libscap
            cp -R ../userspace/libscap/. "${{targets.subpkgdir}}"/usr/lib/libscap
          fi
      - uses: strip

update:
  enabled: true
  ignore-regex-patterns:
    - '.*\+driver'
  github:
    identifier: falcosecurity/libs

# Based on package size if was determined that this origin package is empty apart from its own SBOM and this test was added to confirm it is empty and will fail if the package is not longer empty (contains more than an SBOM)
test:
  pipeline:
    - uses: test/emptypackage
