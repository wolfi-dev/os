package:
  name: filebrowser
  version: "2.36.0"
  description: "Web File Browser"
  epoch: 0
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - ca-certificates-bundle
      - jq
      - mailcap
      - nodejs
      - npm
      - pnpm
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/filebrowser/filebrowser.git
      tag: v${{package.version}}
      expected-commit: 0c34b79a9937b970f2259e37d1f33bab2bddbfab

  - name: install-npm-dependencies
    working-directory: frontend
    pipeline:
      - runs: |
          npm install --frozen-lockfile
          NODE_ENV=production npm run build

  - uses: go/bump
    with:
      replaces: github.com/mholt/archiver/v3=github.com/anchore/archiver/v3@v3.5.2
      modroot: .

  - uses: go/build
    with:
      modroot: .
      packages: .
      ldflags: |
        -X github.com/filebrowser/filebrowser/v2/version.Version=v${{package.version}}
        -X github.com/filebrowser/filebrowser/v2/version.CommitSHA=$(git rev-parse HEAD)
      output: ${{package.name}}

  - name: copy files
    pipeline:
      - runs: |
          mkdir -p ${{targets.destdir}}/config
          mkdir -p ${{targets.destdir}}/databaseAdd commentMore actions
          cp -ar docker/common/* ${{targets.destdir}}/
          cp -ar docker/alpine/* ${{targets.destdir}}/
          cp settings.json ${{targets.contextdir}}/.filebrowser.json

subpackages:
  - name: ${{package.name}}-compat
    description: Symlink for the filebrowser binary in the root folder
    dependencies:
      runtime:
        - curl
        - jq
        - tini
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}
          ln -sf /usr/bin/filebrowser ${{targets.contextdir}}/

test:
  environment:
    contents:
      packages:
        - wait-for-it
        - ${{package.name}}-compat
    environment:
      TINI_SUBREAPER: true
  pipeline:
    - runs: |
        filebrowser --help
        filebrowser version | grep ${{package.version}}
        stat /healthcheck.sh
        stat /init.sh
    - name: check health status
      uses: test/daemon-check-output
      with:
        start: "tini -- /init.sh filebrowser --config /config/settings.json"
        timeout: 60
        expected_output: |
          Listening on
        post: |
          wait-for-it -t 10 --strict localhost:8080 -- echo "Server is up"Add commentMore actions
          curl -sf http://localhost:8080/health | grep "OK"
          /healthcheck.sh

update:
  enabled: true
  github:
    identifier: filebrowser/filebrowser
    strip-prefix: v
