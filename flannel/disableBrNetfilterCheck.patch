From b1b4adec167ad515754061b27428449d3c9a39de Mon Sep 17 00:00:00 2001
From: Debasish Biswas <debasishbsws.dev@gmail.com>
Date: Thu, 9 Oct 2025 08:41:15 +0000
Subject: [PATCH] feat: add --disable-br-netfilter-check flag for container
 environments

This change adds a new command-line flag --disable-br-netfilter-check to address
compatibility issues in containerized environments, particularly for CI/CD pipelines test
using Docker runners on aarch64 architecture.

Signed-off-by: Debasish Biswas <debasishbsws.dev@gmail.com>
---
 main.go | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/main.go b/main.go
index 6f40c4d2..d29ac68b 100644
--- a/main.go
+++ b/main.go
@@ -98,6 +98,7 @@ type CmdLineOpts struct {
 	blackholeRoute            bool
 	netConfPath               string
 	setNodeNetworkUnavailable bool
+	disableBrNetfilterCheck   bool
 }
 
 var (
@@ -136,6 +137,7 @@ func init() {
 	flannelFlags.BoolVar(&opts.blackholeRoute, "ip-blackhole-route", false, "add blackroute route ont the node for the local podCIDR")
 	flannelFlags.StringVar(&opts.netConfPath, "net-config-path", "/etc/kube-flannel/net-conf.json", "path to the network configuration file")
 	flannelFlags.BoolVar(&opts.setNodeNetworkUnavailable, "set-node-network-unavailable", true, "set NodeNetworkUnavailable after ready")
+	flannelFlags.BoolVar(&opts.disableBrNetfilterCheck, "disable-br-netfilter-check", false, "disable br_netfilter module check (useful for Docker environments)")
 
 	log.InitFlags(nil)
 
@@ -271,7 +273,7 @@ func main() {
 		os.Exit(1)
 	}
 
-	if runtime.GOOS != "windows" {
+	if runtime.GOOS != "windows" && !opts.disableBrNetfilterCheck {
 		// From Kubernetes 1.30 kubeadm doesn't check if the br_netfilter module is loaded and in case it's missing Flannel wrongly starts
 		if config.EnableIPv4 {
 			if _, err = os.Stat("/proc/sys/net/bridge/bridge-nf-call-iptables"); os.IsNotExist(err) {
-- 
2.51.0

