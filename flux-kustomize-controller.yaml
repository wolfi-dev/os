package:
  name: flux-kustomize-controller
  version: "1.5.1"
  epoch: 3
  description: The GitOps Toolkit Kustomize reconciler
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - git
      - gnupg
      - gnupg-gpgconf
      - gnupg-utils
      - gnupg-wks-client
      - gpg
      - gpg-agent
      - gpg-wks-server
      - gpgsm
      - gpgv
      - openssh-client
      - tzdata

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go
  environment:
    CGO_ENABLED: "0"

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 34837b9506f4f0167e3be210f6df8e3ebb59db16
      repository: https://github.com/fluxcd/kustomize-controller
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        github.com/go-jose/go-jose/v4@v4.0.5
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.36.0
        github.com/golang-jwt/jwt/v5@v5.2.2

  - uses: go/build
    with:
      ldflags: -X main.Version=${{package.version}}
      output: kustomize-controller
      packages: .

subpackages:
  - name: fluxcd-kustomize-controller-bitnami-compat
    description: "compat package with bitnami/flux image"
    pipeline:
      - uses: bitnami/compat
        with:
          image: fluxcd-kustomize-controller
          version-path: 1/debian-12
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/bitnami/fluxcd-kustomize-controller/bin/
          chmod g+rwX ${{targets.subpkgdir}}/opt/bitnami
          ln -sf /usr/bin/kustomize-controller ${{targets.subpkgdir}}/opt/bitnami/fluxcd-kustomize-controller/bin/kustomize-controller
          cp LICENSE ${{targets.subpkgdir}}/opt/bitnami/licenses/LICENSE
    test:
      environment:
        contents:
          packages:
            - curl
            - flux-kustomize-controller
            - kubectl
      pipeline:
        - uses: test/kwok/cluster
        - runs: |
            run-script --version
            run-script --help
        - name: "Test kustomize-controller startup"
          uses: test/daemon-check-output
          with:
            setup: |
              # Create required directories
              mkdir -p /opt/bitnami/fluxcd-kustomize-controller/bin/
              # Create symlink to the installed binary
              ln -sf /usr/bin/kustomize-controller /opt/bitnami/fluxcd-kustomize-controller/bin/
              # Set up Kubernetes configuration
              kubectl apply -f https://github.com/fluxcd/flux2/releases/latest/download/install.yaml
              kubectl wait --for=condition=Ready nodes --all
            start: |
              env PATH=/opt/bitnami/fluxcd-kustomize-controller/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
                  BITNAMI_APP_NAME=fluxcd-kustomize-controller \
                  /opt/bitnami/fluxcd-kustomize-controller/bin/kustomize-controller
            timeout: 30
            expected_output: |
              Starting workers
              Starting Controller
            error_strings: |
              "msg":"error"
              "level":"error"
              "panic"
              "fatal"
              failed
              Error:
              error:
              denied
            post: |
              # Verify metrics endpoint is accessible
              n=0
              max=30
              url=http://localhost:8080/metrics
              while ! out=$(curl --fail "$url" 2>err) &&
                  n=$((n+1)) && [ $n -lt $max ]; do
                echo  "=== curl rc=$? for $n/$max on $url ==="
                sleep 1
              done
              [ $n -eq $max ] && {
                echo "FATAL - gave up after $max tries";
                echo "out=$out";
                echo "err: $(cat err))";
                exit 1;
              }
              echo "== vv $url content after $n seconds vv =="
              echo "$out" | sed "s,^,> ,"
              echo "== ^^ $url content after $n seconds ^^ =="
              echo "$out" | grep kustomize_controller || {
                echo "FATAL: expected kustomize_controller not found in output"
                exit 1
              }

update:
  ignore-regex-patterns:
    - api/
  enabled: true
  github:
    identifier: fluxcd/kustomize-controller
    strip-prefix: v
    tag-filter: v
    use-tag: true

#test:
#  environment:
#    contents:
#      packages:
#        - curl
#  pipeline:
#    - uses: test/kwok/cluster
#    - name: Verify kustomize-controller installation
#      runs: |
#        kubectl apply -f https://github.com/fluxcd/flux2/releases/latest/download/install.yaml
#        kubectl wait --for=condition=Ready nodes --all
#        kustomize-controller --health-addr :9441 --metrics-addr :8081 > /dev/null 2>&1 & \
#        sleep 5; curl -s localhost:8081/metrics  | grep rest_client_requests_total
