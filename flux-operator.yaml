package:
  name: flux-operator
  version: "0.24.1"
  epoch: 2
  description: Flux Operator creates and manages Flux instances running in Kubernetes
  copyright:
    - license: AGPL-3.0-or-later

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 09d991b9168009d84a3ebef203a60d4af18ec3ab
      repository: https://github.com/controlplaneio-fluxcd/flux-operator.git
      tag: v${{package.version}}

  - uses: go/build
    with:
      packages: ./cmd/operator/main.go
      output: flux-operator
      ldflags: -X main.VERSION=${{package.version}}

subpackages:
  - name: ${{package.name}}-mcp
    description: mcp server for ${{package.name}}
    pipeline:
      - uses: go/build
        with:
          packages: ./cmd/mcp/
          output: flux-operator-mcp
          ldflags: -X main.VERSION=${{package.version}}
    test:
      environment:
        environment:
          KUBECONFIG: "~/.kube/config"
        contents:
          packages:
            - coreutils
            - curl
      pipeline:
        - runs: |
            /usr/bin/flux-operator-mcp -v | grep "${{package.version}}"
        - name: "MCP Server API test"
          runs: |
            flux-operator-mcp serve --transport sse --port 9090 --read-only &
            MCP_PID=$!
            sleep 3

            stdbuf -oL curl -s http://localhost:9090/sse >/tmp/sse_output 2>&1 &
            PID1=$!
            sleep 2

            # Extract and sanitize session ID
            SESSION_ID=$(grep "sessionId=" /tmp/sse_output | cut -d'=' -f2 | head -n1 | tr -d '\r\n ')
            echo "Session ID: $SESSION_ID"

            # Allow brief delay to ensure session is active
            sleep 1

            # Send RPC requests
            curl -s -X POST "http://localhost:9090/message?sessionId=$SESSION_ID" \
              -H "Content-Type: application/json" \
              -d '{"jsonrpc":"2.0","method":"initialize","params":{"protocolVersion":"2024-11-05","capabilities":{}},"id":1}'

            curl -s -X POST "http://localhost:9090/message?sessionId=$SESSION_ID" \
              -H "Content-Type: application/json" \
              -d '{"jsonrpc":"2.0","method":"tools/list","params":{},"id":2}'

            # Give the SSE stream time to receive the response
            sleep 1

            # Validate the SSE output includes expected tool
            grep -q "get_flux_instance" /tmp/sse_output

            # Now it's safe to kill the background SSE listener
            kill $PID1
            kill $MCP_PID

  - name: ${{package.name}}-compat
    description: compat package for ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"
          ln -sf /usr/bin/flux-operator ${{targets.contextdir}}/flux-operator
    test:
      pipeline:
        - runs: |
            stat /flux-operator

  - name: ${{package.name}}-mcp-compat
    description: compat package for flux-operator-mcp
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"
          ln -sf /usr/bin/flux-operator-mcp ${{targets.contextdir}}/flux-operator-mcp
    test:
      pipeline:
        - runs: |
            test "$(readlink /flux-operator-mcp)" = "/usr/bin/flux-operator-mcp"

update:
  enabled: true
  github:
    identifier: controlplaneio-fluxcd/flux-operator
    strip-prefix: v

test:
  environment:
    environment:
      RUNTIME_NAMESPACE: "default"
    contents:
      packages:
        - helm
        - curl
  pipeline:
    - runs: |
        /usr/bin/flux-operator --help 2>&1 | grep metrics-addr
    - uses: test/kwok/cluster
    - name: "Functional test for operator"
      uses: test/daemon-check-output
      with:
        setup: |
          helm install flux-operator oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator --namespace flux-system --create-namespace
        start: |
          flux-operator --enable-leader-election=false
        timeout: 30
        expected_output: |
          Starting EventSource
          Starting workers
          Starting Controller
        post: |-
          curl -fsSL localhost:8080/metrics | grep -i "workqueue_work_duration_seconds_bucket"
