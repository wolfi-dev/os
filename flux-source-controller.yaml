package:
  name: flux-source-controller
  version: "1.7.0"
  epoch: 0 # GHSA-2464-8j7c-4cjm
  description: The GitOps Toolkit source management component
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - merged-usrsbin
      - wolfi-baselayout

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - clang-16
      - gcc
      - go
      - lld-16

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 39b9314d479ab0cc5aa554dab3525b9bfb80d099
      repository: https://github.com/fluxcd/source-controller
      tag: v${{package.version}}

  - runs: |
      mkdir -p "${{targets.destdir}}"/usr/bin
      CGO_ENABLED=1 CGO_LDFLAGS="-static -fuse-ld=lld" go build \
        -ldflags "-w" \
        -tags 'netgo,osusergo,static_build' \
        -trimpath -o "${{targets.destdir}}"/usr/bin/source-controller .

  - uses: strip

subpackages:
  - name: ${{package.name}}-iamguarded-compat
    description: "compat package for iamguarded"
    pipeline:
      - runs: |
          mkdir -p /opt/iamguarded/flux/bin/
          ln -sf /usr/bin/source-controller /opt/iamguarded/flux/bin/source-controller
      - uses: iamguarded/build-compat
        with:
          package: flux-source-controller
          version: ${{vars.major-version}}
      - uses: iamguarded/finalize-compat
        with:
          package: flux-source-controller
          version: ${{vars.major-version}}
    test:
      pipeline:
        - runs: |
            stat /opt/iamguarded/flux/bin/source-controller
        - uses: iamguarded/test-compat
          with:
            package: flux-source-controller
            version: ${{vars.major-version}}

update:
  enabled: true
  ignore-regex-patterns:
    - api/
  github:
    identifier: fluxcd/source-controller
    strip-prefix: v
    tag-filter: v

test:
  environment:
    environment:
      KUBERNETES_SERVICE_HOST: "127.0.0.1"
      KUBERNETES_SERVICE_PORT: 32764
    contents:
      packages:
        - ${{package.name}}
        - curl
  pipeline:
    - runs: |
        source-controller -h > output.txt 2>&1
        cat output.txt | grep "Usage of source-controller"
    # only passes with docker runner: `MELANGE_EXTRA_OPTS="--runner docker" make test/flux-notification-controller`
    - uses: test/kwok/cluster
    - name: "start ${{package.name}} and test"
      uses: test/daemon-check-output
      with:
        setup: |
          kubectl apply -f https://github.com/fluxcd/source-controller/releases/download/v${{package.version}}/source-controller.crds.yaml
          kubectl wait --for=condition=Ready nodes --all
        start: source-controller --storage-adv-addr=source-controller.default.svc.cluster.local --storage-path=/ --health-addr :9441 --metrics-addr :8081 > /dev/null 2>&1
        timeout: 30
        expected_output: |
          starting manager
          source.toolkit.fluxcd.io
          Starting Controller
          Starting workers
        post: |
          #!/bin/sh -e
          set -o pipefail
          curl -s localhost:8081/metrics  | grep rest_client_requests_total
          curl -v localhost:9441/healthz 2>&1 | grep -i "200 OK"
          # Test the file server is up
          curl -s localhost:9090 | grep 'pre'
