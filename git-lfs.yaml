package:
  name: git-lfs
  version: "3.6.1"
  epoch: 2
  description: "large file support for git"
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - git
  scriptlets:
    post-install: |
      #!/bin/sh
      git-lfs install --skip-repo --system
    pre-deinstall: |
      #!/bin/sh
      git lfs uninstall --skip-repo --system

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/git-lfs/git-lfs
      tag: v${{package.version}}
      expected-commit: ea47a34bde1ba1ecf9eb8dc6d44fcf7aef42f5e3

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/crypto@v0.31.0
        golang.org/x/net@v0.33.0

  - uses: go/build
    with:
      ldflags: -X github.com/git-lfs/git-lfs/v3/config.GitCommit=$(git rev-parse --short HEAD)
      packages: .
      output: git-lfs

subpackages:
  - name: git-lfs-config
    description: system wide git-lfs config
    dependencies:
      runtime:
        - git-lfs
    pipeline:
      - runs: |
          ${{targets.destdir}}/usr/bin/git-lfs install --skip-repo --system
          mkdir -p ${{targets.subpkgdir}}/etc/
          cp /etc/gitconfig ${{targets.subpkgdir}}/etc/gitconfig

update:
  enabled: true
  github:
    identifier: git-lfs/git-lfs
    tag-filter: v
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - bash
  pipeline:
    - name: "Verify git-lfs installation"
      runs: |
        git lfs version
    - name: "Check git-lfs help command"
      runs: |
        git lfs help
    - name: "Test git-lfs initialization"
      runs: |
        git init test-repo
        cd test-repo
        git lfs install
    - name: "Verify track command"
      runs: |
        cd test-repo
        git lfs track "*.bin"
        grep "*.bin" .gitattributes
    - name: "Test basic git-lfs operations"
      runs: |
        cd test-repo
        # Create a large file
        dd if=/dev/zero of=large-file.bin bs=1M count=5
        git lfs track "*.bin"
        git add .gitattributes
        git add large-file.bin
        git config --global user.email "test@example.com"
        git config --global user.name "Test User"
        git commit -m "Add large file"
        git lfs ls-files | grep "large-file.bin"
    - name: "Test git-lfs status"
      runs: |
        cd test-repo
        git lfs status
    - name: "Verify git-lfs configuration"
      runs: |
        cd test-repo
        git lfs env
    - name: "Test git-lfs clean command"
      runs: |
        cd test-repo
        echo "test content" > test.bin
        git lfs clean < test.bin
    - name: "Test git-lfs pointer command"
      runs: |
        cd test-repo
        git lfs pointer --file=large-file.bin
