package:
  name: golangci-lint
  version: "1.64.5"
  epoch: 0
  description: Fast linters Runner for Go
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - diffutils

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/golangci/golangci-lint
      tag: v${{package.version}}
      expected-commit: 0a603e49e5e9870f5f9f2035bcbe42cd9620a9d5

  - runs: |
      make build
      mkdir -p ${{targets.destdir}}/usr/bin/
      cp ./golangci-lint ${{targets.destdir}}/usr/bin/golangci-lint

  - uses: strip

update:
  enabled: true
  github:
    identifier: golangci/golangci-lint
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - bash
        - go
        - git
  pipeline:
    - name: "Verify basic commands and version"
      runs: |
        golangci-lint --version
        golangci-lint --help
    - name: "Test linting identifies issues (expected failure)"
      runs: |
        mkdir test-project
        cd test-project
        go mod init example.com/test

        # Create test file with intentional issues
        cat > main.go << 'EOF'
        package main

        func main() {
            var unused string  // Intentional unused variable
            println("Hello")
        }
        EOF

        # Run linter - should exit with non-zero code
        if golangci-lint run; then
          echo "Expected linter to fail due to unused variable"
          exit 1
        fi
    - name: "Test linting passes on clean code"
      runs: |
        cd test-project
        # Create clean test file
        cat > clean.go << 'EOF'
        package main

        func main() {
            println("Hello")
        }
        EOF

        # Should pass
        golangci-lint run clean.go
    - name: "Test specific linter enablement with expected issues"
      runs: |
        cd test-project
        # Should fail due to unused variable, but only if unused linter is enabled
        if golangci-lint run --disable-all --enable=unused main.go; then
          echo "Expected linter to fail with unused variable"
          exit 1
        fi
