package:
  name: google-cloud-sdk
  version: "545.0.0"
  epoch: 0
  description: "Google Cloud Command Line Interface"
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - py3.13-${{package.name}}

data:
  - name: py-versions
    items:
      3.10: "310"
      3.11: "311"
      3.12: "312"
      3.13: "313"

environment:
  contents:
    packages:
      - ca-certificates-bundle
      - python-3.13
      - wolfi-base

pipeline:
  - if: ${{build.arch}} == "x86_64"
    uses: fetch
    with:
      uri: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-${{package.version}}-linux-x86_64.tar.gz
      expected-sha256: 16fb293a0db21de13ef089a321f8ea51338f087d03b012cc00d5a9093bc5ffad
      strip-components: 0

  - if: ${{build.arch}} == "aarch64"
    uses: fetch
    with:
      uri: https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-${{package.version}}-linux-arm.tar.gz
      expected-sha256: 37583fc452a76d599385e5c96836d0984bf4746396a1cca49c97717c558b4bad
      strip-components: 0

  - runs: |
      ./google-cloud-sdk/install.sh -q

      # Trim some extra stuff
      rm -rf google-cloud-sdk/platform/bundledpythonunix/
      rm -rf google-cloud-sdk/deb
      rm -rf google-cloud-sdk/rpm
      rm google-cloud-sdk/install.bat

      # Remove any third party tests that bloat up the package
      find google-cloud-sdk -type d \( -name 'tests' -o -name 'test' \) -path '*/third_party/*' -exec rm -rf {} +

      # This is a large binary with vulnerabilities in it, users can add it back later.
      google-cloud-sdk/bin/gcloud components remove gcloud-crc32c

      # Running gcloud adds a bunch of pyc files, remove those
      find google-cloud-sdk/ -name "*.pyc" -exec rm -rf '{}' +

      rm -rf google-cloud-sdk/.install

      # gcloud expects to find a directory called ".install" in its "Installation Root" (as reported by "gcloud info").
      # Without this, "gcloud components" doesn't work.
      mkdir google-cloud-sdk/.install

      mkdir -p "${{targets.contextdir}}/usr/share"
      mv google-cloud-sdk ${{targets.contextdir}}/usr/share/

      mkdir -p ${{targets.destdir}}/usr/bin
      for f in bq docker-credential-gcloud gcloud git-credential-gcloud.sh gsutil java_dev_appserver.sh; do
        ln -sf ../share/google-cloud-sdk/bin/$f ${{targets.destdir}}/usr/bin/$f
      done

  - uses: strip

subpackages:
  - name: ${{package.name}}-core
    description: "install files for google-cloud-sdk with no specific python"
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"
          mv "${{targets.destdir}}"/* "${{targets.contextdir}}"/

  # these just force the installation of a specific
  # version of python even though the gcloud tools poke around
  # to find one.  As it is, if you had multiple pythons installed,
  # then you aren't actually guaranteed to have given version run it.
  - range: py-versions
    name: py${{range.key}}-google-cloud-sdk
    description: ${{package.name}} installed for python${{range.key}}
    dependencies:
      runtime:
        - ${{package.name}}-core
        - python-${{range.key}}-base
        - py${{range.key}}-crcmod
    test:
      pipeline:
        # emptypackage added by a robot. The APK was empty when it was checked,
        # which may not be true forever. If this test fails in the future, please
        # replace it with a more accurate test.
        - uses: test/emptypackage
        - uses: test/tw/ldd-check
        - uses: test/tw/ver-check
          with:
            bins: gcloud
        - uses: test/tw/help-check
          with:
            bins: docker-credential-gcloud gcloud git-credential-gcloud.sh gsutil
        - runs: |
            gcloud components list

  - name: ${{package.name}}-iamguarded-compat
    description: "compat package with iamguarded/google-cloud-sdk image"
    dependencies:
      runtime:
        - bash
        - busybox
        - merged-usrsbin
        - py3.11-google-cloud-sdk
        - wolfi-baselayout
    pipeline:
      - uses: iamguarded/build-compat
        with:
          package: google-cloud-sdk
          version: "0"
      - runs: |
          mkdir -p /opt/iamguarded/google-cloud-sdk/bin/
          chmod g+rwX /opt/iamguarded

          # Create symlinks for gcloud binaries
          for binary in gcloud gsutil bq docker-credential-gcloud git-credential-gcloud.sh java_dev_appserver.sh; do
            ln -sf /usr/bin/$binary /opt/iamguarded/google-cloud-sdk/bin/$binary
          done

          # Create expected directories
          mkdir -p /opt/iamguarded/google-cloud-sdk/tmp
          mkdir -p /opt/iamguarded/google-cloud-sdk/logs
          mkdir -p /iamguarded/google-cloud-sdk
      - uses: iamguarded/finalize-compat
        with:
          package: google-cloud-sdk
          version: "0"
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: iamguarded/test-compat
          with:
            package: google-cloud-sdk
            version: "0"
        - name: Verify symlinks are not broken
          runs: |
            # Test each symlinked binary with harmless flags
            /opt/iamguarded/google-cloud-sdk/bin/gcloud --version
            /opt/iamguarded/google-cloud-sdk/bin/gsutil --version
            /opt/iamguarded/google-cloud-sdk/bin/bq version
            /opt/iamguarded/google-cloud-sdk/bin/docker-credential-gcloud version
            /opt/iamguarded/google-cloud-sdk/bin/git-credential-gcloud.sh version
            # Verify java_dev_appserver.sh exists and is executable
            # Note: We don't run java_dev_appserver.sh because it triggers
            # gcloud component update prompts, which aren't suitable in tests
            stat /opt/iamguarded/google-cloud-sdk/bin/java_dev_appserver.sh
            [ -x /opt/iamguarded/google-cloud-sdk/bin/java_dev_appserver.sh ]

test:
  pipeline:
    - uses: test/tw/ldd-check
    - uses: test/tw/ver-check
      with:
        bins: gcloud
    - uses: test/tw/help-check
      with:
        bins: docker-credential-gcloud gcloud git-credential-gcloud.sh gsutil
    - runs: |
        gcloud components list

update:
  enabled: true
  release-monitor:
    identifier: 374037
