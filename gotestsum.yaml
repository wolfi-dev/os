package:
  name: gotestsum
  version: "1.12.1"
  epoch: 0
  description: go test runner with output optimized for humans
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/gotestyourself/gotestsum
      tag: v${{package.version}}
      expected-commit: 3f7ff0ec4aeb6f95f5d67c998b71f272aa8a8b41

  - uses: go/build
    with:
      ldflags: -X main.version=${{package.version}}
      output: gotestsum
      packages: .

  - uses: strip

update:
  enabled: true
  github:
    identifier: gotestyourself/gotestsum
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - go
  pipeline:
    - name: Verify gotestsum installation
      runs: |
        gotestsum --version
        gotestsum --help
    - name: Test basic functionality with a simple test
      runs: |
        # Create a simple Go test
        mkdir -p simpletest
        cd simpletest

        cat <<EOF > simple_test.go
        package simple

        import "testing"

        func TestPass(t *testing.T) {
          // This test should pass
        }

        func TestFail(t *testing.T) {
          t.Fail()
        }
        EOF

        # Initialize module
        go mod init example.com/simple

        # Run tests and check that gotestsum can execute them
        gotestsum || true  # We expect one test to fail

        # Verify gotestsum detected both tests
        gotestsum --format testname | grep -q "TestPass" && echo "Found TestPass"
        gotestsum --format testname | grep -q "TestFail" && echo "Found TestFail"
    - name: Test different output formats
      runs: |
        cd simpletest

        # Test standard format
        gotestsum --format standard || true

        # Test dots format
        gotestsum --format dots || true

        # Test short format
        gotestsum --format short || true

        # Test testname format
        gotestsum --format testname || true
    - name: Test with test selection flags
      runs: |
        cd simpletest

        # Run only passing test
        gotestsum -- -run TestPass

        # Verify failed test isn't run when filtered
        ! gotestsum -- -run TestPass | grep -q "TestFail" && echo "TestFail correctly filtered out"
    - name: Test with JUnit report
      runs: |
        cd simpletest

        # Generate JUnit report
        gotestsum --junitfile junit.xml || true

        # Verify JUnit report was created and contains test information
        grep -q "TestPass" junit.xml && echo "JUnit file contains TestPass"
        grep -q "TestFail" junit.xml && echo "JUnit file contains TestFail"

        # Test with custom JUnit report name
        gotestsum --junitfile custom-report.xml || true
        test -f custom-report.xml && echo "Custom JUnit report created successfully"
    - name: Test with rerun capabilities
      runs: |
        cd simpletest

        # Test rerun-fails option
        gotestsum --rerun-fails=1 || true

        # Test with package-based rerun
        gotestsum --rerun-fails=1 --rerun-fails-report=rerun.txt || true
        test -f rerun.txt && echo "Rerun report created successfully"
