# Generated from https://git.alpinelinux.org/aports/plain/testing/gperftools/APKBUILD
package:
  name: gperftools
  version: "2.16"
  epoch: 0
  description: Fast, multi-threaded malloc and nifty performance analysis tools
  copyright:
    - license: BSD-3-Clause

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - libtool
      - libunwind-dev
      - linux-headers

pipeline:
  - uses: git-checkout
    with:
      expected-commit: e1014dead2029b341d06027b4f2b5562d799d5b1
      repository: https://github.com/gperftools/gperftools.git
      tag: gperftools-${{package.version}}

  - uses: autoconf/configure

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

subpackages:
  - name: gperftools-doc
    description: gperftools manpages
    pipeline:
      - uses: split/manpages
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/share
          mv ${{targets.destdir}}/usr/share/doc ${{targets.contextdir}}/usr/share
    test:
      pipeline:
        - uses: test/docs

  - name: gperftools-static
    description: gperftools static libraries
    pipeline:
      - uses: split/static

  - name: tcmalloc
    description: tcmalloc
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/usr/lib/libtcmalloc.so.* ${{targets.contextdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: $(basename ${{targets.contextdir}})

  - name: tcmalloc-minimal
    description: tcmalloc minimal
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/usr/lib/libtcmalloc_minimal.so.* ${{targets.contextdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: $(basename ${{targets.contextdir}})

  - name: tcmalloc-debug
    description: tcmalloc debug
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/usr/lib/libtcmalloc_debug.so.* ${{targets.contextdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: $(basename ${{targets.contextdir}})

  - name: tcmalloc-minimal-debug
    description: tcmalloc minimal debug
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/usr/lib/libtcmalloc_minimal_debug.so.* ${{targets.contextdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: $(basename ${{targets.contextdir}})

  - name: tcmalloc-profiler
    description: tcmalloc profiler
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/usr/lib/libtcmalloc_and_profiler.so.* ${{targets.contextdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: $(basename ${{targets.contextdir}})

  - name: gperftools-dev
    description: gperftools dev
    dependencies:
      runtime:
        - gperftools
    pipeline:
      - uses: split/dev
    test:
      pipeline:
        - uses: test/pkgconf

update:
  enabled: true
  github:
    identifier: gperftools/gperftools
    strip-prefix: gperftools-

test:
  environment:
    contents:
      packages:
        - build-base
        - gcc
        - binutils
        - coreutils
        - findutils
        - tcmalloc # Explicit tcmalloc dependency
        - tcmalloc-profiler # For profiling functionality
        - gperftools-dev # For headers and development files
  pipeline:
    - name: "Test basic heap profiler functionality"
      runs: |
        cat > heap_test.cpp << 'EOF'
        #include <cstdlib>
        int main() {
          for(int i = 0; i < 1000; i++) {
            void* ptr = malloc(1024);
            free(ptr);
          }
          return 0;
        }
        EOF
        g++ -o heap_test heap_test.cpp -ltcmalloc
        HEAPPROFILE=/tmp/test ./heap_test
        test -f /tmp/test.0001.heap
    - name: "Test CPU profiler functionality"
      runs: |
        cat > cpu_test.cpp << 'EOF'
        #include <cstdlib>
        void busy_work() {
          for(int i = 0; i < 1000000; i++) { }
        }
        int main() {
          busy_work();
          return 0;
        }
        EOF
        g++ -o cpu_test cpu_test.cpp -ltcmalloc_and_profiler
        CPUPROFILE=/tmp/cpu.prof ./cpu_test
        test -f /tmp/cpu.prof
    - name: "Test linking against tcmalloc"
      runs: |
        cat > malloc_test.cpp << 'EOF'
        #include <gperftools/tcmalloc.h>
        int main() {
          void* ptr = tc_malloc(1024);
          tc_free(ptr);
          return 0;
        }
        EOF
        g++ -o malloc_test malloc_test.cpp -ltcmalloc
        ./malloc_test
    - name: "Test minimal TCMalloc compilation"
      runs: |
        g++ -o minimal_test malloc_test.cpp -ltcmalloc_minimal
        ./minimal_test
