package:
  name: gradle-8
  version: "8.12.1"
  # For version upgrades check whether patches are still needed.
  # Upstream changes are being tracked in https://github.com/gradle/gradle/issues/25945
  epoch: 0
  description: A Java project management and project comprehension tool.
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - gradle=${{ package.full-version }}

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      # note: the comment below is not the case while we evaluate the right way to build gradle we have swapped from
      # using the boostrap gradle to gradlewrapper.
      #
      # The first time this is built, it depends on gradle-stage0.yaml being built first,
      # using pre-built gradle binaries, which `provides` a gradle package at an earlier version.
      # Afterwards it depends on previous versions of this package built from source.
      - openjdk-17
      - patch
      - tini
      - zip

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/gradle/gradle
      tag: v${{package.version}}
      expected-commit: 0b1ee1ff81d1f4a26574ff4a362ac9180852b140

  - uses: patch
    with:
      patches: upgrade-deps.patch

  - runs: |
      export JAVA_HOME=/usr/lib/jvm/java-17-openjdk

      # Per https://docs.gradle.org/current/userguide/gradle_daemon.html#sec:daemon_jvm_criteria,
      # the Daemon JVM criteria in gradle/gradle-daemon-jvm.properties take precedence over
      # JAVA_HOME.  We want to use the only available JDK, in JAVA_HOME, so we remove the file.
      rm gradle/gradle-daemon-jvm.properties

      # Do not use the gradle wrapper, ensure we're using the bootstrap version.
      ./gradlew :distributions-full:binDistributionZip

      unzip subprojects/distributions-full/build/distributions/gradle-*-bin.zip
      cd gradle-*
      mkdir -p ${{targets.destdir}}/usr/share/java/gradle
      mkdir -p ${{targets.destdir}}/usr/share/java/gradle/bin
      mkdir -p ${{targets.destdir}}/usr/share/java/gradle/lib

      mv lib/* ${{targets.destdir}}/usr/share/java/gradle/lib
      mv bin/* ${{targets.destdir}}/usr/share/java/gradle/bin

      mkdir -p ${{targets.destdir}}/usr/bin
      ln -sf /usr/share/java/gradle/bin/gradle ${{targets.destdir}}/usr/bin/gradle

update:
  enabled: true
  ignore-regex-patterns:
    - -M*
    - -RC*
  github:
    identifier: gradle/gradle
    strip-prefix: v
    use-tag: true
    tag-filter: "v8."

test:
  environment:
    contents:
      packages:
        - openjdk-17-default-jvm
  pipeline:
    - name: Verify gradle installation
      runs: |
        gradle --version || exit 1
    - name: Basic Gradle project build
      runs: |
        cat << 'EOF' > settings.gradle
        rootProject.name = 'demo'
        EOF

        cat << 'EOF' > build.gradle
        println "gradle works!"
        EOF

        gradle build --no-daemon | grep -q 'gradle works!'
        gradle build --no-daemon | grep -q 'gradle works!'
