package:
  name: grep
  version: "3.12"
  epoch: 0
  description: "GNU grep implementation"
  copyright:
    - license: GPL-3.0-or-later

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - pcre2-dev

pipeline:
  - uses: fetch
    with:
      uri: https://ftp.gnu.org/gnu/grep/grep-${{package.version}}.tar.gz
      expected-sha256: badda546dfc4b9d97e992e2c35f3b5c7f20522ffcbe2f01ba1e9cdcbe7644cdc

  - name: Configure
    runs: |
      ./configure \
         --host=${{host.triplet.gnu}} \
         --target=${{host.triplet.gnu}} \
         --prefix=/usr \
         --datadir=/usr/share

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

update:
  enabled: true
  release-monitor:
    identifier: 1251

test:
  pipeline:
    - name: Version and help check
      runs: |
        grep --version
        egrep --version
        egrep --help
        fgrep --version
        fgrep --help
        grep --help
    - name: Simple pattern matching
      runs: |
        # Create test file
        echo "apple banana cherry" > test.txt
        echo "grape orange lemon" >> test.txt

        # Test basic pattern matching and verify output
        OUTPUT=$(grep "apple" test.txt)
        [ "$OUTPUT" = "apple banana cherry" ]

        # Test -v (invert match) option and verify output
        OUTPUT=$(grep -v "apple" test.txt)
        [ "$OUTPUT" = "grape orange lemon" ]

        # Test -c (count) option
        OUTPUT=$(grep -c "apple" test.txt)
        [ "$OUTPUT" = "1" ]
    - name: Simple numeric test
      runs: |
        # Create numeric test file
        echo "123 456 789" > numbers.txt
        echo "abc def ghi" >> numbers.txt

        # Test numeric pattern matching and verify output
        OUTPUT=$(grep "[0-9]" numbers.txt)
        [ "$OUTPUT" = "123 456 789" ]

        # Test -n (line number) option
        OUTPUT=$(grep -n "[0-9]" numbers.txt)
        [ "$OUTPUT" = "1:123 456 789" ]

        # Test -l (list files) option
        OUTPUT=$(grep -l "[0-9]" numbers.txt)
        [ "$OUTPUT" = "numbers.txt" ]
    - name: Complex patterns and options test
      runs: |
        # Create a more complex test file
        cat > complex.txt << 'EOF'
        Line 1 with text and 42 numbers
        Line 2 with different TEXT
        Line 3 contains email@example.com
        Line 4 with more TEXT here
        EOF

        # Test -i (case insensitive) with result validation
        OUTPUT=$(grep -i "text" complex.txt)
        LINE_COUNT=$(echo "$OUTPUT" | wc -l)
        [ "$LINE_COUNT" -eq 3 ]

        # Test -w (whole word match) with result validation
        OUTPUT=$(grep -w "TEXT" complex.txt)
        LINE_COUNT=$(echo "$OUTPUT" | wc -l)
        [ "$LINE_COUNT" -eq 2 ]

        # Test regex pattern with result validation
        OUTPUT=$(grep "[0-9]\+" complex.txt)
        [ "$(echo "$OUTPUT" | grep "42")" != "" ]

        # Test -E (extended regex) with result validation
        OUTPUT=$(grep -E "email@.+\.com" complex.txt)
        [ "$OUTPUT" = "Line 3 contains email@example.com" ]
    - name: Binary reliability checks
      uses: test/tw/ldd-check
