package:
  name: gtk-4
  version: "4.17.4"
  epoch: 0
  description: The GTK+ Toolkit (v4)
  copyright:
    - license: LGPL-2.1-or-later
  scriptlets:
    post-install: |
      #!/bin/sh
      glib-compile-schemas /usr/share/glib-2.0/schemas

vars:
  gschemas: "usr/share/glib-2.0/schemas"

environment:
  contents:
    packages:
      - at-spi2-core-dev
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - cairo-dev
      - cmake
      - cups-dev
      - dbus-dev
      - expat-dev
      - fontconfig-dev
      - fribidi-dev
      - gdk-pixbuf-dev
      - gettext-dev
      - gi-docgen
      - git
      - glib-dev
      - glib-gir
      - gobject-introspection-dev
      - graphene-dev
      - gst-plugins-bad-dev
      - gst-plugins-base-dev
      - gstreamer-dev
      - gtk-doc
      - harfbuzz-dev
      - hicolor-icon-theme
      - iso-codes-dev
      - libatk-bridge-2.0
      - libdrm-dev
      - libepoxy-dev
      - libice-dev
      - libtool
      - libx11-dev
      - libxcomposite-dev
      - libxcursor-dev
      - libxdamage-dev
      - libxext-dev
      - libxfixes-dev
      - libxft-dev
      - libxi-dev
      - libxinerama-dev
      - libxkbcommon
      - libxkbcommon-dev
      - libxrandr-dev
      - libxtst-dev
      - mesa-dev
      - meson
      - ninja
      - orc-compiler
      - orc-dev
      - pango-dev
      - py3-docutils
      - py3-gi-docgen
      - py3-packaging
      - sassc
      - shaderc
      - shared-mime-info
      - smartypants
      - spirv-headers
      # TODO: right now shaderc also inclused spirv-tools, causin a conflict need to fix that,
      # so we can use our own spirv-tools along with shaderc
      # - spirv-tools
      # - spirv-tools-dev
      - tiff-dev
      - vulkan-headers
      - vulkan-loader
      - wayland-dev
      - wayland-protocols
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://gitlab.gnome.org/GNOME/gtk.git
      tag: ${{package.version}}
      expected-commit: 5af79d971b0e34edeba7cd4e48ef35a7dca79a4d

  - uses: meson/configure
    with:
      opts: |
        -Ddocumentation=true \
        -Dintrospection=enabled \
        -Dbroadway-backend=true \
        -Dman-pages=true \
        -Dbuild-tests=false \
        -Dbuild-testsuite=false \
        -Dbuild-examples=false \
        -Dbuild-demos=false \
        -Dwin32-backend=false \
        -Dmacos-backend=false \

  - uses: meson/compile

  - uses: meson/install

  - runs: |
      # We've had trouble with this build accidentally including pango. This should be fixed,
      # but throw in a test here in case.
      if [ -f ${{targets.destdir}}/usr/lib/libpango-1.0.so ]; then
        echo "ERROR: libpango-1.0.so found in /usr/lib. This is a bug in the build system."
        exit 1
      fi

  - uses: strip

subpackages:
  - name: ${{package.name}}-dev
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - shared-mime-info
        - at-spi2-core-dev
        - gdk-pixbuf-dev
        - glib-dev
        - libepoxy-dev
        - libxext-dev
        - libxi-dev
        - libxinerama-dev
        - libxkbcommon-dev
        - wayland-dev
        - shaderc
    description: ${{package.name}} dev

  - name: ${{package.name}}-doc
    pipeline:
      - uses: split/manpages
    description: ${{package.name}} manpages
    test:
      pipeline:
        - uses: test/docs

  - name: ${{package.name}}-lang
    pipeline:
      - uses: split/locales
    description: ${{package.name}} locales

  - name: ${{package.name}}-compiled-gschemas
    description: Compiled gschemas for GTK 4
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          glib-compile-schemas "${{targets.destdir}}/${{vars.gschemas}}"
          install -Dm755 "${{targets.destdir}}/${{vars.gschemas}}/gschemas.compiled" "${{targets.contextdir}}/${{vars.gschemas}}/gschemas.compiled"
          rm "${{targets.destdir}}/${{vars.gschemas}}/gschemas.compiled"

update:
  enabled: true
  ignore-regex-patterns:
    - (?i)[a-z] # Ignore tags that include any case letters
  git:
    tag-filter-prefix: "4."

test:
  pipeline:
    # AUTOGENERATED
    - runs: |
        gtk4-broadwayd --help
        gtk4-encode-symbolic-svg --help
        gtk4-launch --version
        gtk4-update-icon-cache --help
        gtk4-launch --help
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}
