package:
  name: haproxy-3.2
  version: "3.2.2"
  epoch: 0
  description: "A TCP/HTTP reverse proxy for high availability environments"
  copyright:
    - license: GPL-2.0-or-later
  dependencies:
    runtime:
      - libgcc
      - merged-usrsbin
      - wolfi-baselayout
    provides:
      - haproxy=${{package.full-version}}

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - libcap-utils
      - linux-headers
      - lua5.3-dev
      - openssl-dev
      - pcre2-dev

pipeline:
  # Using this git to get the correct version using GitMonitor
  - uses: git-checkout
    with:
      repository: https://git.haproxy.org/git/haproxy-${{vars.major-minor-version}}.git
      tag: v${{package.version}}
      expected-commit: a55102f095b9fa9cc02e29207740d9ca7ac72af0
      destination: /home/build/nothing

  - runs: rm -rf /home/build/nothing # we do not use this source to build

  # We have to use fetch, as there are issues cloning from: 'https://git.haproxy.org/git/haproxy-3.0.git'.
  # Namely: 'failed to validate pipeline git-checkout: failed to list refs for https://git.haproxy.org/git/haproxy-3.0.git/: pkt-line 1: invalid hash text: encoding/hex: invalid byte'
  - uses: fetch
    with:
      uri: https://www.haproxy.org/download/${{vars.major-minor-version}}/src/haproxy-${{package.version}}.tar.gz
      expected-sha256: be64ed565c320e670bb909c5834f90303c3ec0c97af5befa45994961aaa6c6ec

  - uses: autoconf/make
    with:
      opts: |
        TARGET=linux-glibc \
        USE_THREAD=1 \
        USE_PCRE2=1 \
        USE_PCRE2_JIT=1 \
        USE_OPENSSL=1 \
        USE_LUA=1 \
        USE_NS=1 \
        USE_PROMEX=1 \
        LUA_LIB=/usr/lib/lua5.3 \
        LUA_INC=/usr/include/lua5.3 \
        USE_GETADDRINFO=1 \
        SBINDIR=/usr/bin

  - runs: |
      make install DESTDIR="${{targets.destdir}}" PREFIX=/usr DOCDIR=/usr/share/doc/haproxy
      install -d "${{targets.destdir}}"/var/lib/haproxy
      mkdir -p "${{targets.destdir}}"/usr/bin
      mv "${{targets.destdir}}"/usr/sbin/* "${{targets.destdir}}"/usr/bin
      rmdir "${{targets.destdir}}"/usr/sbin

  - uses: strip

  # This MUST run after strip, which strips capabilities too!
  - runs: setcap cap_net_bind_service=+eip "${{targets.destdir}}/usr/bin/haproxy"

subpackages:
  - name: "${{package.name}}-doc"
    description: "haproxy documentation"
    pipeline:
      - uses: split/manpages
    dependencies:
      provides:
        - haproxy-doc=${{package.full-version}}
      runtime:
        - merged-usrsbin
        - wolfi-baselayout
    test:
      pipeline:
        - uses: test/docs

  - name: ${{package.name}}-oci-entrypoint
    description: Entrypoint for using HAProxy in OCI containers
    dependencies:
      runtime:
        - busybox
        - merged-usrsbin
        - posix-libc-utils # `getent` is required for certain helm chart startups
        - wolfi-baselayout
      provides:
        - haproxy-oci-entrypoint=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/local/bin/
          cp docker-entrypoint.sh ${{targets.subpkgdir}}/usr/local/bin/
          chmod +x ${{targets.subpkgdir}}/usr/local/bin/docker-entrypoint.sh

  - name: ${{package.name}}-iamguarded-compat
    dependencies:
      provides:
        - haproxy-iamguarded-compat=${{package.full-version}}
      runtime:
        - ${{package.name}}
    pipeline:
      - uses: iamguarded/build-compat
        with:
          package: haproxy
          version: ${{vars.major-version}}
      - runs: |
          mkdir -p /iamguarded/haproxy/conf

          mkdir -p /opt/iamguarded/haproxy/bin
          mkdir -p /opt/iamguarded/haproxy-dataplaneapi/bin
          mkdir -p /opt/iamguarded/lua/bin
          chmod g+rwX /opt/iamguarded

          ln -s /usr/bin/haproxy /opt/iamguarded/haproxy/bin/haproxy
          ln -s /usr/bin/dataplaneapi /opt/iamguarded/haproxy-dataplaneapi/bin/dataplaneapi
      - uses: iamguarded/finalize-compat
        with:
          package: haproxy
          version: ${{vars.major-version}}
    test:
      environment:
        contents:
          packages:
            - dataplaneapi
      pipeline:
        - uses: iamguarded/test-compat
          with:
            package: haproxy
            version: ${{vars.major-version}}
        - runs: |
            /opt/iamguarded/haproxy/bin/haproxy -v

update:
  enabled: true
  git:
    strip-prefix: v
    tag-filter-prefix: v3.2

test:
  environment:
    contents:
      packages:
        - libcap-utils
  pipeline:
    - runs: |
        haproxy -v
    - name: Test file capabilities
      runs: |
        getcap /usr/bin/haproxy | cut -d ' ' -f2 | grep -q -E '^cap_net_bind_service=eip$'
