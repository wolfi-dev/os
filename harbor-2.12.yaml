package:
  name: harbor-2.12
  version: "2.12.2"
  epoch: 3
  description: An open source trusted cloud native registry project that stores, signs, and scans content
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - harbor=${{package.full-version}}

environment:
  contents:
    packages:
      - nginx-config
      - nodejs
      - npm
      - py3-setuptools
      - python3
  environment:
    CGO_ENABLED: "0"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/goharbor/harbor
      tag: v${{package.version}}
      expected-commit: 73072d0d88a94468943e39c4eb687018b2587373

  - runs: |
      # Harbor swagger generation is broken with the latest swagger use the version below for now
      # Remove this once harbor starts working with the latest version
      go install github.com/go-swagger/go-swagger/cmd/swagger@v0.30.5
      mv $(go env GOPATH)/bin/swagger /usr/bin/swagger

  - runs: |
      mkdir -p ${{targets.destdir}}/harbor
      # Copy views, migrations, and icons
      cp -rf ./src/core/views ${{targets.destdir}}/harbor/views
      cp -rf ./make/migrations ${{targets.destdir}}/harbor/migrations
      cp -rf ./icons ${{targets.destdir}}/harbor/icons

      # Generate API
      swagger generate server --template-dir=tools/swagger/templates --exclude-main --additional-initialism=CVE --additional-initialism=GC --additional-initialism=OIDC -f api/v2.0/swagger.yaml -A harbor --target src/server/v2.0

  - uses: go/build
    with:
      packages: ./core
      output: harbor-core
      modroot: ./src
      deps: github.com/go-openapi/errors github.com/go-openapi/runtime

  - runs: ln -sf /usr/bin/harbor-core ${{targets.destdir}}/harbor/harbor_core

  - uses: strip

subpackages:
  - name: ${{package.name}}-jobservice
    description: harbor jobservice
    dependencies:
      provides:
        - harbor-jobservice=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./jobservice
          output: harbor-jobservice
          modroot: ./src
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/harbor
          ln -sf /usr/bin/harbor-jobservice ${{targets.subpkgdir}}/harbor/harbor_jobservice
    test:
      pipeline:
        - runs: |
            # jobservice fails outside environment, verify adaptor for harbor registered
            /harbor/harbor_jobservice 2>/dev/null | grep "harbor registered"

  - name: ${{package.name}}-portal
    description: harbor portal
    dependencies:
      provides:
        - harbor-portal=${{package.full-version}}
      runtime:
        - ${{package.name}}-portal-nginx-config
        - nginx
    pipeline:
      - runs: |
          # Copy over swagger configuration
          cp api/v2.0/swagger.yaml src/portal/swagger.yaml
          cd src/portal

          # Build portal
          npm install --unsafe-perm
          npm run generate-build-timestamp
          node --max_old_space_size=2048 'node_modules/@angular/cli/bin/ng' build --configuration production

          # Generate swagger.json
          npm install js-yaml@4.1.0
          node -e "const yaml = require('js-yaml'); const fs = require('fs'); const swagger = yaml.load(fs.readFileSync('swagger.yaml', 'utf8')); fs.writeFileSync('swagger.json', JSON.stringify(swagger));"

          # Copy license
          cp ../../LICENSE dist

          # Build swagger UI
          cd app-swagger-ui
          npm install --unsafe-perm
          npm run build
          cd ../

          # Install
          mkdir -p ${{targets.subpkgdir}}/usr/share/nginx/html
          cp -rf dist/* ${{targets.subpkgdir}}/usr/share/nginx/html
          cp swagger.json ${{targets.subpkgdir}}/usr/share/nginx/html
          cp -rf app-swagger-ui/dist/* ${{targets.subpkgdir}}/usr/share/nginx/html
    test:
      environment:
        contents:
          packages:
            - curl
            - shadow
      pipeline:
        - runs: |
            useradd nginx
            mkdir -p /var/lib/nginx/logs
            mkdir -p /var/lib/nginx/tmp
            # The endpoint created by nginx is forbidden in CI
            nginx -g "daemon off;" & sleep 5; kill $!

  - name: ${{package.name}}-portal-nginx-config
    description: nginx config for harbor portal
    dependencies:
      provides:
        - harbor-portal-nginx-config=${{package.full-version}}
        - nginx-config=0.${{package.full-version}}
    pipeline:
      - runs: |
          # Copy nginx config
          mkdir -p ${{targets.subpkgdir}}/etc/nginx
          cp -rf /etc/nginx/* ${{targets.subpkgdir}}/etc/nginx/
          cp src/portal/docker-build/nginx.conf.example ${{targets.subpkgdir}}/etc/nginx/nginx.conf
          # Default error logs to stderr
          sed -i 's/#error_log  logs\/error.log;$/error_log  stderr  notice;/' ${{targets.subpkgdir}}/etc/nginx/nginx.conf
          # And access logs to stdout
          sed -i 's/#access_log.*;$/access_log  \/dev\/stdout;/' ${{targets.subpkgdir}}/etc/nginx/nginx.conf

  - name: ${{package.name}}-registryctl
    description: harbor registryctl
    dependencies:
      provides:
        - harbor-registryctl=${{package.full-version}}
      runtime:
        - harbor-registry
    pipeline:
      - uses: go/build
        with:
          packages: ./registryctl
          output: harbor-registryctl
          modroot: ./src
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/etc/registryctl
          mkdir -p ${{targets.subpkgdir}}/harbor
          ln -sf /usr/bin/harbor-registryctl ${{targets.subpkgdir}}/harbor/harbor_registryctl
    test:
      pipeline:
        - runs: |
            harbor-registryctl --help

test:
  pipeline:
    - runs: |
        harbor-core --help

update:
  enabled: true
  ignore-regex-patterns:
    - '-rc'
    - '-beta'
  github:
    identifier: goharbor/harbor
    strip-prefix: v
    tag-filter-prefix: v2.12.
    use-tag: true
