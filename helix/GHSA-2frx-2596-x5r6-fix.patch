From 5a671e65fd6e64d23d27163a537a7e2e273b45e2 Mon Sep 17 00:00:00 2001
From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
Date: Sun, 6 Apr 2025 12:02:20 -0500
Subject: [PATCH] build(deps): bump gix from 0.70.0 to 0.71.0 (#13269)

* build(deps): bump gix from 0.70.0 to 0.71.0

Bumps [gix](https://github.com/GitoxideLabs/gitoxide) from 0.70.0 to 0.71.0.
- [Release notes](https://github.com/GitoxideLabs/gitoxide/releases)
- [Changelog](https://github.com/GitoxideLabs/gitoxide/blob/main/CHANGELOG.md)
- [Commits](https://github.com/GitoxideLabs/gitoxide/compare/gix-v0.70.0...gix-v0.71.0)

---
updated-dependencies:
- dependency-name: gix
  dependency-version: 0.71.0
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>

* minor: Migrate from Repository::work_dir to Repository::workdir

The former was deprecated in favor of the latter

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Michael Davis <mcarsondavis@gmail.com>
---
 helix-vcs/Cargo.toml |   2 +-
 helix-vcs/src/git.rs |   6 +-
 3 files changed, 204 insertions(+), 128 deletions(-)

From 09b2f6ab5f09b5ad2b8d976c78e9636f62ff6de4 Mon Sep 17 00:00:00 2001
From: "dependabot[bot]" <49699333+dependabot[bot]@users.noreply.github.com>
Date: Tue, 21 Jan 2025 08:59:05 -0600
Subject: [PATCH] build(deps): bump the rust-dependencies group with 5 updates
 (#12614)

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Michael Davis <mcarsondavis@gmail.com>
---
 Cargo.toml                 |   2 +-
 helix-lsp-types/Cargo.toml |   2 +-
 helix-vcs/Cargo.toml       |   2 +-
 helix-vcs/src/git.rs       |   2 +-
 5 files changed, 108 insertions(+), 105 deletions(-)


diff --git a/Cargo.toml b/Cargo.toml
index f77b4f34970e..b117fe80d3da 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -42,7 +42,7 @@ nucleo = "0.5.0"
 slotmap = "1.0.7"
 thiserror = "2.0"
 tempfile = "3.15.0"
-bitflags = "2.7"
+bitflags = "2.8"
 
 [workspace.package]
 version = "25.1.1"
diff --git a/helix-lsp-types/Cargo.toml b/helix-lsp-types/Cargo.toml
index 9f9900fe306a..eb4ee5dc5107 100644
--- a/helix-lsp-types/Cargo.toml
+++ b/helix-lsp-types/Cargo.toml
@@ -23,7 +23,7 @@ license = "MIT"
 [dependencies]
 bitflags.workspace = true
 serde = { version = "1.0.217", features = ["derive"] }
-serde_json = "1.0.135"
+serde_json = "1.0.137"
 serde_repr = "0.1"
 url = {version = "2.5.4", features = ["serde"]}
 
diff --git a/helix-vcs/src/git.rs b/helix-vcs/src/git.rs
index 0a156ad8737b..b8ddd79fa921 100644
--- a/helix-vcs/src/git.rs
+++ b/helix-vcs/src/git.rs
@@ -11,7 +11,7 @@ use gix::dir::entry::Status;
 use gix::objs::tree::EntryKind;
 use gix::sec::trust::DefaultForLevel;
 use gix::status::{
-    index_worktree::iter::Item,
+    index_worktree::Item,
     plumbing::index_as_worktree::{Change, EntryStatus},
     UntrackedFiles,
 };

diff --git a/helix-vcs/Cargo.toml b/helix-vcs/Cargo.toml
index c0812242125a..aaac835178a5 100644
--- a/helix-vcs/Cargo.toml
+++ b/helix-vcs/Cargo.toml
@@ -19,7 +19,7 @@ tokio = { version = "1", features = ["rt", "rt-multi-thread", "time", "sync", "p
 parking_lot.workspace = true
 arc-swap = { version = "1.7.1" }
 
-gix = { version = "0.69.1", features = ["attributes", "status"], default-features = false, optional = true }
+gix = { version = "0.71.0", features = ["attributes", "status"], default-features = false, optional = true }
 imara-diff = "0.1.7"
 anyhow = "1"
 
diff --git a/helix-vcs/src/git.rs b/helix-vcs/src/git.rs
index b8ddd79fa921..1be71afacc6f 100644
--- a/helix-vcs/src/git.rs
+++ b/helix-vcs/src/git.rs
@@ -45,7 +45,7 @@ pub fn get_diff_base(file: &Path) -> Result<Vec<u8>> {
     let data = file_object.detach().data;
     // Get the actual data that git would make out of the git object.
     // This will apply the user's git config or attributes like crlf conversions.
-    if let Some(work_dir) = repo.work_dir() {
+    if let Some(work_dir) = repo.workdir() {
         let rela_path = file.strip_prefix(work_dir)?;
         let rela_path = gix::path::try_into_bstr(rela_path)?;
         let (mut pipeline, _) = repo.filter_pipeline(None)?;
@@ -128,7 +128,7 @@ fn open_repo(path: &Path) -> Result<ThreadSafeRepository> {
 /// Emulates the result of running `git status` from the command line.
 fn status(repo: &Repository, f: impl Fn(Result<FileChange>) -> bool) -> Result<()> {
     let work_dir = repo
-        .work_dir()
+        .workdir()
         .ok_or_else(|| anyhow::anyhow!("working tree not found"))?
         .to_path_buf();
 
@@ -195,7 +195,7 @@ fn status(repo: &Repository, f: impl Fn(Result<FileChange>) -> bool) -> Result<(
 
 /// Finds the object that contains the contents of a file at a specific commit.
 fn find_file_in_commit(repo: &Repository, commit: &Commit, file: &Path) -> Result<ObjectId> {
-    let repo_dir = repo.work_dir().context("repo has no worktree")?;
+    let repo_dir = repo.workdir().context("repo has no worktree")?;
     let rel_path = file.strip_prefix(repo_dir)?;
     let tree = commit.tree()?;
     let tree_entry = tree