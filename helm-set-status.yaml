package:
  name: helm-set-status
  version: 0.3.0
  epoch: 3 # GHSA-f9f8-9pmf-xv68
  description: Helm plugin to set release status
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/k3s-io/helm-set-status.git
      tag: v${{package.version}}
      expected-commit: 260bbd88a52aba1a76d44ed2ae66dccf5615dbf3

  - uses: go/bump
    with:
      deps: |-
        github.com/containerd/containerd@v1.7.27
        golang.org/x/net@v0.38.0
        golang.org/x/oauth2@v0.27.0
        helm.sh/helm/v3@v3.18.5

  # Dropping helm plugins in /usr/libexec since they are binaries and
  # configuration intended to be run by the helm command.
  # See https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch04s07.html
  # Installers of this package will have to set this environment var
  # HELM_PLUGINS=/usr/libexec/helm-plugins
  - uses: go/build
    with:
      packages: ./cmd/helm-set-status
      output: helm-set-status
      tags: static_build,osusergo
      ldflags: |
        -X main.version=v${{package.version}}

  - runs: |
      INSTALL_DIR="${{targets.destdir}}/usr/libexec/helm-plugins/${{package.name}}"
      mkdir -p "${INSTALL_DIR}"
      ln -sf /usr/bin/helm-set-status "${INSTALL_DIR}/helm-set-status"
      install -Dm644 plugin.yaml "${INSTALL_DIR}/plugin.yaml"

update:
  enabled: true
  github:
    identifier: k3s-io/helm-set-status
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - helm
    environment:
      KUBERNETES_SERVICE_HOST: "127.0.0.1"
      KUBERNETES_SERVICE_PORT: 32764
      HELM_PLUGINS: "/usr/libexec/helm-plugins"
  pipeline:
    - runs: |
        helm plugin list 2>&1 | grep -i 'set-status'
    - uses: test/kwok/cluster
    - name: "Install test chart and change status"
      runs: |
        helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/
        helm repo update
        helm install test-dashboard kubernetes-dashboard/kubernetes-dashboard --wait --timeout 2m
        helm status test-dashboard | grep "STATUS: deployed"
        helm set-status test-dashboard failed
        helm status test-dashboard | grep "STATUS: failed"
