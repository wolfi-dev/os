package:
  name: jaeger
  version: "1.66.0"
  epoch: 0
  description: Jaeger, a Distributed Tracing Platform

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/jaegertracing/jaeger
      tag: v${{package.version}}
      expected-commit: bc2a64341e2c36fffc825fa208de6a8fa5ff69c3
      recurse-submodules: true

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - nodejs-20
      - npm
      - yarn

data:
  - name: jaeger-components
    items:
      agent: "."
      all-in-one: "."
      anonymizer: "."
      collector: "."
      es-index-cleaner: "."
      es-rollover: "."
      esmapping-generator: "."
      ingester: "."
      query: "."
      remote-storage: "."
      tracegen: "."

subpackages:
  - range: jaeger-components
    name: "${{package.name}}-${{range.key}}"
    pipeline:
      - runs: |
          ## Only run this step if building for all-in-one package
          ## This builds the ui component of jaeger with yarn
          if [[ "${{range.key}}" = "all-in-one" ]]; then
            mkdir -p jaeger-ui/packages/jaeger-ui/build
            rm -rf cmd/query/app/ui/actual/*
            yarn install --cwd jaeger-ui
            cd jaeger-ui/packages/jaeger-ui/build
            npm install
            yarn build
          fi
      - runs: |
          ## Only run this step if building for all-in-one package
          ## This copies the build artifact into a go package
          if [[ "${{range.key}}" = "all-in-one" ]]; then
            cp -r jaeger-ui/packages/jaeger-ui/build/* cmd/query/app/ui/actual
            find cmd/query/app/ui/actual -type f | grep -v .gitignore | xargs gzip --no-name
            touch -t $(date -r jaeger-ui/packages/jaeger-ui/build/index.html '+%Y%m%d%H%M.%S') cmd/query/app/ui/actual/index.html.gz
          fi
      - runs: |
          if [[ "${{range.key}}" = "all-in-one" ]]; then
            mkdir -p "${{targets.contextdir}}/etc/jaeger"
            install -m644 "./sampling_strategies.json" "${{targets.contextdir}}"/etc/jaeger/sampling_strategies.json
          fi
      - uses: go/build
        with:
          packages: ./cmd/${{range.key}}
          ldflags: -X github.com/jaegertracing/jaeger/pkg/version.latestVersion=v${{package.version}}
          output: ${{range.key}}
    test:
      pipeline:
        - runs: |
            apk add ${{package.name}}-${{range.key}}
            ${{range.key}} --help
        - name: version check
          runs: |
            if [[ "${{range.key}}" != "es-index-cleaner" && "${{range.key}}" != "es-rollover" ]]; then
              ${{range.key}} version 2>&1| grep ${{package.version}}
            fi

  - range: jaeger-components
    name: "${{package.name}}-${{range.key}}-compat"
    description: "Compatibility package to place binaries in the location expected by upstream helm charts for all Jaeger components"
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}/go/bin"
          ln -sf /usr/bin/${{range.key}} ${{targets.contextdir}}/go/bin/${{range.key}}-linux

update:
  enabled: true
  github:
    identifier: jaegertracing/jaeger
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - ${{package.name}}-agent
        - ${{package.name}}-all-in-one
        - ${{package.name}}-anonymizer
        - ${{package.name}}-collector
        - ${{package.name}}-es-index-cleaner
        - ${{package.name}}-es-rollover
        - ${{package.name}}-esmapping-generator
        - ${{package.name}}-ingester
        - ${{package.name}}-query
        - ${{package.name}}-remote-storage
        - ${{package.name}}-tracegen
        - jq
  pipeline:
    - name: "Check all in one status"
      uses: test/daemon-check-output
      with:
        start: "/usr/bin/all-in-one"
        timeout: 60
        expected_output: |
          Starting HTTP server
    - name: "Check connector status"
      uses: test/daemon-check-output
      with:
        start: "/usr/bin/collector"
        timeout: 60
        expected_output: |
          Admin server started
    - name: "Check query status"
      uses: test/daemon-check-output
      with:
        start: "/usr/bin/query"
        timeout: 60
        expected_output: |
          Admin server started
    - name: "Check ingester status"
      uses: test/daemon-check-output
      with:
        start: "/usr/bin/query"
        timeout: 60
        expected_output: |
          Admin server started
