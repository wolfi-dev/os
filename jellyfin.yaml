package:
  name: jellyfin
  version: "10.10.6"
  epoch: 0
  description: The Free Software Media System
  copyright:
    - license: GPL-2.0-only
  dependencies:
    runtime:
      - aspnet-8-runtime
      - dotnet-8
      - ffmpeg
      - fontconfig
      - mesa
      - sqlite

environment:
  contents:
    packages:
      - aspnet-8-runtime
      - busybox
      - dotnet-8-sdk
      - ffmpeg

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/jellyfin/jellyfin
      tag: v${{package.version}}
      expected-commit: a5b771861f532f3519904636a16952e7e9ec8df2

  - uses: patch
    with:
      patches: GHSA-qrmm-w75w-3wpx.patch

  - runs: |
      # Set runtime arch
      if [[ "${{build.arch}}" == "aarch64" ]]; then
        runtime_arch="arm64"
      elif [[ "${{build.arch}}" == "x86_64" ]]; then
        runtime_arch="x64"
      fi

      dotnet publish \
        --configuration Release Jellyfin.Server \
        --no-self-contained \
        --output publish \
        --runtime linux-$runtime_arch \
        -p:DebugSymbols=false \
        -p:DebugType=none

      mkdir -p "${{targets.destdir}}"/usr/lib
      cp -dr publish "${{targets.destdir}}"/usr/lib/jellyfin

      mkdir -p "${{targets.destdir}}"/usr/bin
      ln -s /usr/lib/jellyfin/jellyfin "${{targets.destdir}}"/usr/bin/jellyfin

  - uses: strip

update:
  enabled: true
  ignore-regex-patterns:
    - '.*alpha.*'
    - '.*beta.*'
    - '.*rc.*'
  github:
    identifier: jellyfin/jellyfin
    use-tag: true
    strip-prefix: v

test:
  pipeline:
    - name: "Start Jellyfin server"
      runs: |
        jellyfin --nowebclient > /tmp/jellyfin.log 2>&1 &
        JELLYFIN_PID=$!

        # Wait a few seconds to let Jellyfin attempt to start
        sleep 10

        # Check if Jellyfin process is still running
        if ! ps | grep -q "$JELLYFIN_PID"; then
          echo "Test failed: Jellyfin failed to start."
          echo "----- Jellyfin Debug Logs -----"
          cat /tmp/jellyfin.log
          exit 1
        else
          echo "Test passed: Jellyfin started successfully."
        fi
    - name: "Verify Jellyfin HTTP service on port 8096"
      runs: |
        echo "Checking if Jellyfin is listening on port 8096..."
        for i in {1..5}; do
          if netstat -tuln | grep -q ":8096"; then
            echo "Port 8096 is open for Jellyfin."
            exit 0
          else
            echo "Port 8096 not yet open. Retrying in 5 seconds..."
            sleep 5
          fi
        done

        # Final check after retries
        if ! netstat -tuln | grep -q ":8096"; then
          echo "Test failed: Jellyfin is not listening on port 8096."
          echo "----- Jellyfin Debug Logs -----"
          cat /tmp/jellyfin.log
          kill $JELLYFIN_PID || true
          exit 1
        fi
    - uses: test/tw/ldd-check
