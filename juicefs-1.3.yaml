package:
  name: juicefs-1.3
  version: "1.3.0"
  epoch: 4
  description: JuiceFS is a distributed POSIX file system built on top of Redis and S3.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - fuse3
    provides:
      - juicefs=${{package.full-version}}

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/juicedata/juicefs
      tag: v${{package.version}}
      expected-commit: 30190ca1094d26e85f19a979ca51b0ea19af1eaa

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/net@v0.38.0
        github.com/golang/glog@v1.2.4
        github.com/tidwall/gjson@v1.9.3
        golang.org/x/oauth2@v0.27.0
        github.com/coredns/coredns@v1.12.2
        github.com/go-jose/go-jose/v4@v4.0.5
      replaces: google.golang.org/grpc/stats/opentelemetry=google.golang.org/grpc@v1.74.2

  - uses: go/build
    with:
      packages: .
      output: juicefs
      ldflags: |
        -X github.com/juicedata/juicefs/pkg/version.version=${{package.version}}
        -X github.com/juicedata/juicefs/pkg/version.revision=$(git rev-parse HEAD)
        -X github.com/juicedata/juicefs/pkg/version.revisionDate=$(date -u -d "@$SOURCE_DATE_EPOCH" +"%Y-%m-%dT%H:%M:%SZ")

subpackages:
  - name: ${{package.name}}-compat
    description: Compat package for ${{package.name}}
    dependencies:
      runtime:
        - lsof # Check which process is using a file, mount point, or socket.
        - procps # Check running JuiceFS processes
        - strace # Analyze what a JuiceFS mount process is doing at the syscall level
        - iproute2 # Check interface and routing info if JuiceFS
        - net-tools # Check open ports or connections
        - openssh-server
        - openssh-client
        - bash # As per upstream entrypoint
        - coreutils # Needed for working with volumes
        - dash-binsh # Need for entrypoint when deployed by juicefs-csi-driver helm chart
      provides:
        - juicefs-compat=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/local/bin
          mkdir -p "${{targets.contextdir}}"/usr/bin
          mkdir -p "${{targets.contextdir}}"/var/run/sshd
          ln -sf /usr/bin/juicefs "${{targets.contextdir}}"/usr/local/bin/juicefs
          ln -sf /usr/bin/juicefs "${{targets.contextdir}}"/usr/bin/mount.juicefs
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - uses: test/tw/symlink-check
          with:
            allow-absolute: true
        - runs: |
            test "$(readlink /usr/local/bin/juicefs)" = "/usr/bin/juicefs"
            test "$(readlink /usr/bin/mount.juicefs)" = "/usr/bin/juicefs"

update:
  enabled: true
  ignore-regex-patterns:
    - '-rc'
    - '-beta'
    - '-dev'
  github:
    identifier: juicedata/juicefs
    strip-prefix: v
    tag-filter: v1.3.

test:
  environment:
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      ACCESS_KEY: minioadmin
      SECRET_KEY: minioadmin
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      WEBDAV_USER: minioadmin
      WEBDAV_PASSWORD: minioadmin
    contents:
      packages:
        - redis
        - minio
        - mc
        - wait-for-it
        - curl
  pipeline:
    - name: "Version test"
      runs: |
        juicefs --version 2>&1 | grep -q ${{package.version}}
    - name: "Start redis for metadata"
      runs: |
        redis-server --daemonize yes > /tmp/redis.logs 2>&1 &
        sleep 2
    - name: "Start MinIO"
      runs: |
        mkdir -p /data/minio
        minio server /data/minio --address :9000 --console-address :9001 > /tmp/minio.log 2>&1 &
        wait-for-it localhost:9000 -t 30
    - name: "Create test bucket using mc"
      runs: |
        mc alias set local http://localhost:9000 minioadmin minioadmin > /tmp/mc.log 2>&1
        mc mb local/juicefs-bucket 2>&1 | grep -q "Bucket created successfully"
    - name: "Format juicefs volume and dump logs"
      runs: |
        juicefs format --bucket http://localhost:9000/juicefs-bucket --access-key $ACCESS_KEY --secret-key $SECRET_KEY redis://localhost testvolume 2>&1 | grep -q "Volume is formatted"
        juicefs dump redis://localhost /tmp/dump.json
        grep -q "Sustained" /tmp/dump.json
        grep -q "DelFiles" /tmp/dump.json
        grep -q "FSTree" /tmp/dump.json
    - name: "Test S3 Gateway setup"
      uses: test/daemon-check-output
      with:
        start: |
          juicefs gateway redis://localhost localhost:9002
        expected_output: |
          Create session 1 OK
          listening
          initialization complete
        post: |
          wait-for-it localhost:9002
          # Validate endpoint health
          curl -v http://localhost:9002/minio/health/ready 2>&1 | grep -q "200 OK"
          # Validate connection
          mc alias set jfs http://localhost:9002 minioadmin minioadmin
          mc mb jfs/testvolume
          mc ls jfs 2>&1 | grep -q "testvolume/"
    - name: "Test WebDAV Server"
      uses: test/daemon-check-output
      with:
        start: |
          juicefs webdav redis://localhost localhost:9003
        expected_output: |
          WebDAV listening
        post: |
          wait-for-it localhost:9003
          # Validate
          curl -sf -u minioadmin:minioadmin http://localhost:9003 | grep -q "200 OK"
