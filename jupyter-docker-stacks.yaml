#nolint:valid-pipeline-git-checkout-commit,valid-pipeline-git-checkout-tag
package:
  name: jupyter-docker-stacks
  version: "0.0.0_git20250602"
  epoch: 0
  description: Ready-to-run images containing Jupyter applications
  copyright:
    - license: BSD-3-Clause

environment:
  contents:
    packages:
      - busybox

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/jupyter/docker-stacks
      branch: main

subpackages:
  - name: jupyter-docker-base
    dependencies:
      runtime:
        - bzip2
        - ca-certificates-bundle
        - glibc-locales
        - tini
        - wget
    pipeline:
      - working-directory: images/docker-stacks-foundation
        pipeline:
          - runs: |
              mkdir -p ${{targets.contextdir}}/usr/local/bin/
              cp run-hooks.sh start.sh ${{targets.contextdir}}/usr/local/bin/
              mkdir ${{targets.contextdir}}/usr/local/bin/start-notebook.d
              mkdir ${{targets.contextdir}}/usr/local/bin/before-notebook.d
    test:
      pipeline:
        - runs: |
            stat /usr/local/bin/start.sh
            stat /usr/local/bin/run-hooks.sh

  - name: jupyter-base-notebook-oci-entrypoint
    dependencies:
      runtime:
        - bash
        - busybox
    pipeline:
      - working-directory: images/base-notebook
        pipeline:
          - runs: |
              mkdir -p ${{targets.contextdir}}/usr/local/bin
              # copy entrypoint scripts
              cp start-notebook.py start-singleuser.py start-notebook.sh start-singleuser.sh ${{targets.contextdir}}/usr/local/bin
    test:
      pipeline:
        - runs: |
            stat /usr/local/bin/start-notebook.py
            stat /usr/local/bin/start-singleuser.py
            stat /usr/local/bin/start-notebook.sh
            stat /usr/local/bin/start-singleuser.sh

update:
  enabled: true
  git: {}
  schedule:
    period: weekly
    reason: Upstream does not maintain tags or releases

# Based on package size if was determined that this origin package is empty apart from its own SBOM and this test was added to confirm it is empty and will fail if the package is not longer empty (contains more than an SBOM)
test:
  pipeline:
    - uses: test/emptypackage
