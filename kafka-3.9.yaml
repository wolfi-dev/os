package:
  name: kafka-3.9
  version: 3.9.0
  epoch: 2
  description: Apache Kafka is a distributed event streaming platform
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - kafka=${{package.full-version}}
    runtime:
      - bash # some helper scripts use bash
      - openjdk-17-default-jvm

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - curl
      - gradle
      - openjdk-17-default-jdk
  environment:
    LANG: en_US.UTF-8
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/kafka
      tag: ${{package.version}}
      expected-commit: 84caaa6e9da06435411510a81fa321d4f99c351f

  - uses: patch
    with:
      patches: GHSA-4g8c-wm8x-jfhw-fix.patch

  - runs: |
      gradle clean releaseTarGz

      tar -xf core/build/distributions/kafka_2.13-${{package.version}}.tgz

      mkdir -p ${{targets.destdir}}/usr/lib/kafka/logs

      mv kafka_2.13-${{package.version}}/bin ${{targets.destdir}}/usr/lib/kafka
      mv kafka_2.13-${{package.version}}/libs ${{targets.destdir}}/usr/lib/kafka
      mv kafka_2.13-${{package.version}}/config ${{targets.destdir}}/usr/lib/kafka

      mv ${{targets.destdir}}/usr/lib/kafka/config/server.properties ${{targets.destdir}}/usr/lib/kafka/config/server.properties.original
      mkdir -p ${{targets.destdir}}/docker-entrypoint-initdb.d/

      # Clean up Windows scripts
      rm -rf ${{targets.destdir}}/usr/lib/kafka/bin/*.bat
      rm -rf ${{targets.destdir}}/usr/lib/kafka/windows

subpackages:
  - name: kafka-bitnami-compat-${{vars.major-minor-version}}
    description: "compat package with bitnami/kafka image"
    dependencies:
      provides:
        - kafka-bitnami-compat=${{package.full-version}}
      runtime:
        - wait-for-port
    pipeline:
      - uses: bitnami/compat
        with:
          image: kafka
          version-path: ${{vars.major-minor-version}}/debian-12
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/bitnami/kafka/
          ln -s /usr/lib/kafka/bin ${{targets.subpkgdir}}/opt/bitnami/kafka/bin
          ln -s /usr/lib/kafka/libs ${{targets.subpkgdir}}/opt/bitnami/kafka/libs
          ln -s /usr/lib/kafka/config ${{targets.subpkgdir}}/opt/bitnami/kafka/config
          ln -s /usr/lib/kafka/logs ${{targets.subpkgdir}}/opt/bitnami/kafka/logs
          ln -sf /opt/bitnami/scripts/kafka/entrypoint.sh ${{targets.subpkgdir}}/entrypoint.sh
          ln -sf /opt/bitnami/scripts/kafka/run.sh ${{targets.subpkgdir}}/run.sh
    test:
      pipeline:
        - name: "Test compatibility with bitnami/kafka image"
          runs: |
            test -L /entrypoint.sh
            test -L /run.sh
            test "$(readlink /entrypoint.sh)" = "/opt/bitnami/scripts/kafka/entrypoint.sh"
            test "$(readlink /run.sh)" = "/opt/bitnami/scripts/kafka/run.sh"

test:
  environment:
    contents:
      packages:
        - uuidgen
    environment:
      LANG: en_US.UTF-8
      JAVA_HOME: "/usr/lib/jvm/default-jvm"
  pipeline:
    - runs: |
        cd /usr/lib/kafka

        # Start ZooKeeper
        bin/zookeeper-server-start.sh config/zookeeper.properties &
        ZK_PID=$!

        # Start Kafka
        mv config/server.properties.original config/server.properties

        bin/kafka-server-start.sh config/server.properties &
        KAFKA_PID=$!
        sleep 5

        TOPIC_NAME="test-topic-$(uuidgen)"
        PARTITIONS=1
        REPLICATION_FACTOR=1

        # Create a Kafka topic
        bin/kafka-topics.sh --create --topic "${TOPIC_NAME}" --partitions "${PARTITIONS}" --replication-factor "${REPLICATION_FACTOR}" --if-not-exists --bootstrap-server localhost:9092

        # Produce a test message
        echo "Hello Kafka" | bin/kafka-console-producer.sh --broker-list localhost:9092 --topic "${TOPIC_NAME}"

        # Consume the message
        consumed_message=$(timeout 10 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic "${TOPIC_NAME}" --from-beginning --max-messages 1)

        # Verify the message
        if [[ "${consumed_message}" == "Hello Kafka" ]]; then
          echo "Successfully produced and consumed a test message."
        else
          echo "Failed to verify the consumed message."
        fi

        # Clean up the test topic
        bin/kafka-topics.sh --delete --topic "${TOPIC_NAME}" --bootstrap-server localhost:9092

        # Kill Kafka and ZooKeeper
        kill "${KAFKA_PID}"
        kill "${ZK_PID}"

update:
  enabled: true
  github:
    identifier: apache/kafka
    tag-filter: 3.9.
    use-tag: true
