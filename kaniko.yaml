package:
  name: kaniko
  version: 1.23.2
  epoch: 10
  description: Build Container Images In Kubernetes
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/GoogleContainerTools/kaniko
      tag: v${{package.version}}
      expected-commit: 1ae9a8416c14418625de90c1115052c0a6ebee07

  - uses: go/bump
    with:
      deps: github.com/opencontainers/runc@v1.1.12 google.golang.org/grpc@v1.64.1 github.com/golang-jwt/jwt/v4@v4.5.1 golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0 github.com/go-git/go-git/v5@v5.13.0
      tidy: false

  - uses: go/build
    with:
      output: executor
      packages: ./cmd/executor
      ldflags: -X github.com/GoogleContainerTools/kaniko/pkg/version.Version=v${{package.version}}

subpackages:
  - name: kaniko-warmer
    pipeline:
      - uses: go/build
        with:
          output: warmer
          packages: ./cmd/warmer
          ldflags: -X github.com/GoogleContainerTools/kaniko/pkg/version.Version=v${{package.version}}
    test:
      pipeline:
        - runs: |
            warmer --help

  - name: kaniko-compat
    pipeline:
      - runs: |
          # Symlink the binary from usr/bin to /kaniko/
          mkdir -p ${{targets.subpkgdir}}/kaniko/
          ln -sf /usr/bin/executor ${{targets.subpkgdir}}/kaniko/

  - name: kaniko-warmer-compat
    pipeline:
      - runs: |
          # Symlink the binary from usr/bin to /kaniko/
          mkdir -p ${{targets.subpkgdir}}/kaniko/
          ln -sf /usr/bin/warmer ${{targets.subpkgdir}}/kaniko/

update:
  enabled: true
  github:
    identifier: GoogleContainerTools/kaniko
    strip-prefix: v
    use-tag: true
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - bash
        - coreutils
        - docker
        - git
  pipeline:
    - name: "Verify executor binary and version"
      runs: |
        executor version
        executor --help
    - name: "Test executor basic functionality"
      runs: |
        # Create a simple Dockerfile
        cat > Dockerfile << 'EOF'
        FROM scratch
        EOF

        # Build a simple image
        executor \
          --context dir://. \
          --dockerfile Dockerfile \
          --no-push \
          --tarPath test.tar

        # Verify the tar was created
        test -f test.tar
