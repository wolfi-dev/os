package:
  name: kayenta-2.46
  version: "2.46.0"
  epoch: 0
  description: Automated Canary Service
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - openjdk-${{vars.java-version}}-jre
    provides:
      - kayenta=${{package.full-version}}

vars:
  java-version: 17 # https://github.com/spinnaker/kayenta/blob/a69573be9d8fededacf80817e4151a2c8df41276/Dockerfile.slim#L3

environment:
  contents:
    packages:
      - busybox
      - openjdk-${{vars.java-version}}
      - openjdk-${{vars.java-version}}-default-jvm
  environment:
    JAVA_HOME: /usr/lib/jvm/java-${{vars.java-version}}-openjdk
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx2g -Xms2g"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/spinnaker/kayenta
      expected-commit: a69573be9d8fededacf80817e4151a2c8df41276
      tag: v${{package.version}}

  - uses: auth/gradle

  - uses: patch
    with:
      patches: upgrade-dependencies.patch

  - runs: |
      ./gradlew --info --stacktrace build kayenta-web:installDist \
          -x :kayenta-core:test \
          -x :kayenta-integration-tests:test

      mkdir -p ${{targets.contextdir}}/opt/kayenta
      cp -r kayenta-web/build/install/kayenta/* ${{targets.contextdir}}/opt/kayenta

test:
  environment:
    contents:
      packages:
        - jq
        - redis
        - curl
    environment:
      JAVA_HOME: /usr/lib/jvm/java-${{vars.java-version}}-openjdk
  pipeline:
    - uses: test/daemon-check-output
      with:
        setup: |
          # redis-server in setup runs in the foreground if --daemonize yes not used
          redis-server --daemonize yes
        start: /opt/kayenta/bin/kayenta
        timeout: 120
        expected_output: |
          Started Main
          Tomcat started
        post: |
          sleep 5 # Allow some time for the service to start
          # Test health endpoint
          wait-for-it -t 5 --strict localhost:8090
          echo "Testing /health endpoint:"
          HEALTH_OUTPUT=$(curl -s -X GET http://localhost:8090/health)
          # Verify health status is UP
          STATUS=$(echo "$HEALTH_OUTPUT" | jq -r '.status')
          [ "$STATUS" = "UP" ] || { echo "Expected health status UP, got: $STATUS"; exit 1; }

update:
  enabled: true
  github:
    identifier: spinnaker/kayenta
    strip-prefix: v
    tag-filter: v2.46.
