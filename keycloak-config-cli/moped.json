{
  "id": "moped",
  "realm": "moped",
  "displayName": "MOPED Realm",
  "internationalizationEnabled": true,
  "supportedLocales": [
    "en", "de"
  ],
  "authenticationFlows": [
    {
      "alias": "my docker auth",
      "description": "My custom docker auth flow for testing",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 1,
          "userSetupAllowed": false,
          "autheticatorFlow": false,
          "authenticatorFlow": false
        },
        {
          "authenticator": "http-basic-authenticator",
          "requirement": "DISABLED",
          "priority": 0,
          "userSetupAllowed": false,
          "autheticatorFlow": false,
          "authenticatorFlow": false
        }
      ]
    },
    {
      "alias": "my registration",
      "description": "My registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 0,
          "flowAlias": "my registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true,
          "authenticatorFlow": true
        }
      ]
    },
    {
      "alias": "my registration form",
      "description": "My registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 1,
          "userSetupAllowed": false,
          "autheticatorFlow": false,
          "authenticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 0,
          "userSetupAllowed": false,
          "autheticatorFlow": false,
          "authenticatorFlow": false
        }
      ]
    },
    {
      "alias": "my auth flow",
      "description": "My auth flow for testing",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "test auth config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false,
          "authenticatorFlow": false
        }
      ]
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "scope-mapping-role",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "my_realm_role",
        "description": "My realm role",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "my_second_realm_role",
        "description": "My second realm role",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "user",
        "description": "User privileges"
      },
      {
        "name": "admin",
        "description": "Administrator privileges"
      },
      {
        "name": "user_premium",
        "description": "User Premium privileges"
      }
    ],
    "client": {
      "moped-client": [
        {
          "name": "my_client_role",
          "description": "My moped-client role",
          "composite": false,
          "clientRole": true
        },
        {
          "name": "my_second_client_role",
          "description": "My second moped-client role",
          "composite": false,
          "clientRole": true
        }
      ]
    }
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "users": [
    {
      "username": "myuser",
      "email": "my@mail.de",
      "enabled": true,
      "firstName": "My",
      "lastName": "User",
      "realmRoles": [
        "my_realm_role"
      ],
      "clientRoles": {
        "moped-client": [
          "my_client_role"
        ]
      },
      "credentials": [
        {
          "type": "password",
          "value": "myuser123"
        }
      ]
    },
    {
      "username": "myotheruser",
      "email": "myother@mail.de",
      "enabled": true,
      "firstName": "My other",
      "lastName": "other User",
      "realmRoles": [
        "my_realm_role"
      ],
      "clientRoles": {
        "moped-client": [
          "my_client_role"
        ]
      },
      "credentials": [
        {
          "type": "password",
          "value": "myotheruser123"
        }
      ]
    }
  ],
  "clients": [
    {
      "clientId": "auth-moped-client",
      "name": "auth-moped-client",
      "description": "Auth-Moped-Client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "changed-special-client-secret",
      "redirectUris": [
        "https://moped-client.org/redirect"
      ],
      "webOrigins": [
        "https://moped-client.org/webOrigin"
      ],
      "protocolMappers": [
        {
          "name": "BranchCodeMapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "aggregate.attrs": "false",
            "userinfo.token.claim": "true",
            "multivalued": "false",
            "user.attribute": "branch",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "branch",
            "jsonType.label": "String"
          }
        }
      ],
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "PERMISSIVE",
        "decisionStrategy": "UNANIMOUS",
        "resources": [
          {
            "name": "Admin Resource",
            "uri": "/protected/admin/*",
            "type": "http://servlet-authz/protected/admin",
            "scopes": [
              {
                "name": "urn:servlet-authz:protected:admin:access",
                "iconUri": "https://www.keycloak.org/resources/favicon.ico"
              }
            ]
          },
          {
            "name": "Protected Resource",
            "uris": [
              "/*"
            ],
            "type": "http://servlet-authz/protected/resource",
            "scopes": [
              {
                "name": "urn:servlet-authz:protected:resource:access"
              }
            ],
            "attributes": {},
            "ownerManagedAccess": false
          },
          {
            "name": "Premium Resource",
            "uri": "/protected/premium/*",
            "type": "urn:servlet-authz:protected:resource",
            "scopes": [
              {
                "name": "urn:servlet-authz:protected:premium:access"
              }
            ]
          },
          {
            "name": "Main Page",
            "type": "urn:servlet-authz:protected:resource",
            "scopes": [
              {
                "name": "urn:servlet-authz:page:main:actionForPremiumUser"
              },
              {
                "name": "urn:servlet-authz:page:main:actionForAdmin"
              },
              {
                "name": "urn:servlet-authz:page:main:actionForUser"
              }
            ]
          }
        ],
        "policies": [
          {
            "name": "Any Admin Policy",
            "description": "Defines that adminsitrators can do something",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"admin\"}]"
            }
          },
          {
            "name": "Any User Policy",
            "description": "Defines that any user can do something",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"user\"}]"
            }
          },
          {
            "name": "Only Premium User Policy",
            "description": "Defines that only premium users can do something",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"user_premium\"}]"
            }
          },
          {
            "name": "All Users Policy",
            "description": "Defines that all users can do something",
            "type": "aggregate",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "applyPolicies": "[\"Any User Policy\",\"Any Admin Policy\",\"Only Premium User Policy\"]"
            }
          },
          {
            "name": "Administrative Resource Permission",
            "description": "A policy that defines access to administrative resources",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Admin Resource\"]",
              "applyPolicies": "[\"Any Admin Policy\"]"
            }
          },
          {
            "name": "Premium User Scope Permission",
            "description": "A policy that defines access to a premium scope",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "scopes": "[\"urn:servlet-authz:page:main:actionForPremiumUser\"]",
              "applyPolicies": "[\"Only Premium User Policy\"]"
            }
          },
          {
            "name": "User Action Scope Permission",
            "description": "A policy that defines access to a user scope",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "scopes": "[\"urn:servlet-authz:page:main:actionForUser\"]",
              "applyPolicies": "[\"Any User Policy\"]"
            }
          },
          {
            "name": "Administrator Action Scope Permission",
            "description": "A policy that defines access to an administrator scope",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "scopes": "[\"urn:servlet-authz:page:main:actionForAdmin\"]",
              "applyPolicies": "[\"Any Admin Policy\"]"
            }
          },
          {
            "name": "Protected Resource Permission",
            "description": "A policy that defines access to any protected resource",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Protected Resource\"]",
              "applyPolicies": "[\"All Users Policy\"]"
            }
          }
        ],
        "scopes": [
          {
            "name": "urn:servlet-authz:protected:admin:access"
          },
          {
            "name": "urn:servlet-authz:protected:resource:access"
          },
          {
            "name": "urn:servlet-authz:protected:premium:access"
          },
          {
            "name": "urn:servlet-authz:page:main:actionForPremiumUser"
          },
          {
            "name": "urn:servlet-authz:page:main:actionForAdmin"
          },
          {
            "name": "urn:servlet-authz:page:main:actionForUser",
            "iconUri": "https://www.keycloak.org/resources/favicon.ico"
          }
        ]
      },
      "authenticationFlowBindingOverrides": {
        "browser": "my docker auth"
      }
    },
    {
      "clientId": "moped-client",
      "name": "moped-client",
      "description": "Moped-Client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "my-special-client-secret",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "protocolMappers": [
        {
          "name": "BranchCodeMapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "aggregate.attrs": "false",
            "userinfo.token.claim": "true",
            "multivalued": "false",
            "user.attribute": "branch",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "branch",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "config": {
          "keySize": [
            "2048"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "config": {
          "secretSize": [
            "32"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "name": "ldap-apacheds",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "uid"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              }
            },
            {
              "name": "first name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "cn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "firstName"
                ]
              }
            },
            {
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "sn"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              }
            },
            {
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "mail"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              }
            },
            {
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "createTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              }
            },
            {
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "modifyTimestamp"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "true"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              }
            },
            {
              "name": "postal code",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "postalCode"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "postal_code"
                ]
              }
            },
            {
              "name": "street",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "street"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "false"
                ],
                "user.model.attribute": [
                  "street"
                ]
              }
            },
            {
              "name": "picture",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "ldap.attribute": [
                  "jpegPhoto"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "is.binary.attribute": [
                  "true"
                ],
                "read.only": [
                  "false"
                ],
                "always.read.value.from.ldap": [
                  "true"
                ],
                "user.model.attribute": [
                  "picture"
                ]
              }
            },
            {
              "name": "realm roles",
              "providerId": "role-ldap-mapper",
              "subComponents": {
              },
              "config": {
                "mode": [
                  "LDAP_ONLY"
                ],
                "roles.dn": [
                  "ou=RealmRoles,dc=keycloak,dc=org"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "role.name.ldap.attribute": [
                  "cn"
                ],
                "use.realm.roles.mapping": [
                  "true"
                ],
                "role.object.classes": [
                  "groupOfNames"
                ]
              }
            }
          ]
        },
        "config": {
          "enabled": [
            "false"
          ],
          "fullSyncPeriod": [
            "-1"
          ],
          "pagination": [
            "true"
          ],
          "debug": [
            "false"
          ],
          "searchScope": [
            "1"
          ],
          "connectionPooling": [
            "true"
          ],
          "usersDn": [
            "ou=People,dc=keycloak,dc=org"
          ],
          "priority": [
            "1"
          ],
          "userObjectClasses": [
            "inetOrgPerson, organizationalPerson"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "usernameLDAPAttribute": [
            "uid"
          ],
          "bindDn": [
            "uid=admin,ou=system"
          ],
          "bindCredential": [
            "secret"
          ],
          "rdnLDAPAttribute": [
            "uid"
          ],
          "lastSync": [
            "0"
          ],
          "vendor": [
            "other"
          ],
          "editMode": [
            "WRITABLE"
          ],
          "uuidLDAPAttribute": [
            "entryUUID"
          ],
          "connectionUrl": [
            "ldap://localhost:10389"
          ],
          "syncRegistrations": [
            "true"
          ],
          "authType": [
            "simple"
          ]
        }
      }
    ]
  },
  "identityProviders": [
    {
      "alias": "saml",
      "providerId": "saml",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": true,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "",
        "validateSignature": "false",
        "samlXmlKeyNameTranformer": "KEY_ID",
        "signingCertificate": "MIIDETCCAfmgAwIBAgIUZRpDhkNKl5eWtJqk0Bu1BgTTargwDQYJKoZIhvcNAQEL\nBQAwFjEUMBIGA1UEAwwLc2FtbHRlc3QuaWQwHhcNMTgwODI0MjExNDEwWhcNMzgw\nODI0MjExNDEwWjAWMRQwEgYDVQQDDAtzYW1sdGVzdC5pZDCCASIwDQYJKoZIhvcN\nAQEBBQADggEPADCCAQoCggEBAJrh9/PcDsiv3UeL8Iv9rf4WfLPxuOm9W6aCntEA\n8l6c1LQ1Zyrz+Xa/40ZgP29ENf3oKKbPCzDcc6zooHMji2fBmgXp6Li3fQUzu7yd\n+nIC2teejijVtrNLjn1WUTwmqjLtuzrKC/ePoZyIRjpoUxyEMJopAd4dJmAcCq/K\nk2eYX9GYRlqvIjLFoGNgy2R4dWwAKwljyh6pdnPUgyO/WjRDrqUBRFrLQJorR2kD\nc4seZUbmpZZfp4MjmWMDgyGM1ZnR0XvNLtYeWAyt0KkSvFoOMjZUeVK/4xR74F8e\n8ToPqLmZEg9ZUx+4z2KjVK00LpdRkH9Uxhh03RQ0FabHW6UCAwEAAaNXMFUwHQYD\nVR0OBBYEFJDbe6uSmYQScxpVJhmt7PsCG4IeMDQGA1UdEQQtMCuCC3NhbWx0ZXN0\nLmlkhhxodHRwczovL3NhbWx0ZXN0LmlkL3NhbWwvaWRwMA0GCSqGSIb3DQEBCwUA\nA4IBAQBNcF3zkw/g51q26uxgyuy4gQwnSr01Mhvix3Dj/Gak4tc4XwvxUdLQq+jC\ncxr2Pie96klWhY/v/JiHDU2FJo9/VWxmc/YOk83whvNd7mWaNMUsX3xGv6AlZtCO\nL3JhCpHjiN+kBcMgS5jrtGgV1Lz3/1zpGxykdvS0B4sPnFOcaCwHe2B9SOCWbDAN\nJXpTjz1DmJO4ImyWPJpN1xsYKtm67Pefxmn0ax0uE2uuzq25h0xbTkqIQgJzyoE/\nDPkBFK1vDkMfAW11dQ0BXatEnW7Gtkc0lh2/PIbHWj4AzxYMyBf5Gy6HSVOftwjC\nvoQR2qr2xJBixsg+MIORKtmKHLfU,MIIDEjCCAfqgAwIBAgIVAMECQ1tjghafm5OxWDh9hwZfxthWMA0GCSqGSIb3DQEB\nCwUAMBYxFDASBgNVBAMMC3NhbWx0ZXN0LmlkMB4XDTE4MDgyNDIxMTQwOVoXDTM4\nMDgyNDIxMTQwOVowFjEUMBIGA1UEAwwLc2FtbHRlc3QuaWQwggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQC0Z4QX1NFKs71ufbQwoQoW7qkNAJRIANGA4iM0\nThYghul3pC+FwrGv37aTxWXfA1UG9njKbbDreiDAZKngCgyjxj0uJ4lArgkr4AOE\njj5zXA81uGHARfUBctvQcsZpBIxDOvUUImAl+3NqLgMGF2fktxMG7kX3GEVNc1kl\nbN3dfYsaw5dUrw25DheL9np7G/+28GwHPvLb4aptOiONbCaVvh9UMHEA9F7c0zfF\n/cL5fOpdVa54wTI0u12CsFKt78h6lEGG5jUs/qX9clZncJM7EFkN3imPPy+0HC8n\nspXiH/MZW8o2cqWRkrw3MzBZW3Ojk5nQj40V6NUbjb7kfejzAgMBAAGjVzBVMB0G\nA1UdDgQWBBQT6Y9J3Tw/hOGc8PNV7JEE4k2ZNTA0BgNVHREELTArggtzYW1sdGVz\ndC5pZIYcaHR0cHM6Ly9zYW1sdGVzdC5pZC9zYW1sL2lkcDANBgkqhkiG9w0BAQsF\nAAOCAQEASk3guKfTkVhEaIVvxEPNR2w3vWt3fwmwJCccW98XXLWgNbu3YaMb2RSn\n7Th4p3h+mfyk2don6au7Uyzc1Jd39RNv80TG5iQoxfCgphy1FYmmdaSfO8wvDtHT\nTNiLArAxOYtzfYbzb5QrNNH/gQEN8RJaEf/g/1GTw9x/103dSMK0RXtl+fRs2nbl\nD1JJKSQ3AdhxK/weP3aUPtLxVVJ9wMOQOfcy02l+hHMb6uAjsPOpOVKqi3M8XmcU\nZOpx4swtgGdeoSpeRyrtMvRwdcciNBp9UZome44qZAYH1iqrpmmjsfI9pJItsgWu\n3kXPjhSfj1AJGR1l9JGvJrHki1iHTA==",
        "postBindingLogout": "true",
        "nameIDPolicyFormat": "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
        "postBindingResponse": "true",
        "singleLogoutServiceUrl": "https://samltest.id/idp/profile/SAML2/POST/SLO",
        "backchannelSupported": "",
        "signatureAlgorithm": "RSA_SHA256",
        "wantAssertionsEncrypted": "",
        "useJwksUrl": "true",
        "wantAssertionsSigned": "",
        "postBindingAuthnRequest": "true",
        "forceAuthn": "",
        "singleSignOnServiceUrl": "https://samltest.id/idp/profile/SAML2/POST/SSO",
        "wantAuthnRequestsSigned": "false",
        "allowedClockSkew": "",
        "addExtensionsElementWithKeyInfo": "false",
        "encryptionPublicKey": "MIIDEjCCAfqgAwIBAgIVAPVbodo8Su7/BaHXUHykx0Pi5CFaMA0GCSqGSIb3DQEB\nCwUAMBYxFDASBgNVBAMMC3NhbWx0ZXN0LmlkMB4XDTE4MDgyNDIxMTQwOVoXDTM4\nMDgyNDIxMTQwOVowFjEUMBIGA1UEAwwLc2FtbHRlc3QuaWQwggEiMA0GCSqGSIb3\nDQEBAQUAA4IBDwAwggEKAoIBAQCQb+1a7uDdTTBBFfwOUun3IQ9nEuKM98SmJDWa\nMwM877elswKUTIBVh5gB2RIXAPZt7J/KGqypmgw9UNXFnoslpeZbA9fcAqqu28Z4\nsSb2YSajV1ZgEYPUKvXwQEmLWN6aDhkn8HnEZNrmeXihTFdyr7wjsLj0JpQ+VUlc\n4/J+hNuU7rGYZ1rKY8AA34qDVd4DiJ+DXW2PESfOu8lJSOteEaNtbmnvH8KlwkDs\n1NvPTsI0W/m4SK0UdXo6LLaV8saIpJfnkVC/FwpBolBrRC/Em64UlBsRZm2T89ca\nuzDee2yPUvbBd5kLErw+sC7i4xXa2rGmsQLYcBPhsRwnmBmlAgMBAAGjVzBVMB0G\nA1UdDgQWBBRZ3exEu6rCwRe5C7f5QrPcAKRPUjA0BgNVHREELTArggtzYW1sdGVz\ndC5pZIYcaHR0cHM6Ly9zYW1sdGVzdC5pZC9zYW1sL2lkcDANBgkqhkiG9w0BAQsF\nAAOCAQEABZDFRNtcbvIRmblnZItoWCFhVUlq81ceSQddLYs8DqK340//hWNAbYdj\nWcP85HhIZnrw6NGCO4bUipxZXhiqTA/A9d1BUll0vYB8qckYDEdPDduYCOYemKkD\ndmnHMQWs9Y6zWiYuNKEJ9mf3+1N8knN/PK0TYVjVjXAf2CnOETDbLtlj6Nqb8La3\nsQkYmU+aUdopbjd5JFFwbZRaj6KiHXHtnIRgu8sUXNPrgipUgZUOVhP0C0N5OfE4\nJW8ZBrKgQC/6vJ2rSa9TlzI6JAa5Ww7gMXMP9M+cJUNQklcq+SBnTK8G+uBHgPKR\nzBDsMIEzRtQZm4GIoHJae4zmnCekkQ==",
        "principalType": "SUBJECT"
      }
    }
  ],
  "groups": [
    {
      "name": "My Group",
      "attributes": {
        "my added attribute": [
          "my added attribute value"
        ]
      },
      "realmRoles": [
        "my_realm_role"
      ],
      "clientRoles": {
        "moped-client": [
          "my_client_role"
        ]
      },
      "subGroups": [
        {
          "name": "My SubGroup"
        }
      ]
    },
    {
      "name": "My Added Group"
    },
    {
      "name": "Group with attribute",
      "attributes": {
        "my attribute": [
          "my attribute value"
        ]
      }
    },
    {
      "name": "Group with realm role",
      "realmRoles": [
        "my_realm_role"
      ]
    },
    {
      "name": "Group with client role",
      "clientRoles": {
        "moped-client": [
          "my_client_role"
        ]
      }
    },
    {
      "name": "Group with subgroup",
      "subGroups": [
        {
          "name": "My SubGroup"
        }
      ]
    },
    {
      "name": "Group with subgroup with realm role",
      "subGroups": [
        {
          "name": "My SubGroup",
          "realmRoles": [
            "my_second_realm_role"
          ]
        }
      ]
    },
    {
      "name": "Group with subgroup with client role",
      "subGroups": [
        {
          "name": "My SubGroup",
          "clientRoles": {
            "moped-client": [
              "my_second_client_role"
            ]
          }
        }
      ]
    },
    {
      "name": "Group with subgroup with subgroup",
      "subGroups": [
        {
          "name": "My SubGroup",
          "subGroups": [
            {
              "name": "My Inner SubGroup"
            }
          ]
        }
      ]
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "test auth config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    }
  ],
  "messageBundles": {
    "de": {
      "hello": "Hallo",
      "world": "Welt!"
    },
    "en": {
      "hello": "Hello",
      "world": "World!"
    }
  }
}