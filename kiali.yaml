package:
  name: kiali
  version: "2.9.0"
  epoch: 0
  description: The Console for Istio Service Mesh
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - kiali-api
      - kiali-ui

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go
      - nodejs
      - npm
      - tree
      - yarn

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kiali/kiali
      tag: v${{package.version}}
      expected-commit: 036677b47ec07ea72b43835ba631ee6d8c5de88b

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.38.0

subpackages:
  - name: ${{package.name}}-api
    description: Kiali API
    dependencies:
      runtime:
        - ca-certificates
    pipeline:
      - uses: go/build # Builds to /opt/kiali/kiali
        with:
          packages: .
          prefix: opt
          install-dir: kiali
          output: kiali
          ldflags: |
            -X main.version=v${{package.version}} \
              -X main.commitHash=$(git rev-parse HEAD) \
              -X main.goVersion=$(go version | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
      - uses: strip

  - name: ${{package.name}}-ui
    description: Kiali UI
    pipeline:
      - working-directory: frontend
        runs: |
          yarn install --frozen-lockfile
          KIALI_ENV=production yarn run build
          mkdir -p ${{targets.contextdir}}/opt/kiali
          mv build ${{targets.contextdir}}/opt/kiali/console

test:
  pipeline:
    - name: Verify Kiali API
      runs: |
        # Check if binary runs
        /opt/kiali/kiali --help
    - name: Verify Kiali UI
      runs: |
        # Make sure webroot HTML index file exists
        grep '</html>' /opt/kiali/console/index.html

update:
  enabled: true
  github:
    identifier: kiali/kiali
    strip-prefix: v
