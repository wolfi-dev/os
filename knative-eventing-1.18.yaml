package:
  name: knative-eventing-1.18
  version: "1.18.2"
  epoch: 0
  description: Event-driven application platform for Kubernetes.
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - knative-eventing=${{package.full-version}}

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 9b250498d3be044747352cca0beb0bd4e0d1c87a
      repository: https://github.com/knative/eventing
      tag: knative-v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        github.com/go-jose/go-jose/v3@v3.0.4
        golang.org/x/oauth2@v0.27.0

subpackages:
  - name: ${{package.name}}-filter
    description: "Filter component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-filter=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: filter
          packages: ./cmd/broker/filter
    test:
      environment:
        environment:
          NAMESPACE: default
          POD_NAME: test-filter
          CONTAINER_NAME: filter
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/filter
            timeout: 30
            expected_output: |
              Starting
              Registering

  - name: ${{package.name}}-filter-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/filter ${{targets.contextdir}}/ko-app/filter
    dependencies:
      provides:
        - knative-eventing-filter-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/filter

  - name: ${{package.name}}-ingress
    description: "Ingress component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-ingress=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: ingress
          packages: ./cmd/broker/ingress
    test:
      environment:
        environment:
          NAMESPACE: default
          POD_NAME: test-ingress
          CONTAINER_NAME: ingress
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/ingress
            timeout: 30
            expected_output: |
              Starting the Broker Ingress
              Starting informers

  - name: ${{package.name}}-ingress-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/ingress ${{targets.contextdir}}/ko-app/ingress
    dependencies:
      provides:
        - knative-eventing-ingress-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/ingress

  - name: ${{package.name}}-controller
    description: "Controller component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-controller=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: controller
          packages: ./cmd/controller
    test:
      environment:
        environment:
          APISERVER_RA_IMAGE: dummy-image
          NAMESPACE: default
          POD_NAME: test-controller
          CONTAINER_NAME: controller
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/controller
            timeout: 30
            expected_output: |
              Registering

  - name: ${{package.name}}-controller-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/controller ${{targets.contextdir}}/ko-app/controller
    dependencies:
      provides:
        - knative-eventing-controller-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/controller

  - name: ${{package.name}}-channel-controller
    description: "channel_controller component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-channel-controller=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: channel_controller
          packages: ./cmd/in_memory/channel_controller
    test:
      environment:
        environment:
          NAMESPACE: default
          POD_NAME: test-channel-controller
          CONTAINER_NAME: channel_controller
          WEBHOOK_NAME: webhook
          DISPATCHER_IMAGE: dummy-dispatcher-image
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/channel_controller
            timeout: 30
            expected_output: |
              Registering

  - name: ${{package.name}}-channel-controller-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/channel_controller ${{targets.contextdir}}/ko-app/channel_controller
    dependencies:
      provides:
        - knative-eventing-channel-controller-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/channel_controller

  - name: ${{package.name}}-channel-dispatcher
    description: "channel_dispatcher component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-channel-dispatcher=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: channel_dispatcher
          packages: ./cmd/in_memory/channel_dispatcher
    test:
      environment:
        environment:
          NAMESPACE: default
          POD_NAME: test-channel-dispatcher
          CONTAINER_NAME: channel_dispatcher
          MAX_IDLE_CONNS: "100"
          MAX_IDLE_CONNS_PER_HOST: "100"
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/channel_dispatcher
            timeout: 30
            expected_output: |
              Registering
            # Ignore ERROR keyword, since it is expected.
            error_strings: |
              FAIL
              FATAL

  - name: ${{package.name}}-channel-dispatcher-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/channel_dispatcher ${{targets.contextdir}}/ko-app/channel_dispatcher
    dependencies:
      provides:
        - knative-eventing-channel-dispatcher-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/channel_dispatcher

  - name: ${{package.name}}-jobsink
    description: "jobsink component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-jobsink=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: jobsink
          packages: ./cmd/jobsink
    test:
      environment:
        contents:
          packages:
            - wait-for-it
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/jobsink
            timeout: 30
            expected_output: |
              Starting the JobSink Ingress

  - name: ${{package.name}}-jobsink-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/jobsink ${{targets.contextdir}}/ko-app/jobsink
    dependencies:
      provides:
        - knative-eventing-jobsink-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/jobsink

  - name: ${{package.name}}-mtchannel-broker
    description: "mtchannel_broker component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-mtchannel-broker=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: mtchannel_broker
          packages: ./cmd/mtchannel_broker
    test:
      environment:
        environment:
          NAMESPACE: default
          POD_NAME: test-mtchannel-broker
          CONTAINER_NAME: mtchannel_broker
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/mtchannel_broker
            timeout: 30
            expected_output: |
              Registering

  - name: ${{package.name}}-mtchannel-broker-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/mtchannel_broker ${{targets.contextdir}}/ko-app/mtchannel_broker
    dependencies:
      provides:
        - knative-eventing-mtchannel-broker-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/mtchannel_broker

  - name: ${{package.name}}-webhook
    description: "webhook component for Knative eventing"
    dependencies:
      provides:
        - knative-eventing-webhook=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          output: webhook
          packages: ./cmd/webhook
    test:
      environment:
        environment:
          NAMESPACE: default
          POD_NAME: test-webhook
          CONTAINER_NAME: webhook
          WEBHOOK_NAME: webhook
      pipeline:
        - uses: test/kwok/cluster
        - uses: test/daemon-check-output
          with:
            start: /usr/bin/webhook
            timeout: 30
            expected_output: |
              Registering

  - name: ${{package.name}}-webhook-compat
    description: "To match with the upstream image entrypoint"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/webhook ${{targets.contextdir}}/ko-app/webhook
    dependencies:
      provides:
        - knative-eventing-webhook-compat=${{package.full-version}}
    test:
      pipeline:
        - runs: stat /ko-app/webhook

update:
  enabled: true
  github:
    identifier: knative/eventing
    strip-prefix: knative-v
    tag-filter: knative-v1.18.

# This origin package is empty apart from its own SBOM and this test was added to confirm it is empty and will fail if the package is not longer empty (contains more than an SBOM)
test:
  pipeline:
    - uses: test/emptypackage
