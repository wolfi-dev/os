package:
  name: kots
  version: "1.124.16"
  epoch: 0
  description: Kubernetes Off-The-Shelf (KOTS) Software
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      - busybox
      - curl
      - git
      - helm
      - kubectl
      - kustomize
      - py3-dateutil
      - py3-magic
      - s3cmd

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - go
      - nodejs
      - yarn

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/replicatedhq/kots
      tag: v${{package.version}}
      expected-commit: b12a789bec83900d53ac06d0ec13363ac9737d47

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
        golang.org/x/net@v0.38.0

  - runs: |
      set -x
      mkdir -p ${{targets.destdir}}/etc
      mkdir -p ${{targets.destdir}}/usr/bin

      # Scripts etc.
      mv deploy/assets/* "${{targets.destdir}}/etc/"

      # kotsadm and kots binaries
      export VERSION=${{package.version}}
      export GIT_TAG=${{package.version}}

      # Set environment variables from repository
      source .image.env

      KOTS_KUSTOMIZE_BIN_DIR=/usr/bin

      # TODO: fix pact build error on arm https://github.com/pact-foundation/pact-js-core/issues/264
      export PACT_SKIP_BINARY_INSTALL=true

      # Configure Yarn
      yarn install --pure-lockfile --network-concurrency 1

      # removing tests for now to see if this builds
      make -C web deps lint build-kotsadm
      make kots build

      mv bin/kotsadm "${{targets.destdir}}/usr/bin/"
      mv bin/kots "${{targets.destdir}}/usr/bin/"

subpackages:
  - name: kots-symlink-compat # inconsistent naming for compat however this package name already exists
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/local/bin

          ln -s /usr/bin ${{targets.subpkgdir}}/usr/local/bin
          ln -s /usr/bin/kotsadm ${{targets.subpkgdir}}/kotsadm
          ln -s /usr/bin/kots ${{targets.subpkgdir}}/kots

          # loop over all the assets in /etc and symlink them into the root subpackage
          for file in ${{targets.destdir}}/etc/*; do
              filename=$(basename $file)
              ln -s /etc/$filename ${{targets.subpkgdir}}/$filename
          done

          # TODO: this is a manual intervention whenever helm bumps its major version
          ln -s /usr/bin/helm ${{targets.subpkgdir}}/usr/local/bin/helm
          ln -s /usr/bin/helm ${{targets.subpkgdir}}/usr/local/bin/helm3

          # TODO: this is a manual intervention whenever kustomize bumps its major version
          ln -s /usr/bin/kustomize ${{targets.subpkgdir}}/usr/local/bin/kustomize
          ln -s /usr/bin/kustomize ${{targets.subpkgdir}}/usr/local/bin/kustomize5

          ln -s /usr/bin/kubectl ${{targets.subpkgdir}}/usr/local/bin/kubectl
    description: Compatability package for kots

  - name: kots-compat # adding kots-compat here since we removed the older one and want to avoid breaking anything
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/local/bin

          # NOTE: this is a manual intervention whenever helm releases a new major version
          ln -s /usr/bin/helm ${{targets.contextdir}}/usr/local/bin/helm
          ln -s /usr/bin/helm ${{targets.contextdir}}/usr/local/bin/helm3

          # NOTE: this is a manual intervention whenever kustomize releases a new major version
          ln -s /usr/bin/kustomize ${{targets.contextdir}}/usr/local/bin/kustomize
          ln -s /usr/bin/kustomize ${{targets.contextdir}}/usr/local/bin/kustomize5

          ln -s /usr/bin/kubectl ${{targets.contextdir}}/usr/local/bin/kubectl
    description: Compatability package for kots

update:
  enabled: true
  github:
    identifier: replicatedhq/kots
    strip-prefix: v

test:
  pipeline:
    - name: Check kots version
      runs: |
        kots version
        kots --help
        kotsadm version
        kotsadm --help
    - name: Validate kots CLI help command
      runs: |
        kots help
    - name: Validate kots CLI install command
      runs: |
        kots install --help
