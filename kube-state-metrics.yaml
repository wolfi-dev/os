package:
  name: kube-state-metrics
  version: "2.15.0"
  epoch: 41
  description: Add-on agent to generate and expose cluster-level metrics.
  dependencies:
    runtime:
      - merged-usrsbin
      - tzdata
      - wolfi-baselayout
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kubernetes/kube-state-metrics
      tag: v${{package.version}}
      expected-commit: 4a585c91beffdbd1378833ce5f102b401e7e57c5

  - uses: go/bump
    with:
      deps: |-
        github.com/emicklei/go-restful/v3@v3.11.3
        golang.org/x/crypto@v0.35.0
        golang.org/x/oauth2@v0.27.0
        golang.org/x/net@v0.36.0
      modroot: .

  - uses: go/build
    with:
      packages: .
      output: kube-state-metrics
      ldflags: |
        -X github.com/prometheus/common/version.Version=${{package.version}}
        -X github.com/prometheus/common/version.Revision=$(git rev-parse --short HEAD)
        -X github.com/prometheus/common/version.Branch=$(git rev-parse --abbrev-ref HEAD)
        -X github.com/prometheus/common/version.BuildUser=wolfi
        -X github.com/prometheus/common/version.BuildDate=$(date -u -d "@$SOURCE_DATE_EPOCH" +'%Y-%m-%dT%H:%M:%SZ')

subpackages:
  - name: ${{package.name}}-bitnami-compat
    description: "compat package for ${{package.name}} image"
    pipeline:
      - uses: bitnami/compat
        with:
          image: ${{package.name}}
          version-path: 2/debian-12
      - runs: |
          mkdir -p ${{targets.contextdir}}/opt/bitnami/kube-state-metrics/bin/
          ln -sf /usr/bin/kube-state-metrics ${{targets.contextdir}}/opt/bitnami/kube-state-metrics/bin/kube-state-metrics
    test:
      pipeline:
        - runs: stat /opt/bitnami/kube-state-metrics/bin/kube-state-metrics
    dependencies:
      runtime:
        - merged-usrsbin
        - wolfi-baselayout

update:
  enabled: true
  github:
    identifier: kubernetes/kube-state-metrics
    strip-prefix: v
    tag-filter: v

test:
  pipeline:
    - runs: |
        kube-state-metrics version | grep ${{package.version}}
        kube-state-metrics --help
    - uses: test/kwok/cluster
    - name: Run and test ${{package.name}}
      uses: test/daemon-check-output
      with:
        setup: |
          export KUBERNETES_SERVICE_HOST="127.0.0.1"
          export KUBERNETES_SERVICE_PORT="8080"
          kwokctl get kubeconfig > cluster-kubeconfig
        start: /usr/bin/${{package.name}} --kubeconfig cluster-kubeconfig
        timeout: 30
        expected_output: |
          Starting kube-state-metrics
          Used default resources
          Using all namespaces
