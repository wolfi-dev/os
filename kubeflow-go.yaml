package:
  name: kubeflow-go
  version: "1.10.0"
  epoch: 0
  description: Kubeflow Go Components
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kubeflow/kubeflow
      tag: v${{package.version}}
      expected-commit: 90e987bf87d3e7c900926310b00bfa16b59e41eb

  # - uses: patch
  #   with:
  #     patches: update-deps.patch
        

data:
  - name: controllers
    items:
      notebook-controller: The controller allows users to create a custom resource "Notebook" (jupyter notebook).
      profile-controller: Profile access management provides namespace level isolation
      pvcviewer-controller: Using this component, PVC Viewers can easily be created. PVCViewers enable users to open a filebrowser on arbitrary persistent volume claims.
      tensorboard-controller: Kubeflow Tensorboard Controller
  # not writing descriptions here as their output is different for each
  - name: components
    items:
      access-management: access-management
      admission-webhook: webhook

subpackages:
  - range: controllers

    name: "kubeflow-${{range.key}}"
    description: ${{range.value}}
    pipeline:
      - uses: go/bump
        with:
          deps: |-
            golang.org/x/net@v0.38.0
            golang.org/x/crypto@v0.35.0
            golang.org/x/oauth2@v0.27.0
          modroot: components/${{range.key}}
      - uses: go/build  
        with:
          packages: .
          modroot: components/${{range.key}}
          output: manager
    test:
      environment:
        contents:
          packages:
            - bash
      pipeline:
        - working-directory: components/${{range.key}}
        - uses: test/kwok/cluster
        - name: "Test ${{range.key}} functionality with KWOK"
          runs: |
            set -ex            
            # Generate CRDs if required
            if [ -d "config/crd/bases" ]; then
              kubectl apply -f config/crd/bases
            fi

            sleep 3

            /usr/bin/manager &
            pid=$!

            sleep 3
            kubectl create ns test-ns || true

            case "${{range.key}}" in
              notebook-controller)
                echo "Creating Notebook resource..."
            kubectl apply -n test-ns -f - <<EOF
            apiVersion: kubeflow.org/v1
            kind: Notebook
            metadata:
              name: notebook-sample-v1
            spec:
              template:
                spec:
                  containers:
                    - name: notebook-sample-v1
                      image: ghcr.io/kubeflow/kubeflow/notebook-servers/jupyter:latest
            EOF
                  sleep 3
                  kubectl get statefulset -n test-ns | grep test-notebook
                  ;;
              esac

              kill $pid

  - range: components
    name: "kubeflow-${{range.key}}"
    description: "kubeflow-${{range.value}}"
    pipeline:
      - uses: go/build
        with:
          packages: .
          modroot: components/${{range.key}}
          output: ${{range.value}}


  
  # - range: components
  #   name: "kubeflow-${{range.key}}-oci-compat"
  #   description: OCI compat for dapr-${{range.key}}
  #   dependencies:
  #     provides:
  #       - dapr-${{range.key}}-oci-compat=${{package.full-version}}
  #   pipeline:
  #     - runs: |
  #         mkdir -p "${{targets.subpkgdir}}"
  #         ln -sf /usr/bin/${{range.key}} ${{targets.subpkgdir}}/${{range.key}}
  #   test:
  #     pipeline:
  #       - runs: |
  #           stat /${{range.key}}

update:
  enabled: true
  github:
    identifier: kubeflow/kubeflow
    use-tag: true
    # There were some malformed early tags
    tag-filter: v1
    strip-prefix: v

test:
  pipeline:
    - uses: test/tw/ldd-check
