package:
  name: kuma-2.9
  version: "2.9.3"
  epoch: 1
  description: A multi-zone service mesh for containers, Kubernetes and VMs.
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - kuma=${{package.full-version}}

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kumahq/kuma
      tag: ${{package.version}}
      expected-commit: fbef9908b833fdb5487afdfba9cf902c075045e3

  - uses: patch
    with:
      patches: remove_envoy_version_check.patch

subpackages:
  - name: kumactl-${{vars.major-minor-version}}
    description: Kuma control plane command-line utility
    dependencies:
      provides:
        - kumactl=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./app/kumactl
          output: kumactl
          ldflags: |
            -X github.com/kumahq/kuma/pkg/version.version=${{package.version}}
            -X github.com/kumahq/kuma/pkg/version.gitTag=$(git name-rev --tags --name-only $(git rev-parse HEAD))
            -X github.com/kumahq/kuma/pkg/version.gitCommit=$(git rev-parse HEAD)
            -X github.com/kumahq/kuma/pkg/version.buildDate=$(date ${SOURCE_DATE_EPOCH:+ -d@${SOURCE_DATE_EPOCH}} "+%Y-%m-%dT%H:%M:%SZ")
            -X github.com/kumahq/kuma/pkg/version.Envoy=$(cat ./mk/dev.mk | grep "ENVOY_VERSION ?= " | sed "s/ENVOY_VERSION ?= //g")
    test:
      pipeline:
        - name: Test kumactl
          runs: |
            kumactl help
            kumactl version | grep ${{package.version}}

  - name: kuma-cp-${{vars.major-minor-version}}
    description: Kuma control plane
    dependencies:
      provides:
        - kuma-cp=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./app/kuma-cp
          output: kuma-cp
          ldflags: |
            -X github.com/kumahq/kuma/pkg/version.version=${{package.version}}
            -X github.com/kumahq/kuma/pkg/version.gitTag=$(git name-rev --tags --name-only $(git rev-parse HEAD))
            -X github.com/kumahq/kuma/pkg/version.gitCommit=$(git rev-parse HEAD)
            -X github.com/kumahq/kuma/pkg/version.buildDate=$(date ${SOURCE_DATE_EPOCH:+ -d@${SOURCE_DATE_EPOCH}} "+%Y-%m-%dT%H:%M:%SZ")
            -X github.com/kumahq/kuma/pkg/version.Envoy=$(cat ./mk/dev.mk | grep "ENVOY_VERSION ?= " | sed "s/ENVOY_VERSION ?= //g")
    test:
      pipeline:
        - name: Test kuma control plane
          runs: |
            kuma-cp help
            kuma-cp version | grep ${{package.version}}

  - name: kuma-dp-${{vars.major-minor-version}}
    description: Kuma data plane
    dependencies:
      provides:
        - kuma-dp=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./app/kuma-dp
          output: kuma-dp
          ldflags: |
            -X github.com/kumahq/kuma/pkg/version.version=${{package.version}}
            -X github.com/kumahq/kuma/pkg/version.gitTag=$(git name-rev --tags --name-only $(git rev-parse HEAD))
            -X github.com/kumahq/kuma/pkg/version.gitCommit=$(git rev-parse HEAD)
            -X github.com/kumahq/kuma/pkg/version.buildDate=$(date ${SOURCE_DATE_EPOCH:+ -d@${SOURCE_DATE_EPOCH}} "+%Y-%m-%dT%H:%M:%SZ")
            -X github.com/kumahq/kuma/pkg/version.Envoy=$(cat ./mk/dev.mk | grep "ENVOY_VERSION ?= " | sed "s/ENVOY_VERSION ?= //g")
    test:
      pipeline:
        - name: Test kuma data plane
          runs: |
            kuma-dp help
            kuma-dp version | grep ${{package.version}}

  - name: kuma-cni-${{vars.major-minor-version}}
    description: Kuma CNI plugin
    dependencies:
      provides:
        - kuma-cni=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./app/cni/cmd/kuma-cni
          output: kuma-cni
          ldflags: |
            -X github.com/kumahq/kuma/pkg/version.version=${{package.version}}
            -X github.com/kumahq/kuma/pkg/version.gitTag=$(git name-rev --tags --name-only $(git rev-parse HEAD))
            -X github.com/kumahq/kuma/pkg/version.gitCommit=$(git rev-parse HEAD)
            -X github.com/kumahq/kuma/pkg/version.buildDate=$(date ${SOURCE_DATE_EPOCH:+ -d@${SOURCE_DATE_EPOCH}} "+%Y-%m-%dT%H:%M:%SZ")
            -X github.com/kumahq/kuma/pkg/version.Envoy=$(cat ./mk/dev.mk | grep "ENVOY_VERSION ?= " | sed "s/ENVOY_VERSION ?= //g")
    test:
      pipeline:
        - name: Test kuma cni
          runs: |
            kuma-cni help
            kuma-cni version

  - name: kuma-install-cni-${{vars.major-minor-version}}
    description: Kuma CNI installer
    dependencies:
      provides:
        - kuma-install-cni=${{package.full-version}}
    pipeline:
      - uses: go/build
        with:
          packages: ./app/cni/cmd/install
          output: install-cni
          ldflags: |
            -X github.com/kumahq/kuma/pkg/version.version=${{package.version}}
            -X github.com/kumahq/kuma/pkg/version.gitTag=$(git name-rev --tags --name-only $(git rev-parse HEAD))
            -X github.com/kumahq/kuma/pkg/version.gitCommit=$(git rev-parse HEAD)
            -X github.com/kumahq/kuma/pkg/version.buildDate=$(date ${SOURCE_DATE_EPOCH:+ -d@${SOURCE_DATE_EPOCH}} "+%Y-%m-%dT%H:%M:%SZ")
            -X github.com/kumahq/kuma/pkg/version.Envoy=$(cat ./mk/dev.mk | grep "ENVOY_VERSION ?= " | sed "s/ENVOY_VERSION ?= //g")

  - name: kuma-cni-compat-${{vars.major-minor-version}}
    description: Kuma CNI compat
    dependencies:
      provides:
        - kuma-cni-compat=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/opt/cni/bin
          ln -sf /usr/bin/kuma-cni ${{targets.contextdir}}/opt/cni/bin/kuma-cni
          ln -sf /usr/bin/install-cni ${{targets.contextdir}}/install-cni
    test:
      environment:
        contents:
          packages:
            - kuma-cni
            - kuma-install-cni
      pipeline:
        - name: Test kuma cni compat
          runs: |
            test -x /install-cni
            test -x /opt/cni/bin/kuma-cni
            /opt/cni/bin/kuma-cni help
            /opt/cni/bin/kuma-cni version

update:
  enabled: true
  github:
    identifier: kumahq/kuma
    tag-filter: "2.9"
    use-tag: true
