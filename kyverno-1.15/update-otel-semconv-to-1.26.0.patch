From f68f4c5a8f9566613042b6a74d7b8fbf8c5c8bd4 Mon Sep 17 00:00:00 2001
From: Eoghan Conlon O'Neill <eoghan.conlononeill@chainguard.dev>
Date: Wed, 25 Sep 2024 14:20:27 -0600
Subject: [PATCH] Update otel semconv to 1.26.0

---
 pkg/metrics/metrics.go           |  2 +-
 pkg/tracing/config.go            |  2 +-
 pkg/tracing/helpers.go           |  4 ++--
 pkg/webhooks/handlers/metrics.go |  6 +++---
 pkg/webhooks/handlers/trace.go   | 11 ++++++-----
 5 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/pkg/metrics/metrics.go b/pkg/metrics/metrics.go
index 7498248e5..89016b8e0 100644
--- a/pkg/metrics/metrics.go
+++ b/pkg/metrics/metrics.go
@@ -18,7 +18,7 @@ import (
 	"go.opentelemetry.io/otel/metric"
 	sdkmetric "go.opentelemetry.io/otel/sdk/metric"
 	"go.opentelemetry.io/otel/sdk/resource"
-	semconv "go.opentelemetry.io/otel/semconv/v1.24.0"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
 	"k8s.io/client-go/kubernetes"
 )
 
diff --git a/pkg/tracing/config.go b/pkg/tracing/config.go
index f9a5b6c18..919290970 100644
--- a/pkg/tracing/config.go
+++ b/pkg/tracing/config.go
@@ -13,7 +13,7 @@ import (
 	"go.opentelemetry.io/otel/propagation"
 	"go.opentelemetry.io/otel/sdk/resource"
 	sdktrace "go.opentelemetry.io/otel/sdk/trace"
-	semconv "go.opentelemetry.io/otel/semconv/v1.24.0"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
 	"k8s.io/client-go/kubernetes"
 )
 
diff --git a/pkg/tracing/helpers.go b/pkg/tracing/helpers.go
index 57ff265be..a96fb8e20 100644
--- a/pkg/tracing/helpers.go
+++ b/pkg/tracing/helpers.go
@@ -6,7 +6,7 @@ import (
 
 	"go.opentelemetry.io/otel/attribute"
 	"go.opentelemetry.io/otel/codes"
-	semconv "go.opentelemetry.io/otel/semconv/v1.24.0"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
 	"go.opentelemetry.io/otel/trace"
 )
 
@@ -28,7 +28,7 @@ func SetHttpStatus(ctx context.Context, err error, code int) {
 	if err != nil {
 		span.RecordError(err)
 	}
-	span.SetAttributes(semconv.HTTPStatusCodeKey.Int(code))
+	span.SetAttributes(semconv.HTTPResponseStatusCodeKey.Int(code))
 	if code >= 400 {
 		span.SetStatus(codes.Error, http.StatusText(code))
 	} else {
diff --git a/pkg/webhooks/handlers/metrics.go b/pkg/webhooks/handlers/metrics.go
index bc10fab7b..0128d1036 100644
--- a/pkg/webhooks/handlers/metrics.go
+++ b/pkg/webhooks/handlers/metrics.go
@@ -12,7 +12,7 @@ import (
 	"go.opentelemetry.io/otel"
 	"go.opentelemetry.io/otel/attribute"
 	"go.opentelemetry.io/otel/metric"
-	semconv "go.opentelemetry.io/otel/semconv/v1.24.0"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
 )
 
 func (inner AdmissionHandler) WithMetrics(logger logr.Logger, metricsConfig config.MetricsConfiguration, attrs ...attribute.KeyValue) AdmissionHandler {
@@ -86,8 +86,8 @@ func (inner HttpHandler) withMetrics(logger logr.Logger, attrs ...attribute.KeyV
 		startTime := time.Now()
 		attributes := []attribute.KeyValue{
 			// semconv.HTTPHostKey.String(request.Host),
-			semconv.HTTPMethodKey.String(request.Method),
-			semconv.HTTPURLKey.String(request.RequestURI),
+			semconv.HTTPRequestMethodKey.String(request.Method),
+			semconv.URLFullKey.String(request.RequestURI),
 		}
 		attributes = append(attributes, attrs...)
 		if requestsMetric != nil {
diff --git a/pkg/webhooks/handlers/trace.go b/pkg/webhooks/handlers/trace.go
index 6083bbe02..350807141 100644
--- a/pkg/webhooks/handlers/trace.go
+++ b/pkg/webhooks/handlers/trace.go
@@ -9,7 +9,8 @@ import (
 	"github.com/go-logr/logr"
 	"github.com/kyverno/kyverno/pkg/tracing"
 	admissionutils "github.com/kyverno/kyverno/pkg/utils/admission"
-	semconv "go.opentelemetry.io/otel/semconv/v1.24.0"
+	"go.opentelemetry.io/otel/attribute"
+	semconv "go.opentelemetry.io/otel/semconv/v1.26.0"
 	"go.opentelemetry.io/otel/trace"
 )
 
@@ -23,10 +24,10 @@ func (inner HttpHandler) WithTrace(name string) HttpHandler {
 				inner(writer, request.WithContext(ctx))
 			},
 			trace.WithAttributes(
-				semconv.HTTPRequestContentLengthKey.Int64(request.ContentLength),
-				semconv.NetSockPeerAddrKey.String(tracing.StringValue(request.Host)),
-				semconv.HTTPMethodKey.String(tracing.StringValue(request.Method)),
-				semconv.HTTPURLKey.String(tracing.StringValue(request.RequestURI)),
+				attribute.Key("http.request.header.content-length").Int64(request.ContentLength),
+				semconv.NetworkPeerAddressKey.String(tracing.StringValue(request.Host)),
+				semconv.HTTPRequestMethodKey.String(tracing.StringValue(request.Method)),
+				semconv.URLFullKey.String(tracing.StringValue(request.RequestURI)),
 			),
 			trace.WithSpanKind(trace.SpanKindServer),
 		)
-- 
2.46.1

