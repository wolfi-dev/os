package:
  name: kyverno-policy-reporter-ui
  version: "2.2.1"
  epoch: 0
  description: Policy Reporter UI
  copyright:
    - license: Apache-2.0
  checks:
    disabled:
      # KO_DATA is inside /var/run/ko so this checks needs to be disabled.
      - tempdir

environment:
  contents:
    packages:
      - bash
      - build-base
      - bun
      - busybox
      - ca-certificates-bundle
      - curl
      - git
      - go
      - node-gyp
      - nodejs-18
      - openssl
      - openssl-provider-legacy
      - python-3.11
      - wolfi-baselayout

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kyverno/policy-reporter-ui
      tag: v${{package.version}}
      expected-commit: f3d080aaa98b74e936cb94b9eced691020d439ba

  - working-directory: frontend
    runs: |
      bun install
      bun run generate
      mkdir -p ${{targets.contextdir}}/var/run/ko/templates
      cp -R ./dist ${{targets.contextdir}}/var/run/ko/ui

  - uses: go/build
    with:
      modroot: backend
      packages: .
      output: policyreporter-ui

  - name: copy more frontend requirements
    runs: |
      cp -R backend/templates ${{targets.contextdir}}/var/run/ko/

subpackages:
  - name: kyverno-policy-reporter-ui-compat
    description: compatibility symlinks package for policyreporter-ui Dockerfile
    pipeline:
      - runs: |
          # Symlink the binary from usr/bin to /ko-app/
          mkdir -p ${{targets.contextdir}}/ko-app
          ln -sf /usr/bin/policyreporter-ui ${{targets.contextdir}}/ko-app/policyreporter-ui

update:
  enabled: true
  # There are tags with alpha and helm charts that break our update block.
  ignore-regex-patterns:
    - 'alpha'
    - 'policy-reporter-ui-chart-'
  git:
    strip-prefix: v
    tag-filter-prefix: v

test:
  environment:
    contents:
      packages:
        - curl
    environment:
      KO_DATA_PATH: "/var/run/ko"
  pipeline:
    - runs: |
        policyreporter-ui --help
    - name: Run and test ${{package.name}}
      uses: test/daemon-check-output
      with:
        start: /usr/bin/policyreporter-ui run
        timeout: 30
        expected_output: |
          register UI
          /var/run/ko/ui
          Server starts
        # Can't use default error string set because of this log line `[ERROR] failed to load config file: open config.yaml: no such file or directory`.
        error_strings: |
          FAIL
          FATAL
        post: |
          #!/bin/sh -e
          set -o pipefail
          curl -s localhost:8080 | grep -i "Policy Reporter UI"
          curl -s localhost:8080 | grep -i "html"
