package:
  name: langfuse-worker
  version: 3.51.2
  epoch: 0
  description: LLM engineering platform that can be self-hosted
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - glibc
      - libgcc
      - libstdc++
      - nodejs

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - corepack
      - npm
      - scanelf

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/langfuse/langfuse.git
      tag: v${{package.version}}
      expected-commit: ecd3afb4c9fc6e7787da30c5c5ee8e1d82901f67

  - runs: |
      npm install turbo@^1.13.4 --global
      corepack enable
      corepack prepare pnpm@9.5.0 --activate
      turbo prune --scope=worker --docker
      mkdir -p "${{targets.destdir}}"/app
      cp out/pnpm-lock.yaml "${{targets.destdir}}"/app/pnpm-lock.yaml
      cp out/pnpm-workspace.yaml "${{targets.destdir}}"/app/pnpm-workspace.yaml
      cp -r out/json/* "${{targets.destdir}}"/app/
      pnpm install --frozen-lockfile
      cp -rL node_modules "${{targets.destdir}}"/app/
      cp -r out/full/* "${{targets.destdir}}"/app/
      turbo run build --filter=worker...
      cp -r worker/ "${{targets.destdir}}"/app/
      chmod +x "${{targets.destdir}}"/app/worker/entrypoint.sh


      cd "${{targets.destdir}}/app"
      if [ "${{build.arch}}" = "aarch64" ]; then
      # Remove x86_64 binaries
        scanelf -R -n . | awk '/x86_64/ {print $NF}' | xargs rm -rf || true
      else
       # Remove aarch64 binaries
        scanelf -R -n . | awk '/aarch64/ {print $NF}' | xargs rm -rf || true
        fi

test:
  environment:
    contents:
      packages:
        - nodejs
        - dumb-init
        - busybox
        - curl
        - procps
    environment:
      DATABASE_URL: "postgresql://localhost:5432/test"
      NODE_ENV: "test"
      PORT: "3030"
      REDIS_HOST: "localhost"
      REDIS_PORT: "6379"
      NEXT_PUBLIC_LANGFUSE_CLOUD_REGION: ""
  pipeline:
    - name: "Verify entrypoint script exists and is executable"
      working-directory: /app
      runs: |
        test -f ./worker/entrypoint.sh
        test -x ./worker/entrypoint.sh
        echo "âœ“ Entrypoint script exists and is executable"
    - name: "Test worker startup and health check"
      working-directory: /app
      runs: |
        # Start the worker with dumb-init
        dumb-init -- ./worker/entrypoint.sh node worker/dist/index.js &
        WORKER_PID=$!

update:
  enabled: true
  github:
    identifier: langfuse/langfuse
    strip-prefix: v
    use-tag: true
