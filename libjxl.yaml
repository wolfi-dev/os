#nolint:valid-pipeline-git-checkout-tag
package:
  name: libjxl
  version: "0.10.4_git20251006"
  epoch: 0
  description: JPEG XL image format reference implementation
  copyright:
    - license: BSD-3-Clause
  dependencies:
    runtime:
      - brotli-dev

environment:
  contents:
    packages:
      - brotli-dev
      - build-base
      - clang
      - cmake
      - giflib-dev
      - highway-dev
      - libjpeg-turbo-dev
      - libpng-dev
      - lld
      - ninja
      - pkgconf
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/libjxl/libjxl
      branch: main
      expected-commit: ffd01c988191d24d1e857743bcb2eae3cecbac27
      recurse-submodules: true

  - uses: cmake/configure
    with:
      opts: |
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_TESTING=OFF

  - uses: cmake/build

  - uses: cmake/install

  - name: Remove brotli files which are provided by brotli-dev
    runs: |
      rm -rf "${{targets.destdir}}"/usr/lib/libbrotli*
      rm -rf "${{targets.destdir}}"/usr/bin/brotli*

  - uses: strip

subpackages:
  - name: libjxl-dev
    description: libjxl development files
    pipeline:
      - uses: split/dev
      - runs: |
          # It conflicts with brotli-dev, so remove the file and provide it via brotli-dev
          rm -rf "${{targets.subpkgdir}}"/usr/include/brotli
          rm -rf "${{targets.subpkgdir}}"/usr/lib/libbrotli*
          rm -rf "${{targets.subpkgdir}}"/usr/lib/pkgconfig/libbrotli*
    dependencies:
      runtime:
        - libjxl
        - brotli-dev
    test:
      pipeline:
        - uses: test/pkgconf

  - name: libjxl-tools
    description: JPEG XL command-line tools (cjxl, djxl, benchmark_xl)
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}/usr/bin"
          for b in cjxl djxl benchmark_xl cjpegli djpegli jxlinfo jxltran; do
            if [ -x "${{targets.destdir}}/usr/bin/$b" ]; then
              mv "${{targets.destdir}}/usr/bin/$b" "${{targets.subpkgdir}}/usr/bin/"
            fi
          done
    test:
      pipeline:
        - runs: |
            for b in cjxl djxl benchmark_xl cjpegli djpegli jxlinfo jxltran; do
              $b --help
            done

update:
  enabled: true
  git: {}
  schedule:
    period: weekly
    reason: This project doesn't do releases for long time and everything is commit based

test:
  pipeline:
    - uses: test/tw/ldd-check
