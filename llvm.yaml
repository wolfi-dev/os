package:
  name: llvm
  version: "19.1.7"
  epoch: 7
  description: Low-level virtual machine ${{vars.major-version}} - core frameworks
  copyright:
    - license: Apache-2.0
  resources:
    cpu: 32
    memory: 64Gi
  dependencies:
    # TODO(@EyeCantCU): Phase out virtual provides for latest LLVM
    # and Clang by fixing packages that depend on them
    provides:
      - ${{package.name}}-${{vars.major-version}}=${{package.full-version}}

vars:
  llvm-prefix: "/usr/lib/llvm-19"
  clang-prefix: "/usr/lib/llvm-19/lib/clang/19"
  py-version: 3.13

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version
  - from: ${{package.version}}
    match: ^(\d+\.\d+).*
    replace: $1
    to: major-minor-version

environment:
  contents:
    packages:
      - binutils-dev
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - git
      - help2man
      - libffi-dev
      - libxml2-dev
      - openssf-compiler-options
      - pkgconf
      - python-3.13
      - samurai
      - wolfi-base
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/llvm/llvm-project
      tag: llvmorg-${{package.version}}
      expected-commit: cd708029e0b2869e80abe31ddb175f7c35361f90

  - runs: |
      ffi_include_dir="$(pkg-config --cflags-only-I libffi | sed 's|^-I||g')"
      python_version=$(python${{vars.py-version}} -V | sed 's/.*\([0-9]\{1,\}\.[0-9]\{1,\}\)\..*/\1/')

      cmake -B output -G Ninja -S llvm -Wno-dev \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=${{vars.llvm-prefix}} \
        -DCMAKE_PREFIX_PATH=${{vars.llvm-prefix}} \
        -DENABLE_LINKER_BUILD_ID=ON \
        -DFFI_INCLUDE_DIR="${ffi_include_dir}" \
        -DLLVM_BINUTILS_INCDIR=/usr/include \
        -DLLVM_BUILD_DOCS=OFF \
        -DLLVM_BUILD_EXAMPLES=OFF \
        -DLLVM_BUILD_EXTERNAL_COMPILER_RT=ON \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_BUILD_TESTS=OFF \
        -DLLVM_INCLUDE_TESTS=OFF \
        -DLLVM_DEFAULT_TARGET_TRIPLE="${{build.arch}}-unknown-linux-gnu" \
        -DLLVM_ENABLE_ASSERTIONS=OFF \
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_ENABLE_LIBCXX=ON \
        -DLLVM_ENABLE_PIC=ON \
        -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools-extra" \
        -DLLVM_ENABLE_RUNTIMES="compiler-rt;libcxx;libcxxabi;libunwind" \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_ENABLE_SPHINX=OFF \
        -DLLVM_ENABLE_TERMINFO=ON \
        -DLLVM_ENABLE_ZLIB=ON \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_HOST_TRIPLE="${{build.arch}}-unknown-linux-gnu" \
        -DLLVM_INCLUDE_EXAMPLES=OFF \
        -DLLVM_LINK_LLVM_DYLIB=ON \
        -DLLVM_APPEND_VC_REV=OFF \
        -DLLVM_INCLUDE_BENCHMARKS=OFF \
        -DCLANG_CONFIG_FILE_SYSTEM_DIR=/etc/clang-${{vars.major-version}} \
        -DCLANG_ENABLE_ARCMT=ON \
        -DCLANG_ENABLE_STATIC_ANALYZER=ON \
        -DCLANG_LINK_CLANG_DYLIB=ON \
        -DCLANG_PLUGIN_SUPPORT=ON \
        -DCLANG_PYTHON_BINDINGS_VERSIONS="$python_version" \
        -DCLANG_VENDOR=Wolfi \
        -DLIBCLANG_BUILD_STATIC=ON \
        -DLIBUNWIND_HAS_NODEFAULTLIBS_FLAG=OFF \
        -DCOMPILER_RT_INCLUDE_TESTS=OFF \
        -DCOMPILER_RT_BUILD_SANITIZERS=ON \
        -DCOMPILER_RT_INSTALL_PATH="${{vars.clang-prefix}}" \
        -DCOMPILER_RT_BUILD_GWP_ASAN=OFF

      cmake --build output --target llvm-tblgen
      cmake --build output --target clang-tblgen

  - uses: cmake/build

  - uses: cmake/install

  - runs: |
      mkdir -p ${{targets.contextdir}}/usr/lib/cmake
      ln -s ${{vars.llvm-prefix}}/lib/cmake/llvm ${{targets.contextdir}}/usr/lib/cmake/llvm

  - uses: strip

subpackages:
  - name: libLLVM
    description: LLVM ${{vars.major-version}} runtime library
    dependencies:
      provides:
        - libLLVM-${{vars.major-version}}=${{package.full-version}}
    pipeline:
      - runs: |
          soname="libLLVM.so.${{vars.major-minor-version}}"
          sonamefull="libLLVM-${{vars.major-version}}.so"
          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/$soname ${{targets.contextdir}}/usr/lib/
          ln -s $soname ${{targets.contextdir}}/usr/lib/$sonamefull
          ln -sf ../../$soname ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/$soname
          ln -sf ../../$soname ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/$sonamefull
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: ${{subpkg.name}}

  - name: libclang-cpp
    description: Clang ${{vars.major-version}} runtime library
    dependencies:
      provides:
        - libclang-cpp-${{vars.major-version}}=${{package.full-version}}
      runtime:
        - libLLVM=${{package.full-version}}
    pipeline:
      - runs: |
          sonamefull="libclang-cpp.so.${{vars.major-minor-version}}"
          mkdir -p ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/$sonamefull ${{targets.contextdir}}/usr/lib/

  - name: compiler-rt
    description: Clang ${{vars.major-version}} compiler runtime
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/${{vars.clang-prefix}}/bin
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/bin/hwasan_symbolize ${{targets.contextdir}}/${{vars.clang-prefix}}/bin/

          mkdir -p ${{targets.contextdir}}/${{vars.clang-prefix}}/lib/${{build.arch}}-unknown-linux-gnu
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/*clang_rt* \
            ${{targets.contextdir}}/${{vars.clang-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/*orc_rt* \
            ${{targets.contextdir}}/${{vars.clang-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/

          mkdir -p ${{targets.contextdir}}/${{vars.clang-prefix}}/share
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/share/*abilist* ${{targets.contextdir}}/${{vars.clang-prefix}}/share/
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/share/*ignorelist* ${{targets.contextdir}}/${{vars.clang-prefix}}/share/

          mkdir -p ${{targets.contextdir}}/${{vars.clang-prefix}}/include
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/include/fuzzer ${{targets.contextdir}}/${{vars.clang-prefix}}/include/
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/include/orc ${{targets.contextdir}}/${{vars.clang-prefix}}/include/
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/include/profile ${{targets.contextdir}}/${{vars.clang-prefix}}/include/
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/include/sanitizer ${{targets.contextdir}}/${{vars.clang-prefix}}/include/
          mv ${{targets.destdir}}/${{vars.clang-prefix}}/include/xray ${{targets.contextdir}}/${{vars.clang-prefix}}/include/

  - name: clang-analyzer
    description: Clang ${{vars.major-version}} analyzer
    dependencies:
      provides:
        - clang-${{vars.major-version}}-analyzer=${{package.full-version}}
      runtime:
        - clang=${{package.full-version}}
        - perl
        - py3-clang=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/scan* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/analyze-build* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/intercept-build* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/

          mkdir -p ${{targets.contextdir}}/usr/bin
          for path in ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/*; do
            name=${path##*/}
            ln -s ../lib/llvm-${{vars.major-version}}/bin/$name ${{targets.contextdir}}/usr/bin/$name
          done

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/libexec
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/libexec/*-analyzer* ${{targets.contextdir}}/${{vars.llvm-prefix}}/libexec/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/libexec/analyze-* ${{targets.contextdir}}/${{vars.llvm-prefix}}/libexec/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/libexec/intercept-* ${{targets.contextdir}}/${{vars.llvm-prefix}}/libexec/

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/share
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/scan-* ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/libear* ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/
    test:
      pipeline:
        - runs: |
            analyze-build --help
            intercept-build --help
            scan-build --help
            scan-view --help

  - name: clang-extras
    description: Clang ${{vars.major-version}} extras
    dependencies:
      provides:
        - clang-${{vars.major-version}}-extras=${{package.full-version}}
      runtime:
        - clang=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-apply-replacements* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-change-namespace* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-check* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-doc* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-extdef-mapping* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-format* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-include-fixer* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-move* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-offload-bundler* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-offload-packager* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-query* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-refactor* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-rename* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-reorder-fields* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-repl* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-scan-deps* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clang-tidy* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/clangd* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/c-index-test* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/diagtool* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/find-all-symbols* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/git-clang-format* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/hmaptool* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/modularize* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/pp-trace* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/run-clang-tidy* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/

          mkdir -p ${{targets.contextdir}}/usr/bin
          for path in ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/*; do
            name=${path##*/}
            ln -s ../lib/llvm-${{vars.major-version}}/bin/$name ${{targets.contextdir}}/usr/bin/$name
          done

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/clang
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/clang/clang-include-fixer* ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/clang/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/clang/clang-format*.py ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/clang/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/clang/*clang-tidy* ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/clang/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/clang/run-find-all-symbols.py ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/clang/

          mkdir -p ${{targets.contextdir}}/usr/share/emacs/site-lisp
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/clang/clang-*.el \
            ${{targets.contextdir}}/usr/share/emacs/site-lisp
    test:
      pipeline:
        - runs: |
            clang-apply-replacements --version
            clang-apply-replacements --help
            clang-change-namespace --version
            clang-change-namespace --help
            clang-check --version
            clang-check --help
            clang-doc --version
            clang-doc --help
            clang-extdef-mapping --version
            clang-extdef-mapping --help
            clang-format --version
            clang-format --help
            clang-include-fixer --version
            clang-include-fixer --help
            clang-move --version
            clang-move --help
            clang-offload-bundler --version
            clang-offload-bundler --help
            clang-offload-packager --version
            clang-offload-packager --help
            clang-query --version
            clang-query --help
            clang-refactor --version
            clang-refactor --help
            clang-rename --version
            clang-rename --help
            clang-reorder-fields --version
            clang-reorder-fields --help
            clang-repl --version
            clang-repl --help
            clang-scan-deps --version
            clang-scan-deps --help
            clang-tidy --version
            clang-tidy --help
            clangd --version
            clangd --help
            find-all-symbols --version
            find-all-symbols --help
            modularize --version
            modularize --help
            pp-trace --version
            pp-trace --help

  - name: py3-clang
    description: Clang ${{vars.major-version}} Python bindings
    dependencies:
      provides:
        - py3-clang-${{vars.major-version}}=${{package.full-version}}
      runtime:
        - libLLVM=${{package.full-version}}
        - libclang-cpp=${{package.full-version}}
        - python-${{vars.py-version}}
    pipeline:
      - runs: |
          sitedir=$(python3 -c "import site; print(site.getsitepackages()[0])")

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/python* ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/clang
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/clang/clang-rename.py ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/clang/

          mkdir -p ${{targets.contextdir}}/"$sitedir"
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/libscanbuild ${{targets.contextdir}}/"$sitedir"
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{vars.py-version}}
            import: libscanbuild

  - name: clang
    description: C language family frontend for LLVM ${{vars.major-version}}
    dependencies:
      provides:
        - clang-${{vars.major-version}}=${{package.full-version}}
      runtime:
        - gcc
        - glibc-dev
        - libLLVM=${{package.full-version}}
        - libclang-cpp=${{package.full-version}}
        - llvm=${{package.full-version}}
        - openssf-compiler-options
    pipeline:
      - runs: |
          help2man --no-info \
            --source "Wolfi" \
            --name "Wolfi Clang ${{package.version}}-r${{package.epoch}}" \
            --version-string "${{package.version}}-r${{package.epoch}}" \
            --help-option "--help-hidden" \
            ./output/bin/clang > clang.1

          mkdir -p ${{targets.contextdir}}/usr/lib
          install -Dm644 output/lib/libclang.a -t ${{targets.contextdir}}/usr/lib/

          mkdir -p ${{targets.contextdir}}/usr/share/man/man1
          install -Dm644 clang.1 -t ${{targets.contextdir}}/usr/share/man/man1/

          mkdir -p ${{targets.contextdir}}/usr/share/bash-completion/completions
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/clang/bash-autocomplete.sh \
            ${{targets.contextdir}}/usr/share/bash-completion/completions/clang

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/*clang* ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/amdgpu-arch ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/nvptx-arch ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/

          mkdir -p ${{targets.contextdir}}/usr/bin
          for path in ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/*; do
            name=${path##*/}
            ln -s ../lib/llvm-${{vars.major-version}}/bin/$name ${{targets.contextdir}}/usr/bin/$name
          done

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/*clang* ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/libfindAllSymbols.a ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/cmake
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/cmake/*clang* ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/cmake/

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/share
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/*clang* ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/

          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/include
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/include/*clang* ${{targets.contextdir}}/${{vars.llvm-prefix}}/include/

          mkdir -p ${{targets.contextdir}}/usr/lib/clang
          ln -s ../llvm-${{vars.major-version}}/lib/clang/${{vars.major-version}} ${{targets.contextdir}}/usr/lib/clang/${{vars.major-version}}

          # Make libclang public
          soname="libclang.so.${{vars.major-minor-version}}"
          sonamefull="libclang.so.${{package.version}}"

          # Move from private Clang lib to public lib
          mkdir -p ${{targets.contextdir}}/usr/lib/
          mv ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/$sonamefull ${{targets.contextdir}}/usr/lib/

          # Correct symlinks to libclang
          ln -s $sonamefull ${{targets.contextdir}}/usr/lib/$soname
          ln -sf ../../$sonamefull ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/$soname
          ln -sf ../../$sonamefull ${{targets.contextdir}}/${{vars.llvm-prefix}}/lib/$sonamefull
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: ${{subpkg.name}}
        - uses: test/compiler-hardening-check
          with:
            cc: clang-${{vars.major-version}}
        - runs: |
            amdgpu-arch --version
            amdgpu-arch --help
            clang --version
            clang --help
            clang++ --version
            clang++ --help
            clang-${{vars.major-version}} --version
            clang-${{vars.major-version}} --help
            clang-cl --version
            clang-cpp --version
            clang-cpp --help
            clang-include-cleaner --version
            clang-include-cleaner --help
            clang-linker-wrapper --version
            clang-linker-wrapper --help
            clang-nvlink-wrapper --help
            clang-pseudo --version
            clang-pseudo --help
            nvptx-arch --version
            nvptx-arch --help

  - name: lld
    description: LLVM linker
    dependencies:
      provides:
        - llvm-lld-15=${{package.full-version}}
        - llvm-lld-16=${{package.full-version}}
        - llvm-lld-17=${{package.full-version}}
        - llvm-lld-18=${{package.full-version}}
        - llvm-lld-19=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/bin
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/lld* ${{targets.contextdir}}/usr/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/*lld ${{targets.contextdir}}/usr/bin/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/wasm-ld ${{targets.contextdir}}/usr/bin/
    test:
      pipeline:
        - runs: |
            ld.lld --version
            ld64.lld --version
            lld-link --version
            wasm-ld --version
            ld.lld --help
            ld64.lld --help
            wasm-ld --help

  - name: lld-static
    description: LLVM linker static libraries
    dependencies:
      provides:
        - llvm-lld-15-static=${{package.full-version}}
        - llvm-lld-16-static=${{package.full-version}}
        - llvm-lld-17-static=${{package.full-version}}
        - llvm-lld-18-static=${{package.full-version}}
        - llvm-lld-19-static=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/*lld*.a ${{targets.contextdir}}/usr/lib/

  - name: lld-dev
    description: LLVM linker development files
    dependencies:
      provides:
        - llvm-lld-15-dev=${{package.full-version}}
        - llvm-lld-16-dev=${{package.full-version}}
        - llvm-lld-17-dev=${{package.full-version}}
        - llvm-lld-18-dev=${{package.full-version}}
        - llvm-lld-19-dev=${{package.full-version}}
      runtime:
        - lld=${{package.full-version}}
        - lld-static=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/include
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/include/lld ${{targets.contextdir}}/usr/include/

          mkdir -p ${{targets.contextdir}}/usr/lib/cmake
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/cmake/lld ${{targets.contextdir}}/usr/lib/cmake/

  - name: libcxxabi1
    description: LLVM libc++ ABI 1
    dependencies:
      provider-priority: ${{vars.major-version}}
      provides:
        - llvm-libcxxabi-18=${{package.full-version}}
        - llvm-libcxxabi-19=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libc++abi*.so.* ${{targets.contextdir}}/usr/lib/

  - name: libcxx1
    description: LLVM libc++ 1
    dependencies:
      provider-priority: ${{vars.major-version}}
      provides:
        - llvm-libcxx-18=${{package.full-version}}
        - llvm-libcxx-19=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libc++*.so.* ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libc++.modules.json ${{targets.contextdir}}/usr/lib/

          mkdir -p ${{targets.contextdir}}/usr/share
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/share/libc++ ${{targets.contextdir}}/usr/share/

  - name: libcxx1-static
    description: Static library for LLVM libc++ 1
    dependencies:
      provides:
        - llvm-libcxx-18-static=${{package.full-version}}
        - llvm-libcxx-19-static=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libc++*.a ${{targets.contextdir}}/usr/lib/

  - name: libcxx1-dev
    description: Development files for LLVM libc++ 1
    dependencies:
      provides:
        - llvm-libcxx-18-dev=${{package.full-version}}
        - llvm-libcxx-19-dev=${{package.full-version}}
      runtime:
        - libcxx1=${{package.full-version}}
        - libcxx1-static=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mkdir -p ${{targets.contextdir}}/usr/include
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libc++*.so ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/include/c++ ${{targets.contextdir}}/usr/include/
          cp -r ${{targets.destdir}}/${{vars.llvm-prefix}}/include/${{build.arch}}-unknown-linux-gnu/c++/v1/* ${{targets.contextdir}}/usr/include/c++/v1/
          rm -r ${{targets.destdir}}/${{vars.llvm-prefix}}/include/${{build.arch}}-unknown-linux-gnu/c++

  - name: ${{package.name}}-libunwind1
    description: LLVM libunwind 1
    dependencies:
      provider-priority: ${{vars.major-version}}
      provides:
        - ${{package.name}}-libunwind-15=${{package.full-version}}
        - ${{package.name}}-libunwind-16=${{package.full-version}}
        - ${{package.name}}-libunwind-17=${{package.full-version}}
        - ${{package.name}}-libunwind-18=${{package.full-version}}
        - ${{package.name}}-libunwind-19=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libunwind.so.* ${{targets.contextdir}}/usr/lib/

  - name: ${{package.name}}-libunwind1-static
    description: Static library for LLVM libunwind 1
    dependencies:
      provides:
        - ${{package.name}}-libunwind-15-static=${{package.full-version}}
        - ${{package.name}}-libunwind-16-static=${{package.full-version}}
        - ${{package.name}}-libunwind-17-static=${{package.full-version}}
        - ${{package.name}}-libunwind-18-static=${{package.full-version}}
        - ${{package.name}}-libunwind-19-static=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libunwind.a ${{targets.contextdir}}/usr/lib/

  - name: ${{package.name}}-libunwind1-dev
    description: Development files for LLVM libunwind 1
    dependencies:
      provides:
        - ${{package.name}}-libunwind-15-dev=${{package.full-version}}
        - ${{package.name}}-libunwind-16-dev=${{package.full-version}}
        - ${{package.name}}-libunwind-17-dev=${{package.full-version}}
        - ${{package.name}}-libunwind-18-dev=${{package.full-version}}
        - ${{package.name}}-libunwind-19-dev=${{package.full-version}}
      runtime:
        - ${{package.name}}-libunwind1=${{package.full-version}}
        - ${{package.name}}-libunwind1-static=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib
          mkdir -p ${{targets.contextdir}}/usr/include/mach-o
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/lib/${{build.arch}}-unknown-linux-gnu/libunwind.so ${{targets.contextdir}}/usr/lib/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/include/*unwind* ${{targets.contextdir}}/usr/include/
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/include/mach-o/*unwind* ${{targets.contextdir}}/usr/include/mach-o/

  - name: ${{package.name}}-cmake
    description: CMake macros for LLVM ${{vars.major-version}}
    dependencies:
      provides:
        - ${{package.name}}-cmake-${{vars.major-version}}=${{package.full-version}}
      runtime:
        - cmake
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/cmake/Modules
          cp -r ./cmake/Modules/* ${{targets.contextdir}}/${{vars.llvm-prefix}}/share/cmake/Modules/

  - name: ${{package.name}}-dev
    description: Development headers for LLVM ${{vars.major-version}}
    dependencies:
      provides:
        - ${{package.name}}-${{vars.major-version}}-dev=${{package.full-version}}
      runtime:
        - ${{package.name}}=${{package.full-version}}
    pipeline:
      - uses: split/dev
      - runs: |
          mkdir -p ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin
          mv ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/llvm-config ${{targets.contextdir}}/${{vars.llvm-prefix}}/bin/

          mkdir -p ${{targets.contextdir}}/usr/bin
          ln -s ../lib/llvm-${{vars.major-version}}/bin/llvm-config ${{targets.contextdir}}/usr/bin/llvm-config

          # Symlink binaries to /usr/bin in main LLVM package
          # Must come last after we've split away everything else
          mkdir -p ${{targets.destdir}}/usr/bin
          for path in ${{targets.destdir}}/${{vars.llvm-prefix}}/bin/*; do
            name=${path##*/}
            ln -s ../lib/llvm-${{vars.major-version}}/bin/$name ${{targets.destdir}}/usr/bin/$name
          done
    test:
      pipeline:
        - uses: test/tw/ldd-check
        - runs: |
            llvm-config --version
            llvm-config --help

update:
  enabled: true
  ignore-regex-patterns:
    - 'init'
    - 'rc'
  github:
    identifier: llvm/llvm-project
    strip-prefix: llvmorg-
    use-tag: true

test:
  pipeline:
    - name: llvm interpreter version test
      runs: |
        lli --version | grep ${{package.version}}
        FileCheck --version
        FileCheck --help
        bugpoint --version
        bugpoint --help
        count --version
        count --help
        dsymutil --version
        dsymutil --help
        llc --help
        lli --help
        llvm-addr2line --version
        llvm-addr2line --help
        llvm-ar --version
        llvm-ar --help
        llvm-as --version
        llvm-as --help
        llvm-bcanalyzer --version
        llvm-bcanalyzer --help
        llvm-bitcode-strip --version
        llvm-bitcode-strip --help
        llvm-cat --version
        llvm-cat --help
        llvm-cfi-verify --version
        llvm-cfi-verify --help
        llvm-cov --version
        llvm-cov --help
        llvm-cvtres -h
        llvm-cxxdump --version
        llvm-cxxdump --help
        llvm-cxxfilt --version
        llvm-cxxfilt --help
        llvm-cxxmap --version
        llvm-cxxmap --help
        llvm-debuginfo-analyzer --version
        llvm-debuginfo-analyzer --help
        llvm-debuginfod --help
        llvm-debuginfod-find --version
        llvm-debuginfod-find --help
        llvm-diff --version
        llvm-diff --help
        llvm-dis --version
        llvm-dis --help
        llvm-dwarfdump --version
        llvm-dwarfdump --help
        llvm-dwarfutil --version
        llvm-dwarfutil --help
        llvm-dwp --version
        llvm-dwp --help
        llvm-exegesis --version
        llvm-exegesis --help
        llvm-extract --version
        llvm-extract --help
        llvm-gsymutil --version
        llvm-gsymutil --help
        llvm-ifs --version
        llvm-ifs --help
        llvm-install-name-tool --version
        llvm-install-name-tool --help
        llvm-jitlink --version
        llvm-jitlink --help
        llvm-lib --version
        llvm-lib --help
        llvm-libtool-darwin --version
        llvm-libtool-darwin --help
        llvm-link --version
        llvm-link --help
        llvm-lipo --version
        llvm-lipo --help
        llvm-lto --version
        llvm-lto --help
        llvm-mc --version
        llvm-mc --help
        llvm-mca --version
        llvm-mca --help
        llvm-ml --version
        llvm-ml --help
        llvm-modextract --version
        llvm-modextract --help
        llvm-mt -h
        llvm-nm --version
        llvm-nm --help
        llvm-objcopy --version
        llvm-objcopy --help
        llvm-objdump --version
        llvm-objdump --help
        llvm-opt-report --version
        llvm-opt-report --help
        llvm-otool --version
        llvm-otool --help
        llvm-pdbutil --version
        llvm-pdbutil --help
        llvm-profdata --version
        llvm-profdata --help
        llvm-profgen --version
        llvm-profgen --help
        llvm-ranlib --version
        llvm-ranlib --help
        llvm-rc -h
        llvm-readelf --version
        llvm-readelf --help
        llvm-readobj --version
        llvm-readobj --help
        llvm-readtapi --version
        llvm-readtapi --help
        llvm-reduce --version
        llvm-reduce --help
        llvm-remarkutil --version
        llvm-remarkutil --help
        llvm-rtdyld --version
        llvm-rtdyld --help
        llvm-sim --version
        llvm-sim --help
        llvm-size --version
        llvm-size --help
        llvm-split --version
        llvm-split --help
        llvm-stress --version
        llvm-stress --help
        llvm-strings --version
        llvm-strings --help
        llvm-strip --version
        llvm-strip --help
        llvm-symbolizer --version
        llvm-symbolizer --help
        llvm-tblgen --version
        llvm-tblgen --help
        llvm-tli-checker version
        llvm-tli-checker --help
        llvm-undname --version
        llvm-undname --help
        llvm-windres --version
        llvm-windres --help
        llvm-xray --version
        llvm-xray --help
        obj2yaml --version
        obj2yaml --help
        opt --version
        opt --help
        reduce-chunk-list --version
        reduce-chunk-list --help
        sancov --version
        sancov --help
        sanstats --version
        sanstats --help
        split-file --version
        split-file --help
        verify-uselistorder --version
        verify-uselistorder --help
        yaml-bench --version
        yaml-bench --help
        yaml2obj --version
        yaml2obj --help
    - name: llvm compiler version test
      runs: |
        llc --version | grep ${{package.version}}
    - name: llvm interpreter test
      runs: |
        cat <<EOF > helloWorld.ll
        ; Copied directly from the documentation
        ; Declare the string constant as a global constant.
        @.str = private unnamed_addr constant [13 x i8] c"hello world\0A\00"

        ; External declaration of the puts function
        declare i32 @puts(i8* nocapture) nounwind

        ; Definition of main function
        define i32 @main() { ; i32()*
            ; Convert [13 x i8]* to i8  *...
            %cast210 = getelementptr [13 x i8],[13 x i8]* @.str, i64 0, i64 0

            ; Call puts function to write out the string to stdout.
            call i32 @puts(i8* %cast210)
            ret i32 0
        }

        ; Named metadata
        !0 = !{i32 42, null, !"string"}
        !foo = !{!0}
        EOF
        lli helloWorld.ll | grep "hello world" || exit 1
        llc helloWorld.ll
        cat helloWorld.s | grep "hello world" || exit 1
    - uses: test/tw/ldd-check
