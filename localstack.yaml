package:
  name: localstack
  version: 4.0.3
  epoch: 0
  description: A fully functional local AWS cloud stack. Develop and test your cloud & Serverless apps offline
  copyright:
    - license: Apache-2.0
    - license: LicenseRef-LICENSE
      license-path: LICENSE.txt
    - license: LicenseRef-EULA
      license-path: docs/end_user_license_agreement/README.md
  dependencies:
    runtime:
      - binutils
      - ca-certificates-bundle
      - corepack
      - coreutils
      - curl
      - git
      - gnupg
      - gnutar
      - groff
      - iproute2
      - iputils
      - libatomic
      - libexpat1
      # pixz
      - make
      - nodejs #-18
      - npm
      - nss-passwords
      - openjdk-11-default-jvm
      - openssl
      - procps
      - unzip
      - xz
      - zip

vars:
  py-version: 3.11

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - nodejs-18
      - npm
      - openssf-compiler-options
      - py${{vars.py-version}}-build
      - py${{vars.py-version}}-pip
      - py${{vars.py-version}}-pytest
      - py${{vars.py-version}}-tz
      - python-${{vars.py-version}}
      - tzdata
      - uv

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/localstack/localstack
      tag: v${{package.version}}
      expected-commit: aa795ed1c04a8285c01c96aa7ab79c17489f5766

  - runs: |
      mkdir -p ${{targets.destdir}}/usr/share/localstack
      mkdir -p ${{targets.destdir}}/tmp/localstack

  - name: Build
    runs: |
      python${{vars.py-version}} -m build
      make install-runtime

  - runs: |
      # We use uv here as pip backtracks in resolution
      uv venv -p python${{vars.py-version}} --seed
      # Install the wheel from file with the runtime extras
      uv pip install ./dist/localstack_core-${{package.version}}-py3-none-any.whl[runtime]
      mv .venv ${{targets.destdir}}/usr/share/localstack/

  - runs: |
      # Fix venv paths
      find ${{targets.destdir}}/usr/share/${{package.name}}/.venv/bin/ -type f | xargs sed -i "s|/home/build|/usr/share/${{package.name}}|g"
      # Include system site-packages
      sed -i "s|include-system-site-packages = false|include-system-site-packages = true|g" ${{targets.destdir}}/usr/share/${{package.name}}/.venv/pyvenv.cfg

  # - name: Install dependencies
  #   runs: |
  #     ${{targets.destdir}}/usr/share/localstack/.venv/bin/python3 -m pip install --upgrade awscli awscli-local requests

  - name: Cleanup
    runs: |
      find ${{targets.destdir}}/usr/share/${{package.name}}/.venv -name "*.pyc" -delete
      find ${{targets.destdir}}/usr/share/${{package.name}}/.venv -name "__pycache__" -exec rm -rf {} +
      find ${{targets.destdir}}/usr/share/${{package.name}}/.venv/lib/python${{vars.py-version}}/site-packages/ -type d -name "tests" -exec rm -rf {} +

  - name: Install scripts
    working-directory: bin
    runs: |
      mkdir -p "${{targets.contextdir}}"/usr/bin
      for f in docker-entrypoint.sh docker-helper.sh localstack localstack-supervisor localstack.bat; do
        install -Dm755 $f ${{targets.contextdir}}/usr/bin/$f
      done

  - name: Mark community version
    runs: |
      mkdir -p "${{targets.contextdir}}"/usr/lib/localstack
      echo "${{package.version}} (Built by Chainguard)" > ${{targets.contextdir}}/usr/lib/localstack/.community-version

subpackages:
  - name: "${{package.name}}-compat"
    description: "Compatibility package to place binaries in the location expected by upstream Dockerfile"
    pipeline:
      - name: Symlink scripts
        runs: |
          mkdir -p "${{targets.contextdir}}"/usr/local/bin
          for f in docker-entrypoint.sh docker-helper.sh localstack localstack-supervisor localstack.bat; do
            ln -sf /usr/bin/$f "${{targets.contextdir}}"/usr/local/bin/$f
          done
      - name: Symlink binaries and libraries
        runs: |
          mkdir -p "${{targets.contextdir}}"/opt/code/localstack/bin
          ln -sf /usr/share/localstack/.venv "${{targets.contextdir}}"/opt/code/localstack/.venv
          for f in localstack localstack-supervisor localstack.bat; do
            ln -sf /usr/bin/$f "${{targets.contextdir}}"/opt/code/localstack/bin/$f
          done
      - name: Symlink Java 11
        runs: |
          mkdir -p "${{targets.contextdir}}"/var/lib/localstack/lib/java/11
          for f in bin conf legal lib release; do
            ln -sf /usr/lib/jvm/java-11-openjdk/$f "${{targets.contextdir}}"/var/lib/localstack/lib/java/11/$f
          done
      - name: Symlink Python ${{vars.py-version}}
        runs: |
          mkdir -p "${{targets.contextdir}}"/usr/local/lib
          ln -sf /usr/lib/python${{vars.py-version}} "${{targets.contextdir}}"/usr/local/lib/python${{vars.py-version}}
      - name: Symlink Node
        runs: |
          ln -sf /usr/bin/node "${{targets.contextdir}}"/usr/local/bin/node
          ln -sf /usr/bin/node "${{targets.contextdir}}"/usr/local/bin/nodejs
          ln -sf /usr/bin/npm "${{targets.contextdir}}"/usr/local/bin/npm
          ln -sf /usr/bin/npx "${{targets.contextdir}}"/usr/local/bin/npx
          ln -sf /usr/bin/corepack "${{targets.contextdir}}"/usr/local/bin/corepack
          mkdir -p "${{targets.contextdir}}"/usr/local/include
          mkdir -p "${{targets.contextdir}}"/usr/local/lib/node_modules
          ln -sf /usr/include/node "${{targets.contextdir}}"/usr/local/include/node
          ln -sf /usr/lib/node_modules/npm "${{targets.contextdir}}"/usr/local/lib/node_modules/npm
          ln -sf /usr/share/node_modules/corepack "${{targets.contextdir}}"/usr/local/lib/node_modules/corepack

update:
  enabled: true
  github:
    identifier: localstack/localstack
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - localstack-compat
  pipeline:
    - name: Check if Python venv properly installed
      runs: |
        source /opt/code/localstack/.venv/bin/activate
        python3 -m localstack.runtime.init BOOT
    - name: Test entrypoint
      runs: |
        DEBUG=1 docker-entrypoint.sh
