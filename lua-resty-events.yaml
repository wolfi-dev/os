package:
  name: lua-resty-events
  version: 0.3.1
  epoch: 0
  description: "Inter process Pub/Sub pattern for Nginx worker processes"
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/Kong/lua-resty-events
      tag: ${{package.version}}
      expected-commit: bc85295b7c23eda2dbf2b4acec35c93f77b26787

  - uses: autoconf/make
    with:
      opts: |
        LUA_LIB_DIR=/usr/lib/lua
        PREFIX=/usr

  - uses: autoconf/make-install
    with:
      opts: |
        LUA_LIB_DIR=/usr/lib/lua
        PREFIX=/usr

update:
  enabled: true
  github:
    identifier: Kong/lua-resty-events
    use-tag: true

test:
  environment:
    contents:
      packages:
        - bash
        - openresty
  pipeline:
    - uses: test/tw/ldd-check
    - name: "Check lua-resty-events Installation"
      runs: |
        echo "Verifying lua-resty-events installation..."
        if [ -f "/usr/lib/lua/resty/events/init.lua" ]; then
          echo "lua-resty-events module found."
        else
          echo "lua-resty-events module not found!" && exit 1
        fi
    - name: "Test lua-resty-events with ngx Mock"
      runs: |
        echo "Running a simple Lua script with resty.events..."

        # Create a simple ngx mock for tests to avoid errors
        cat <<EOF > test_events.lua
        -- make sure your lualib tree is on package.path
        package.path = "/usr/lib/lua/?.lua;/usr/lib/lua/?/init.lua;;" .. package.path

        local events = require "resty.events"
        -- testing=true skips all socket setup
        local ev = assert(events.new {
        listening              = "unix:/tmp/events.sock",
        testing                = true,                     -- optional, bypass the UDS broker entirely (default false)
        })
        -- subscribe to everything
        ev:subscribe("*","*", function(data, event)
          print("â†ª received:", event, "->", data)
        end)

        -- publish a demo event
        assert(ev:publish("all","cli-demo","greeting","hello world"))
        print("published greeting")
        EOF

        # Run the Lua script
        resty test_events.lua | grep "published greeting"
