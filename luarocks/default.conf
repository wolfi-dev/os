# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/etc/nginx/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#
server {
    listen       80;
    server_name  localhost;

    access_log  /var/log/openresty/host.access.log;
    error_log /var/log/openresty/all_error.log notice;


    location / {
        root   /usr/local/openresty/nginx/html;
        index  index.html index.html;
        set $log_message "";
        
        access_by_lua_block {
            ngx.req.read_body()
            local zlib = require "zlib"
            local body = ngx.req.get_body_data()
            ngx.log(ngx.NOTICE, 'Body type: ', type(body), ', length: ', body and #body or "nil")
            if body then
                local decompressed, err = zlib.decompress(body, 15)
                if decompressed then
                    ngx.log(ngx.NOTICE, "Successfully decompressed: ", decompressed)
                else
                    ngx.log(ngx.ERR, "Failed to decompress: ", err)
                end
            else
                ngx.var.log_message = "No body data found"
                ngx.log(ngx.ERR, "No body data or it might have been written to a temp file")
            end
            ngx.log(ngx.NOTICE, "[lua] log_message: ", ngx.var.log_message)
        }
        content_by_lua_block {
            ngx.say("POST handled here â€“ check logs for decompression details.")
        }
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           /usr/local/openresty/nginx/html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #
}
