package:
  name: minio-object-browser
  version: "2.0.2"
  epoch: 0
  description: Simple UI for MinIO Object Storage
  copyright:
    - license: AGPL-3.0-only

# Create a new major-version variable that contains only the major version
# to use in the bitnami/compat pipeline to find out the correct folder for the image.
# e.g. 2.0.2 will create a new var major-version=2
var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/minio/object-browser
      tag: v${{package.version}}
      expected-commit: 2595faf715eab7788deb19c63eff84c6a791aa1a

  - uses: go/build
    with:
      packages: ./cmd/console
      output: console
      tags: kqueue

update:
  enabled: true
  github:
    identifier: minio/object-browser
    strip-prefix: v

subpackages:
  - name: ${{package.name}}-bitnami-compat
    description: "Compatibility package for usage with the Bitnami Helm Chart"
    pipeline:
      - uses: bitnami/compat
        with:
          image: ${{package.name}}
          version-path: ${{vars.major-version}}/debian-12
      - runs: |
          # https://github.com/bitnami/containers/blob/main/bitnami/minio-object-browser/2/debian-12/Dockerfile
          # Delete the ca-certificates.crt file to avoid conflicts with the one in /etc/ssl/certs
          rm -rf ${{targets.contextdir}}/etc/ssl/certs/ca-certificates.crt
          mkdir -p ${{targets.contextdir}}/opt/bitnami/minio-object-browser/bin
          ln -sf /usr/bin/console ${{targets.contextdir}}/opt/bitnami/minio-object-browser/bin/console
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
            - wait-for-it
        environment:
          BITNAMI_APP_NAME: minio-object-browser
          PATH: /opt/bitnami/minio-object-browser/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        accounts:
          groups:
            - groupname: nonroot
              gid: 1001
          users:
            - username: nonroot
              gid: 1001
              uid: 1001
          run-as: 1001
      pipeline:
        - working-directory: /tmp # Workaround for "can't cd to /home/build: Permission denied" error
          pipeline:
            - runs: |
                test "$(readlink /opt/bitnami/minio-object-browser/bin/console)" = "/usr/bin/console"
                /opt/bitnami/minio-object-browser/bin/console --version
            - name: Launch operator with dummy kubeconfig
              uses: test/daemon-check-output
              with:
                start: console server
                timeout: 30
                expected_output: |
                  Serving console
                post: |
                  wait-for-it -t 5 --strict localhost:9090 -- echo "Server is up"

test:
  environment:
    contents:
      packages:
        - curl
        - wait-for-it
    environment:
      CONSOLE_ACCESS_KEY: TEST
      CONSOLE_SECRET_KEY: TEST
      CONSOLE_MINIO_SERVER: <minio-server-endpoint>
      CONSOLE_DEV_MODE: on
  pipeline:
    - runs: |
        console --version
        console --help
    - name: Launch operator with dummy kubeconfig
      uses: test/daemon-check-output
      with:
        start: console server
        timeout: 30
        expected_output: |
          Serving console
        post: |
          wait-for-it -t 5 --strict localhost:9090 -- echo "Server is up"
          curl -sfSL http://localhost:9090 | grep "You need to enable JavaScript"
