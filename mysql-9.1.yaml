package:
  name: mysql-9.1
  version: 9.1.0
  epoch: 2
  description: "The MySQL open source relational database"
  copyright:
    - license: GPL-2.0-only # https://downloads.mysql.com/docs/licenses/mysqld-9.0-gpl-en.pdf
  resources:
    cpu: 30
    memory: 60Gi
  dependencies:
    runtime:
      - ${{package.name}}-client
      - pwgen
    provides:
      - mysql=${{package.full-version}}

environment:
  contents:
    packages:
      - bison
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - doxygen
      - graphviz
      - libaio-dev
      - libevent-dev
      - libtirpc-dev
      - linux-pam-dev
      - ncurses-dev
      - openssl-dev
      - pcre2-dev
      - readline-dev
      - rpcsvc-proto
      - wolfi-baselayout
      - xz-dev
      - zlib-dev
  environment:
    DATADIR: /var/lib/mysql
    SOCKDIR: /run/mysqld

pipeline:
  - working-directory: /home/build/mysql
    pipeline:
      - uses: fetch
        with:
          uri: https://dev.mysql.com/get/Downloads/${{package.name}}/mysql-${{package.version}}.tar.gz
          expected-sha256: 52c3675239bfd9d3c83224ff2002aa6e286fab97bf5b2b5ca1a85c9c347766fc
      - uses: cmake/configure
        with:
          opts: |
            -DWITH_UNIT_TESTS=ON \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DSYSCONFDIR=/etc \
            -DMYSQL_DATADIR=$DATADIR \
            -DMYSQL_UNIX_ADDR=$SOCKDIR/mysqld.sock \
            -DDEFAULT_CHARSET=utf8mb4 \
            -DDEFAULT_COLLATION=utf8mb4_general_ci \
            -DENABLED_LOCAL_INFILE=ON \
            -DINSTALL_INFODIR=share/info \
            -DINSTALL_MANDIR=share/man \
            -DINSTALL_PLUGINDIR=lib/${{package.name}}/plugin \
            -DINSTALL_INCLUDEDIR=include/mysql \
            -DINSTALL_DOCREADMEDIR=share/doc/${{package.name}} \
            -DINSTALL_SUPPORTFILESDIR=share/support/${{package.name}} \
            -DINSTALL_MYSQLSHAREDIR=share/${{package.name}} \
            -DINSTALL_DOCDIR=share/doc/${{package.name}} \
            -DWITH_ASAN=OFF \
            -DWITH_JEMALLOC=OFF \
            -DWITH_LIBWRAP=OFF \
            -DWITH_SYSTEMD=OFF \
            -DWITH_SSL=system \
            -DWITH_VALGRIND=OFF \
            -DWITH_ZLIB=system
      - uses: cmake/build
      - uses: cmake/install
      - name: "Remove extras"
        runs: |
          rm -r "${{targets.destdir}}"/usr/mysql-test/
      - name: "Create runtime directories"
        runs: |
          mkdir -p "${{targets.destdir}}"$DATADIR "${{targets.destdir}}"$SOCKDIR

  - uses: strip

subpackages:
  - name: "${{package.name}}-dev"
    description: "headers for mysql"
    dependencies:
      provides:
        - mysql-dev=${{package.full-version}}
    pipeline:
      - uses: split/dev
    test:
      pipeline:
        - uses: test/pkgconf

  - name: "${{package.name}}-client"
    dependencies:
      provides:
        - mysql-client=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv "${{targets.destdir}}"/usr/bin/mysql "${{targets.subpkgdir}}"/usr/bin/

  - name: "${{package.name}}-oci-entrypoint"
    description: Entrypoint for MySQL in OCI containers
    dependencies:
      runtime:
        - bash
        - busybox
        - openssl
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin/
          cp docker-entrypoint.sh ${{targets.subpkgdir}}/usr/bin/
          chmod +x ${{targets.subpkgdir}}/usr/bin/docker-entrypoint.sh

  - name: "${{package.name}}-oci-entrypoint-compat"
    pipeline:
      - runs: |
          # Symlink the binary from usr/bin to /
          mkdir -p "${{targets.subpkgdir}}"
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -sf /usr/bin/docker-entrypoint.sh ${{targets.subpkgdir}}/entrypoint.sh
          ln -sf /usr/bin/docker-entrypoint.sh ${{targets.subpkgdir}}/usr/local/bin/docker-entrypoint.sh
    dependencies:
      runtime:
        - "${{package.name}}-oci-entrypoint"

  - name: ${{package.name}}-bitnami-compat
    dependencies:
      provides:
        - mysql-bitnami-compat=${{package.full-version}}
      runtime:
        - bash
        - busybox
        - coreutils
        - ini-file
    pipeline:
      - uses: bitnami/compat
        with:
          image: mysql
          # NOTE: 9.0 is the last version published by bitnami
          version-path: 9.0/debian-12
          commit: 2a237f1b8024064a5d1d9e92c7f3e06a79e3f44d
      - name: Create symlinks
        runs: |
          mkdir -p "${{targets.contextdir}}/opt/bitnami/mysql/bin"
          for file in mysql $(find "${{targets.destdir}}/usr/bin" -type f -exec basename {} \;) ; do
            ln -sf /usr/bin/$file "${{targets.contextdir}}/opt/bitnami/mysql/bin/$file"
          done

          mkdir -p "${{targets.contextdir}}/opt/bitnami/mysql/lib"
          ln -s /usr/lib/${{package.name}}/plugin "${{targets.contextdir}}/opt/bitnami/mysql/lib/plugin"
          ln -s /usr/lib/private "${{targets.contextdir}}/opt/bitnami/mysql/lib/private"
          ln -s /usr/share/${{package.name}} "${{targets.contextdir}}/opt/bitnami/mysql/share"

          mkdir -p "${{targets.contextdir}}/usr/share/${{package.name}}"
          ln -s /usr/share/${{package.name}} "${{targets.contextdir}}/usr/share/${{package.name}}/${{package.name}}"

          mkdir -p "${{targets.contextdir}}/opt/bitnami/mysql/conf/bitnami"
          install -m644 bitnami-my.cnf "${{targets.contextdir}}/opt/bitnami/mysql/conf/my.cnf"
          cp -pfR "${{targets.contextdir}}/opt/bitnami/mysql/conf" "${{targets.contextdir}}/opt/bitnami/mysql/conf.default"

          mkdir -p "${{targets.contextdir}}/opt/bitnami/mysql/logs"
          ln -sf /proc/1/fd/1 "${{targets.contextdir}}/opt/bitnami/mysql/logs/mysqld.log"
    test:
      environment:
        accounts:
          users:
            - username: bitnami
              uid: 1001
              gid: 0
          run-as: 0
        contents:
          packages:
            - ${{package.name}}
            - busybox
            - coreutils
            - sudo
        environment:
          BITNAMI_APP_NAME: mysql
          MYSQL_ROOT_PASSWORD: UltraS3cure
          PATH: "/opt/bitnami/mysql/bin:/opt/bitnami/common/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          MYSQL_HOME: "/opt/bitnami/mysql/conf"
      pipeline:
        - runs: |
            test -f /opt/bitnami/mysql/bin/mysql
            test -f /opt/bitnami/mysql/bin/mysqladmin
            test -f /opt/bitnami/mysql/bin/mysqld
            test -f /opt/bitnami/mysql/conf/my.cnf
            test -f /opt/bitnami/mysql/conf.default/my.cnf
            test -f /opt/bitnami/mysql/lib/plugin/component_reference_cache.so
            test -f /opt/bitnami/mysql/share/english/errmsg.sys
            test -f /opt/bitnami/mysql/share/${{package.name}}/english/errmsg.sys
        - name: "Test entrypoint and run scripts"
          uses: test/daemon-check-output
          with:
            setup: |
              # remove symlink to /proc/1/fd/1 as it does not work for tests runninig in sudo
              rm -f /opt/bitnami/mysql/logs/mysqld.log
              mkdir -p /bitnami/data/mysql /opt/bitnami/mysql/tmp /opt/bitnami/mysql/run
              chown -fR 1001:0 /bitnami /opt/bitnami/mysql
            start: sudo -E -u bitnami /opt/bitnami/scripts/mysql/entrypoint.sh /opt/bitnami/scripts/mysql/run.sh
            post: |
              set -e

              /usr/bin/mysqladmin --user=root -p$MYSQL_ROOT_PASSWORD ping --wait=20
              /opt/bitnami/mysql/bin/mysqladmin --user=root -p$MYSQL_ROOT_PASSWORD ping --wait=20
              /usr/bin/mysqladmin --user=root -p$MYSQL_ROOT_PASSWORD -h127.0.0.1 ping --wait=20
              /opt/bitnami/mysql/bin/mysqladmin --user=root -p$MYSQL_ROOT_PASSWORD -h127.0.0.1 ping --wait=20
            expected_output: |
              Installing database
              Configuring authentication
              MySQL setup finished

update:
  enabled: true
  github:
    identifier: mysql/mysql-server
    strip-prefix: mysql-
    use-tag: true
    tag-filter: mysql-9.1.

test:
  environment:
    contents:
      packages:
        - ${{package.name}}
        - ${{package.name}}-client
        - ${{package.name}}-dev
        - gcc
        - make
        - glibc-dev
  pipeline:
    - name: Check versions
      runs: |
        mysql --version |grep "${{package.version}}"
        mysqladmin --version | grep "${{package.version}}"
    - name: Test
      uses: test/daemon-check-output
      with:
        setup: |
          mkdir -p /var/tmp /var/log/mysql
          mysqld --initialize-insecure
        start: mysqld --user=root
        post: |
          mysqladmin --user=root ping --wait=5
          mkdir -p /tmp/mysql-test
          cat << 'EOF' > test.c
          #include <mysql/mysql.h>
          #include <stdio.h>
          #include <stdlib.h>

          int main() {
              MYSQL *conn;
              conn = mysql_init(NULL);

              if (conn == NULL) {
                  fprintf(stderr, "mysql_init() failed\n");
                  return EXIT_FAILURE;
              }

              if (mysql_real_connect(conn, "127.0.0.1", "root", "", NULL, 3306, NULL, 0) == NULL) {
                  fprintf(stderr, "mysql_real_connect() failed: %s\n", mysql_error(conn));
                  mysql_close(conn);
                  return EXIT_FAILURE;
              }

              printf("Connected to MySQL server successfully.\n");
              mysql_close(conn);
              return EXIT_SUCCESS;
          }
          EOF
          gcc -o test -lmysqlclient test.c
          ldd ./test | grep libmysqlclient # Verify correct library linkage
          ./test | grep "Connected to MySQL server successfully."
        timeout: 60
        expected_output: |
          starting as process
          ready for connections
