package:
  name: neo4j-5.26
  version: "5.26.5"
  epoch: 1
  description:
  copyright:
    - license: GPL-3.0-or-later
  dependencies:
    runtime:
      - bash
      # note that this is a required package for neo4j
      # If build is failing because neo4j-browser-x.y is unavailable then please unblock that first.
      - neo4j-browser-${{vars.major-minor-version}}
      - openjdk-17-default-jvm
    provides:
      - neo4j=${{package.full-version}}

var-transforms:
  - from: ${{package.name}}
    match: neo4j-(\d+\.\d+)
    replace: $1
    to: major-minor-version

environment:
  contents:
    packages:
      - bash
      - busybox
      - ca-certificates-bundle
      - curl
      - maven
      - openjdk-17-default-jdk
      - wolfi-base
      - wolfi-baselayout

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/neo4j/neo4j
      tag: ${{package.version}}
      expected-commit: d00cf0ce1a774d94afc0bdf936e5f789006a3fa5

  - runs: |
      export LANG=en_US.UTF-8
      export MAVEN_OPTS="-Xmx2048m"

      mvn package -DskipTests=true -T$(nproc)C -q -Doverwrite=true

      mkdir -p ${{targets.contextdir}}/var/lib/neo4j
      # https://github.com/neo4j/docker-neo4j-publish/blob/b8c0ca2e8dd585e338d74b191a2e370c0da14d92/5.26.0/bullseye/community/Dockerfile#L20
      tar --strip-components=1 -xf packaging/standalone/target/neo4j-*.tar.gz -C ${{targets.contextdir}}/var/lib/neo4j

      rm -rf ${{targets.contextdir}}/var/lib/neo4j/data
      rm -rf ${{targets.contextdir}}/var/lib/neo4j/logs

      mkdir -p ${{targets.contextdir}}/data/databases
      mkdir -p ${{targets.contextdir}}/data/transactions
      ln -s /data ${{targets.contextdir}}/var/lib/neo4j/

      mkdir -p ${{targets.contextdir}}/logs
      ln -s /logs ${{targets.contextdir}}/var/lib/neo4j/
      mkdir -p ${{targets.contextdir}}/opt/java
      ln -s /usr/lib/jvm/default-jvm ${{targets.contextdir}}/opt/java/openjdk

      mkdir -p ${{targets.contextdir}}/usr/bin
      for i in neo4j neo4j-admin cypher-shell; do
        ln -sf /var/lib/neo4j/bin/$i ${{targets.contextdir}}/usr/bin/$i
      done

# docker-neo4j-publish repository has a Dockerfile for each version of Neo4j
# so we need to make sure we are using the correct version here and its available in the repository.
# I'm using `${{package.version}}` as the directory name but that doesn't mean that the directory exists because
# the repository might not have the version yet, so, we need to make sure that the directory exists before we bump the version of the package.
subpackages:
  - name: ${{package.name}}-docker-publish
    description: Docker image for Neo4j
    pipeline:
      - uses: git-checkout
        with:
          repository: https://github.com/neo4j/docker-neo4j-publish
          branch: master
          expected-commit: df252a0df2fdc2acdab1b089bf1e047f365bac41
      - working-directory: ${{package.version}}/bullseye/community
        runs: |
          mkdir -p ${{targets.contextdir}}/startup
          cp -r local-package/* ${{targets.contextdir}}/startup/
          ls -latr ${{targets.contextdir}}/startup
          mkdir -p ${{targets.contextdir}}/var/lib/neo4j/bin
          mkdir -p ${{targets.contextdir}}/usr/bin
          mv ${{targets.contextdir}}/startup/neo4j-admin-report.sh ${{targets.contextdir}}/var/lib/neo4j/bin/neo4j-admin-report
          ln -sf /var/lib/neo4j/bin/neo4j-admin-report ${{targets.contextdir}}/usr/bin/neo4j-admin-report
    dependencies:
      runtime:
        - su-exec
        - tini
      provides:
        - neo4j-docker-publish=${{package.full-version}}

update:
  enabled: true
  github:
    identifier: neo4j/neo4j
    use-tag: true
    tag-filter: 5.26.

test:
  environment:
    contents:
      packages:
        - openjdk-17-default-jvm
        - curl
        - wait-for-it
    environment:
      JAVA_HOME: /usr/lib/jvm/default-jvm
  pipeline:
    - uses: test/daemon-check-output
      with:
        start: /usr/bin/neo4j console
        timeout: 30
        expected_output: |
          Starting Neo4j
          Starting
          Bolt enabled on localhost
        post: |
          #!/bin/sh -e
          wait-for-it localhost:7474 --timeout=60
          neo4j status | grep -i "Neo4j is running"
          neo4j-admin server status | grep -i "Neo4j is running"
          curl -fsSL localhost:7474/browser | grep "<title>Neo4j Browser</title>"
