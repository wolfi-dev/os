package:
  name: neuvector-scanner
  version: 0_git20240528
  epoch: 11
  description: NeuVector vulnerability scanner for the SUSE NeuVector Container Security Platform
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ca-certificates
      - neuvector-db
      - neuvector-scanner-monitor
      - neuvector-scanner-task
      - neuvector-sigstore-interface

environment:
  contents:
    packages:
      - busybox

pipeline:
  - uses: fetch
    with:
      expected-sha256: b98bb94588e5e933ba1aa1b1e21a02d636fb2041f7a8f8bd463bc8b20fe2f5a3
      uri: https://github.com/neuvector/scanner/archive/e9419506aac3230cfaad1ca978c4576c4bad5b0f.tar.gz

  - uses: go/bump
    with:
      deps: github.com/containerd/containerd@v1.6.26 github.com/opencontainers/image-spec@v1.1.0 google.golang.org/grpc@v1.56.3 google.golang.org/protobuf@v1.33.0 github.com/docker/distribution@v2.8.2-beta.1+incompatible golang.org/x/sys@v0.19.0 github.com/docker/docker@v26.1.5 github.com/opencontainers/runc@v1.1.14 golang.org/x/net@v0.33.0

  - uses: go/build
    with:
      modroot: .
      packages: .
      output: scanner
      prefix: usr/local
      vendor: true

  # Empty file that tells NV that the scanner is running in a container
  - runs: touch ${{targets.contextdir}}/usr/local/bin/.nvcontainer

  - uses: strip

subpackages:
  - name: ${{package.name}}-task
    description: NeuVector Scanner Task
    pipeline:
      - uses: go/build
        with:
          modroot: .
          packages: .
          output: scannerTask
          prefix: usr/local
          vendor: true

  # Need a separate monitor subpackage for neuvector/scanner/monitor different from neuvector/neuvector/monitor
  - name: ${{package.name}}-monitor
    description: NeuVector Scanner Monitor
    pipeline:
      - runs: |
          make -C monitor
          mkdir -p ${{targets.contextdir}}/usr/local/bin
          install -Dm755 monitor/monitor ${{targets.contextdir}}/usr/local/bin/monitor

test:
  pipeline:
    - runs: |
        if scanner --help | grep -q "usage: scan [OPTIONS]"; then
            exit 0
        fi

update:
  manual: true
  exclude-reason: No releases or tags
