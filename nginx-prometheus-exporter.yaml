package:
  name: nginx-prometheus-exporter
  version: "1.4.1"
  epoch: 40
  description: NGINX Prometheus Exporter for NGINX and NGINX Plus
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - merged-usrsbin
      - wolfi-baselayout

# Create a new major-version variable that contains only the major version
# to use in the bitnami/compat pipeline to find out the correct folder for the image.
# e.g. 1.4.1 will create a new var major-version=1
var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 8da901c87176210a4951f427742c05bfa96c838f
      repository: https://github.com/nginxinc/nginx-prometheus-exporter
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/crypto@v0.35.0
        golang.org/x/oauth2@v0.27.0
        golang.org/x/net@v0.36.0

  - uses: go/build
    with:
      ldflags: |
        -w
        -X=github.com/prometheus/common/version.Version=${{package.version}}
        -X=main.version=${{package.version}}
      output: nginx-prometheus-exporter
      packages: .

subpackages:
  - name: ${{package.name}}-bitnami-compat
    description: Compat package with bitnami/nginx-exporter image
    pipeline:
      - uses: bitnami/compat
        with:
          image: nginx-exporter
          version-path: ${{vars.major-version}}/debian-12
      - runs: |
          mkdir -p ${{targets.contextdir}}/opt/bitnami/nginx-exporter/bin
          mkdir -p ${{targets.contextdir}}/usr/bin
          ln -sf /usr/bin/nginx-prometheus-exporter ${{targets.contextdir}}/opt/bitnami/nginx-exporter/bin/nginx-prometheus-exporter
          ln -sf /usr/bin/nginx-prometheus-exporter ${{targets.contextdir}}/usr/bin/exporter
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
        environment:
          PATH: "/opt/bitnami/nginx-exporter/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          BITNAMI_APP_NAME: "nginx-exporter"
        accounts:
          groups:
            - groupname: nginx-bitnami
              gid: 1001
          users:
            - username: nginx-bitnami
              gid: 1001
              uid: 1001
          run-as: 1001
      pipeline:
        - working-directory: /tmp # Workaround for "can't cd to /home/build: Permission denied" error
          pipeline:
            # We don't need to have `test/daemon-check-output` pipeline here as upstream entrypoint doesn't
            # wrap with the `entrypoint.sh`, so we're covered by in the main pipeline test.
            - name: Verify the symlinks were created
              runs: |
                test "$(readlink /opt/bitnami/nginx-exporter/bin/nginx-prometheus-exporter)" = "/usr/bin/nginx-prometheus-exporter"
                test "$(readlink /usr/bin/exporter)" = "/usr/bin/nginx-prometheus-exporter"
            - runs: /opt/bitnami/nginx-exporter/bin/nginx-prometheus-exporter --version
    dependencies:
      runtime:
        - merged-usrsbin
        - wolfi-baselayout

update:
  enabled: true
  github:
    identifier: nginxinc/nginx-prometheus-exporter
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - curl
        - shadow
        - nginx
  pipeline:
    - name: "Verify Installation"
      runs: nginx-prometheus-exporter --version 2>&1 | grep -q "${{package.version}}"
    - name: "start daemon"
      uses: test/daemon-check-output
      with:
        start: nginx-prometheus-exporter
        timeout: 60
        setup: |
          useradd nginx
          mkdir -p /var/lib/nginx/logs
          mkdir -p /var/lib/nginx/tmp
          nginx -g "daemon off;" &
        expected_output: |
          Listening on
        post: |
          #!/bin/sh -e
          response=$(curl -s localhost:9113/metrics)
          if ! echo "$response" | grep -q 'nginx_up'; then
            echo "expected metric not found"
            echo "$response"
            exit 1
          fi
