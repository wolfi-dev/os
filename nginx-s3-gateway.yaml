#nolint:valid-pipeline-git-checkout-tag
package:
  name: nginx-s3-gateway
  version: 0_git20250605
  epoch: 2
  description: NGINX S3 Gateway
  copyright:
    - license: Apache-2.0
  # BYO nginx
  dependencies:
    replaces:
      - nginx-stable-config
    runtime:
      - njs
      - gzip
      - libzstd1
      - liblz4-1
      - libwebp
      - lz4
      - zlib
      - lerc
      - libdeflate
      - nginx-stable
      - nginx-mod-http_xslt_filter
      - nginx-mod-http_image_filter
      - nginx-mod-http_geoip

# Based off of https://github.com/nginx/nginx-s3-gateway/blob/main/Dockerfile.oss
environment:
  contents:
    packages:
      - docker-nginx
      - busybox

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/nginx/nginx-s3-gateway.git
      expected-commit: 5652fa1d1be939f846de05a33e9651a0e601f259
      branch: main

  - name: Copy configurations
    runs: |
      NGINX_DIRECTORY=${{targets.destdir}}/etc/nginx
      install -Dpm0644 -t "${NGINX_DIRECTORY}/conf.d/gateway/" ./oss/etc/nginx/conf.d/gateway/server_variables.conf
      install -Dpm0644 -t "${NGINX_DIRECTORY}/templates/" ./oss/etc/nginx/templates/upstreams.conf.template
      install -Dpm0644 -t "${NGINX_DIRECTORY}/include/" ./common/etc/nginx/include/*.js
      install -Dpm0644 -t "${NGINX_DIRECTORY}/templates/gateway/" ./common/etc/nginx/templates/gateway/*.template
      install -Dpm0644 -t "${NGINX_DIRECTORY}/templates/" ./common/etc/nginx/templates/*.template
      install -Dpm0644 -t "${NGINX_DIRECTORY}/include" ./common/etc/nginx/include/listing.xsl
      install -Dpm0644 -t "${NGINX_DIRECTORY}/" ./common/etc/nginx/nginx.conf

subpackages:
  - name: ${{package.name}}-oci-entrypoint
    description: Entrypoint and directories for NGINX s3 gateway upstream image compatibility
    dependencies:
      runtime:
        - bash
        - curl
        - grep
        - findutils
        - coreutils
        - tzdata
        - gzip
        - libzstd1
        - liblz4-1
        - libwebp
        - lz4
        - zlib
        - lerc
        - libdeflate
        - gawk
        - dash-binsh
        - gettext
        - libedit
        - util-linux
    pipeline:
      - name: Write entrypoint scripts to right location
        runs: |
          # We need the entrypoint scripts from NGINX's docker image but overwrite anything that already exists with
          # this repo's scripts, including entrypoint. - so we cant include `docker-nginx` as a runtime dependency
          # because of conflicts
          rm "/docker-entrypoint.d/docker-entrypoint.sh" # unnecessary since this overrides it anyway
          install -Dpm0755 -t "${{targets.subpkgdir}}/docker-entrypoint.d/" /docker-entrypoint.d/*.sh

          install -Dpm0755 -t "${{targets.subpkgdir}}/" common/docker-entrypoint.sh
          install -Dpm0755 -t "${{targets.subpkgdir}}/docker-entrypoint.d/" ./common/docker-entrypoint.d/*.sh
      - name: Create module directory
        runs: |
          mkdir -p ${{targets.subpkgdir}}/var/cache/nginx/s3_proxy
    test:
      pipeline:
        - name: Check if all scripts exist, are executable, and owned by root
          runs: |
            stat -c "%a-%u-%g" /docker-entrypoint.sh | grep "^755-0-0$"
            find /docker-entrypoint.d/ -iname '*.sh' -type f -print0 | xargs -n1 -I{} -0 sh -c 'stat -c "%a-%u-%g" {} | grep "^755-0-0$"'
        - name: Check if module directory exists and is writeable by root
          runs: |
            stat /var/cache/nginx/s3_proxy | grep '0755'

  - name: ${{package.name}}-unprivileged
    description: Unprivileged configuration for NGINX S3 Gateway
    dependencies:
      replaces:
        - nginx-stable-config
      runtime:
        - njs
        - nginx-stable
        - nginx-mod-http_xslt_filter
        - nginx-mod-http_image_filter
        - nginx-mod-http_geoip
    pipeline:
      - name: Copy and modify configurations for unprivileged operation
        runs: |
          # Copy the configuration files from the main package build
          NGINX_DIRECTORY=${{targets.subpkgdir}}/etc/nginx
          mkdir -p "${NGINX_DIRECTORY}"
          cp -r ${{targets.destdir}}/etc/nginx/* "${NGINX_DIRECTORY}/"

          # Apply unprivileged modifications
          sed -i "/^server {/a \    listen       8080;" "${NGINX_DIRECTORY}/templates/default.conf.template"
          sed -i '/user  nginx;/d' "${NGINX_DIRECTORY}/nginx.conf"
          sed -i 's#http://127.0.0.1:80#http://127.0.0.1:8080#g' "${NGINX_DIRECTORY}/include/s3gateway.js"
          sed -i 's,/var/run/nginx.pid,/tmp/nginx.pid,' "${NGINX_DIRECTORY}/nginx.conf"
          sed -i "/^http {/a \\
          proxy_temp_path /tmp/proxy_temp;\\
          client_body_temp_path /tmp/client_temp;\\
          fastcgi_temp_path /tmp/fastcgi_temp;\\
          uwsgi_temp_path /tmp/uwsgi_temp;\\
          scgi_temp_path /tmp/scgi_temp;" \
          "${NGINX_DIRECTORY}/nginx.conf"
    test:
      environment:
        contents:
          packages:
            - nginx-stable
        accounts:
          groups:
            - groupname: nginx
              gid: 65532
          users:
            - username: nginx
              gid: 65532
              uid: 65532
      pipeline:
        - name: Check directory structure and file permissions
          runs: |
            NGINX_DIR="/etc/nginx"
            check_root_nonexec() {
              TARGET_DIR="${1}"
              FILE_TYPE="${2}"
              shift
              shift
              FILES_FOUND="$(mktemp)"
              find $TARGET_DIR -iname "*.${FILE_TYPE}" -maxdepth 1 -type f -print0 | tee "${FILES_FOUND}"
              test -s "${TARGET_DIR}" || exit 1
              cat "${FILES_FOUND}" | xargs -n1 -I{} -0 sh -c 'stat -c "%a-%u-%g" {} | grep "^644-0-0$"'
            }
            check_root_nonexec "${NGINX_DIR}/conf.d/gateway/" conf
            check_root_nonexec "${NGINX_DIR}/templates/" conf.template
            check_root_nonexec "${NGINX_DIR}/include/" js
            check_root_nonexec "${NGINX_DIR}/" conf
        - name: Check if configuration is valid for unprivileged user
          runs: |
            mkdir -p /tmp/proxy_temp /tmp/client_temp /tmp/fastcgi_temp /tmp/uwsgi_temp /tmp/scgi_temp /var/log/nginx
            # Verify unprivileged modifications were applied
            grep -q "listen       8080;" /etc/nginx/templates/default.conf.template
            ! grep -q "user  nginx;" /etc/nginx/nginx.conf
            grep -q "http://127.0.0.1:8080" /etc/nginx/include/s3gateway.js
            grep -q "/tmp/nginx.pid" /etc/nginx/nginx.conf
            grep -q "proxy_temp_path /tmp/proxy_temp;" /etc/nginx/nginx.conf
            nginx -t -c /etc/nginx/nginx.conf
            nginx -T

update:
  enabled: false
  exclude-reason: No releases or tags
  schedule:
    period: daily
    reason: Upstream does not maintain tags or releases
  github:
    identifier: nginx/nginx-s3-gateway

test:
  environment:
    contents:
      packages:
        - nginx-stable
    accounts:
      groups:
        - groupname: nginx
          gid: 65532
      users:
        - username: nginx
          gid: 65532
          uid: 65532
  pipeline:
    - name: Check directory structure and file permissions
      runs: |
        NGINX_DIR="/etc/nginx"
        check_root_nonexec() {
          TARGET_DIR="${1}"
          FILE_TYPE="${2}"
          shift
          shift
          FILES_FOUND="$(mktemp)"
          find $TARGET_DIR -iname "*.${FILE_TYPE}" -maxdepth 1 -type f -print0 | tee "${FILES_FOUND}"
          test -s "${TARGET_DIR}" || exit 1
          cat "${FILES_FOUND}" | xargs -n1 -I{} -0 sh -c 'stat -c "%a-%u-%g" {} | grep "^644-0-0$"'
        }
        check_root_nonexec "${NGINX_DIR}/conf.d/gateway/" conf
        check_root_nonexec "${NGINX_DIR}/templates/" conf.template
        check_root_nonexec "${NGINX_DIR}/include/" js
        check_root_nonexec "${NGINX_DIR}/" conf
    - name: Check if configuration is valid
      runs: |
        mkdir -p /var/run /var/log/nginx
        nginx -t -c /etc/nginx/nginx.conf
        nginx -T
