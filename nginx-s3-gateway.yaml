#nolint:valid-pipeline-git-checkout-tag
package:
  name: nginx-s3-gateway
  version: 0_git20250605
  epoch: 0
  description: NGINX S3 Gateway
  copyright:
    - license: Apache-2.0
  # BYO nginx
  dependencies:
    replaces:
      - nginx-stable-config
    runtime:
      - njs
      - nginx-stable
      - nginx-mod-http_xslt_filter
      - nginx-mod-http_image_filter
      - nginx-mod-http_geoip

# Based off of https://github.com/nginx/nginx-s3-gateway/blob/main/Dockerfile.oss
environment:
  contents:
    packages:
      - docker-nginx
      - busybox

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/nginx/nginx-s3-gateway.git
      expected-commit: 5652fa1d1be939f846de05a33e9651a0e601f259
      branch: main

  - name: Copy configurations
    runs: |
      NGINX_DIRECTORY=${{targets.destdir}}/etc/nginx
      install -Dpm0644 -t "${NGINX_DIRECTORY}/conf.d/gateway/" ./oss/etc/nginx/conf.d/gateway/server_variables.conf
      install -Dpm0644 -t "${NGINX_DIRECTORY}/templates/" ./oss/etc/nginx/templates/upstreams.conf.template

      install -Dpm0644 -t "${NGINX_DIRECTORY}/include/" ./common/etc/nginx/include/*.js
      install -Dpm0644 -t "${NGINX_DIRECTORY}/templates/gateway/" ./common/etc/nginx/templates/gateway/*.template
      install -Dpm0644 -t "${NGINX_DIRECTORY}/templates/" ./common/etc/nginx/templates/*.template
      install -Dpm0644 -t "${NGINX_DIRECTORY}/include" ./common/etc/nginx/include/listing.xsl
      install -Dpm0644 -t "${NGINX_DIRECTORY}/" ./common/etc/nginx/nginx.conf

subpackages:
  - name: ${{package.name}}-oci-entrypoint
    description: Entrypoint and directories for NGINX s3 gateway upstream image compatibility
    dependencies:
      runtime:
        - bash
        - curl
        - grep
        - findutils
        - coreutils
        - tzdata
        - gawk
        - dash-binsh
        - gettext
        - libedit
        - util-linux
    pipeline:
      - name: Write entrypoint scripts to right location
        runs: |
          # We need the entrypoint scripts from NGINX's docker image but overwrite anything that already exists with
          # this repo's scripts, including entrypoint. - so we cant include `docker-nginx` as a runtime dependency
          # because of conflicts
          rm "/docker-entrypoint.d/docker-entrypoint.sh" # unnecessary since this overrides it anyway
          install -Dpm0755 -t "${{targets.subpkgdir}}/docker-entrypoint.d/" /docker-entrypoint.d/*.sh

          install -Dpm0755 -t "${{targets.subpkgdir}}/" common/docker-entrypoint.sh
          install -Dpm0755 -t "${{targets.subpkgdir}}/docker-entrypoint.d/" ./common/docker-entrypoint.d/*.sh
      - name: Create module directory
        runs: |
          mkdir -p ${{targets.subpkgdir}}/var/cache/nginx/s3_proxy
    test:
      pipeline:
        - name: Check if all scripts exist, are executable, and owned by root
          runs: |
            stat -c "%a-%u-%g" /docker-entrypoint.sh | grep "^755-0-0$"
            find /docker-entrypoint.d/ -iname '*.sh' -type f -print0 | xargs -n1 -I{} -0 sh -c 'stat -c "%a-%u-%g" {} | grep "^755-0-0$"'
        - name: Check if module directory exists and is writeable by root
          runs: |
            stat /var/cache/nginx/s3_proxy | grep '0755'

update:
  enabled: false
  exclude-reason: No releases or tags
  schedule:
    period: daily
    reason: Upstream does not maintain tags or releases
  github:
    identifier: nginx/nginx-s3-gateway

test:
  environment:
    contents:
      packages:
        - nginx-stable
    accounts:
      groups:
        - groupname: nginx
          gid: 65532
      users:
        - username: nginx
          gid: 65532
          uid: 65532
  pipeline:
    - name: Check directory structure and file permissions
      runs: |
        NGINX_DIR="/etc/nginx"
        check_root_nonexec() {
          TARGET_DIR="${1}"
          FILE_TYPE="${2}"
          shift
          shift
          FILES_FOUND="$(mktemp)"
          find $TARGET_DIR -iname "*.${FILE_TYPE}" -maxdepth 1 -type f -print0 | tee "${FILES_FOUND}"
          test -s "${TARGET_DIR}" || exit 1
          cat "${FILES_FOUND}" | xargs -n1 -I{} -0 sh -c 'stat -c "%a-%u-%g" {} | grep "^644-0-0$"'
        }
        check_root_nonexec "${NGINX_DIR}/conf.d/gateway/" conf
        check_root_nonexec "${NGINX_DIR}/templates/" conf.template
        check_root_nonexec "${NGINX_DIR}/include/" js
        check_root_nonexec "${NGINX_DIR}/" conf
    - name: Check if configuration is valid
      runs: |
        mkdir -p /var/run /var/log/nginx
        nginx -t -c /etc/nginx/nginx.conf
        nginx -T
