package:
  name: node-feature-discovery-0.17
  version: "0.17.3"
  epoch: 0
  description: Node feature discovery for Kubernetes
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - node-feature-discovery=${{package.full-version}}
      - node-feature-discovery-0.17-master=${{package.full-version}}
      - node-feature-discovery-0.17-worker=${{package.full-version}}
      - node-feature-discovery-0.17-gc=${{package.full-version}}
      - node-feature-discovery-0.17-topology-updater=${{package.full-version}}
      - node-feature-discovery-0.17-kubectl-nfd=${{package.full-version}}

environment:
  contents:
    packages:
      - protoc

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kubernetes-sigs/node-feature-discovery
      tag: v${{package.version}}
      expected-commit: d4cc19a705b1e2a34b2305a87a4f5bf1b5a7caed

  - name: copy conf
    runs: |
      mkdir -p ${{targets.contextdir}}/etc/kubernetes/node-feature-discovery/
      cp ./deployment/components/worker-config/nfd-worker.conf.example ${{targets.contextdir}}/etc/kubernetes/node-feature-discovery/nfd-worker.conf

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
      modroot: .

  - uses: go/build
    with:
      modroot: .
      packages: ./cmd/kubectl-nfd
      output: kubectl-nfd
      tags: osusergo,netgo
      ldflags: "-X sigs.k8s.io/node-feature-discovery/pkg/version.version=${{package.version}} -X sigs.k8s.io/node-feature-discovery/pkg/utils/hostpath.pathPrefix=/host-"
      go-package: go

  - uses: go/build
    with:
      modroot: .
      packages: ./cmd/nfd-gc
      output: nfd-gc
      tags: osusergo,netgo
      ldflags: "-X sigs.k8s.io/node-feature-discovery/pkg/version.version=${{package.version}} -X sigs.k8s.io/node-feature-discovery/pkg/utils/hostpath.pathPrefix=/host-"
      go-package: go

  - uses: go/build
    with:
      modroot: .
      packages: ./cmd/nfd-master
      output: nfd-master
      tags: osusergo,netgo
      ldflags: "-X sigs.k8s.io/node-feature-discovery/pkg/version.version=${{package.version}} -X sigs.k8s.io/node-feature-discovery/pkg/utils/hostpath.pathPrefix=/host-"
      go-package: go

  - uses: go/build
    with:
      modroot: .
      packages: ./cmd/nfd-topology-updater
      output: nfd-topology-updater
      tags: osusergo,netgo
      ldflags: "-X sigs.k8s.io/node-feature-discovery/pkg/version.version=${{package.version}} -X sigs.k8s.io/node-feature-discovery/pkg/utils/hostpath.pathPrefix=/host-"
      go-package: go

  - uses: go/build
    with:
      modroot: .
      packages: ./cmd/nfd-worker
      output: nfd-worker
      tags: osusergo,netgo
      ldflags: "-X sigs.k8s.io/node-feature-discovery/pkg/version.version=${{package.version}} -X sigs.k8s.io/node-feature-discovery/pkg/utils/hostpath.pathPrefix=/host-"
      go-package: go

  - uses: strip

update:
  enabled: true
  github:
    identifier: kubernetes-sigs/node-feature-discovery
    strip-prefix: v
    use-tag: true
    tag-filter: v0.17.

test:
  environment:
    contents:
      packages:
        - ${{package.name}}-master
        - ${{package.name}}-worker
        - ${{package.name}}-gc
        - ${{package.name}}-topology-updater
        - ${{package.name}}-kubectl-nfd
  pipeline:
    - uses: test/kwok/cluster
    - name: "Test nfd-master startup"
      uses: test/daemon-check-output
      with:
        setup: |
          # Create minimal config file
          mkdir -p /etc/kubernetes/node-feature-discovery
          cat > /etc/kubernetes/node-feature-discovery/nfd-master.conf <<EOF
          {
            "noPublish": true,
            "instance": "test",
            "enableLeaderElection": false,
            "nfdApiParallelism": 1,
            "resyncPeriod": "1s",
            "inClusterConfig": true,
            "verifyServiceAccount": false
          }
          EOF

          # Create minimal service account directory
          mkdir -p /var/run/secrets/kubernetes.io/serviceaccount/
          echo "fake-token" > /var/run/secrets/kubernetes.io/serviceaccount/token
          echo "fake-ca" > /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          echo "default" > /var/run/secrets/kubernetes.io/serviceaccount/namespace
        start: env KUBERNETES_SERVICE_HOST=localhost KUBERNETES_SERVICE_PORT=8080 nfd-master --config=/etc/kubernetes/node-feature-discovery/nfd-master.conf
        timeout: 30
        expected_output: |
          Node Feature Discovery Master
          configuration file parsed
          configuration successfully updated
          starting the nfd api controller
        error_strings: |
          panic
          fatal
          FATAL
        post: |
          # Verify clean shutdown
          ps aux | grep nfd-master | grep -v grep || true
    - name: Validation test
      runs: |
        test -f /etc/kubernetes/node-feature-discovery/nfd-worker.conf || (echo "Config file missing"; exit 1)
