package:
  name: node-gyp
  version: "11.1.0"
  epoch: 0
  description: "the npm package manager for javascript, mainline"
  copyright:
    - license: Artistic-2.0

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - nodejs
      - npm

pipeline:
  - name: npm install
    runs: |
      npm install -g ${{package.name}}@${{package.version}} -prefix ${{targets.destdir}}/usr

update:
  enabled: true
  github:
    identifier: nodejs/node-gyp
    use-tag: true
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - build-base
        - python3
        - gcc
        - make
  pipeline:
    - name: Check binary and version
      runs: |
        # Check node-gyp is installed and executable
        node-gyp --version
        node-gyp --help
    - name: Basic functionality test
      runs: |
        #!/bin/bash
        set -e

        # Create a test directory
        mkdir -p /tmp/gyp-test
        cd /tmp/gyp-test

        # Create a simple C++ addon
        cat <<-EOF > binding.gyp
        {
          "targets": [{
            "target_name": "hello",
            "sources": [ "hello.cc" ]
          }]
        }
        EOF

        cat <<-EOF > hello.cc
        #include <node.h>

        namespace demo {
          using v8::FunctionCallbackInfo;
          using v8::Isolate;
          using v8::Local;
          using v8::Object;
          using v8::String;
          using v8::Value;

          void Method(const FunctionCallbackInfo<Value>& args) {
            Isolate* isolate = args.GetIsolate();
            args.GetReturnValue().Set(String::NewFromUtf8(
                isolate, "world").ToLocalChecked());
          }

          void Initialize(Local<Object> exports) {
            NODE_SET_METHOD(exports, "hello", Method);
          }

          NODE_MODULE(NODE_GYP_MODULE_NAME, Initialize)
        }
        EOF

        # Configure and build the addon
        node-gyp configure
        node-gyp build

        echo "Basic compilation test successful!"
    - name: Test compiled addon
      runs: |
        #!/bin/bash
        set -e

        cd /tmp/gyp-test

        # Create a simple test script
        cat <<-EOF > test.js
        const addon = require('./build/Release/hello');
        if (addon.hello() !== 'world') {
          console.error('Addon test failed: unexpected output');
          process.exit(1);
        }
        console.log('Addon test successful!');
        EOF

        # Run the test
        node test.js
