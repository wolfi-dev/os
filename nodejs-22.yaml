package:
  name: nodejs-22
  version: "22.14.0" # On update, please check if -fdelete-null-pointer-checks is still required
  epoch: 0
  description: "JavaScript runtime built on V8 engine"
  dependencies:
    provides:
      - nodejs=${{package.full-version}}
  copyright:
    - license: MIT
  resources:
    cpu: 33
    memory: 64Gi

vars:
  py-version: 3.13

environment:
  contents:
    packages:
      - brotli-dev
      - build-base
      - busybox
      - c-ares-dev
      - ca-certificates-bundle
      - icu-dev
      - libuv-dev
      - linux-headers
      - nghttp2-dev
      - openssl-dev
      - py${{vars.py-version}}-jinja2
      - py${{vars.py-version}}-setuptools
      - python-${{vars.py-version}}-base
      - samurai
      - wolfi-base
      - zlib-dev
  environment:
    # https://github.com/wolfi-dev/os/issues/34075
    CXXFLAGS: -fdelete-null-pointer-checks

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/nodejs/node.git
      tag: v${{package.version}}
      expected-commit: 5d2feb257bcee090e57900eb51720171a6aa92f3

  - name: Configure and build
    runs: |
      # Add defines recommended in libuv readme.
      case "${{build.arch}}" in
      "aarch64")
         common_flags="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
         ;;
      "x86_64")
         common_flags="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -march=x86-64"
         ;;
      esac

      # Compiling with O2 instead of Os increases binary size by ~10%
      # (53.1 MiB -> 58.6 MiB), but also increases performance by ~20%
      # according to v8/web-tooling-benchmark. Node.js is quite huge anyway;
      # there are better options for size constrained environments.
      export CFLAGS="${CFLAGS/-Os/-O2} $common_flags"
      export CXXFLAGS="${CXXFLAGS/-Os/-O2} $common_flags"
      export CPPFLAGS="${CPPFLAGS/-Os/-O2} $common_flags"
      python${{vars.py-version}} configure.py --prefix=/usr \
        --shared-brotli \
        --shared-zlib \
        --shared-openssl \
        --shared-cares \
        --shared-nghttp2 \
        --shared-libuv \
        --ninja \
        --openssl-use-def-ca-store \
        --with-icu-default-data-dir=$(icu-config --icudatadir) \
        --with-intl=system-icu \
        --openssl-conf-name=openssl_conf \
        --without-corepack

        make BUILDTYPE=Release -j$(nproc)

  - uses: autoconf/make-install

  - runs: |
      make DESTDIR="$${{targets.destdir}}" install

  - uses: strip

  # Get rid of the bundled npm, we don't need it.
  - runs: |
      rm -rf "${{targets.destdir}}"/usr/lib/node_modules
      rm "${{targets.destdir}}"/usr/bin/npm
      rm "${{targets.destdir}}"/usr/bin/npx

update:
  enabled: true
  github:
    identifier: nodejs/node
    strip-prefix: v
    use-tag: true
    tag-filter: v22.

test:
  pipeline:
    - name: Verify Node.js Installation
      runs: |
        node --version || exit 1
        node --help
    - name: Execute Basic JavaScript
      runs: |
        cat <<'EOF' > test.js
        console.log('Hello, World!');
        EOF
        node test.js | grep 'Hello, World!' || exit 1
    - name: Test International Number Formatting
      runs: |
        cat <<'EOF' > testIntl.js
        console.log(new Intl.NumberFormat('en-EN').format(1234.56));
        console.log(new Intl.NumberFormat('de-DE').format(1234.56));
        EOF
        node testIntl.js | grep '1,234.56' && node testIntl.js | grep '1.234,56' || exit 1
