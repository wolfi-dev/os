package:
  name: onnxruntime
  version: 1.22.0
  epoch: 0
  description: Cross-platform, high performance ML inferencing and training accelerator
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - abseil-cpp-dev
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - coreutils
      - curl
      - eigen-dev
      - gcc-14-default
      - patch
      - protobuf-c-dev
      - protobuf-dev
      - py3-numpy
      - py3.11-pytorch
      - python3
      - python3-dev
      - re2-dev
      - zlib-dev
  environment:
    CXXFLAGS: "-fdelete-null-pointer-checks"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/microsoft/onnxruntime.git
      tag: v${{package.version}}
      expected-commit: f217402897f40ebba457e2421bc0a4702771968e

  - runs: |
      # Find system nlohmann-json
      sed 's|3.10 ||g' \
        -i cmake/external/onnxruntime_external_deps.cmake

      # Find system chrono-date
      sed -e 's|${DEP_SHA1_date}|&\n \ \ \ \ \ \FIND_PACKAGE_ARGS NAMES date|g' \
          -e 's|date_interface|date::date-tz|g' \
          -i cmake/external/onnxruntime_external_deps.cmake \
          -i cmake/onnxruntime_common.cmake \
          -i cmake/onnxruntime_unittests.cmake

      # Find system abseil-cpp
      sed 's|ABSL_PATCH_COMMAND}|&\n\ \ \ \ \FIND_PACKAGE_ARGS NAMES absl|g' \
        -i cmake/external/abseil-cpp.cmake

      # Find system cxxopts
      sed 's|${DEP_SHA1_cxxopts}|&\n\ \ \ \ \FIND_PACKAGE_ARGS NAMES cxxopts|g' \
        -i cmake/external/onnxruntime_external_deps.cmake

      # Find system nsync
      # NOTE check line number after every release
      sed -e 's|NAMES nsync|&_cpp|g' \
          -e '368aadd_library(nsync::nsync_cpp ALIAS nsync_cpp)' \
          -i cmake/external/onnxruntime_external_deps.cmake

  # - runs: |
  #     ./build.sh --allow_running_as_root --skip_submodule_sync --config Release --update --build --parallel $(nproc --ignore=2)  --build_shared_lib --cmake_extra_defines CMAKE_INSTALL_PREFIX=/usr BUILD_TESTING=off
  #     make install -C ./build/Linux/Release/ DESTDIR=${{targets.contextdir}}
  #     # make install -C ./build/Linux/Release/

  - uses: cmake/configure
    with:
      opts: |
        -S cmake \
        -Wno-dev \
        -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
        -DBUILD_TESTING=OFF \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -Donnxruntime_ENABLE_PYTHON=ON \
        -Donnxruntime_BUILD_SHARED_LIB=ON \
        -Donnxruntime_BUILD_UNIT_TESTS=OFF \
        -Donnxruntime_ENABLE_TRAINING=ON \
        -Donnxruntime_USE_DNNL=ON \
        -DCMAKE_CXX_STANDARD=17

  # -Donnxruntime_USE_PREINSTALLED_EIGEN=OFF \
  # -DCMAKE_BUILD_TYPE=None \
  # --compile-no-warning-as-error \

  - uses: cmake/build

  - uses: cmake/install

update:
  enabled: true
  github:
    identifier: microsoft/onnxruntime
    strip-prefix: v
