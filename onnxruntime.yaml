package:
  name: onnxruntime
  version: 1.22.1
  epoch: 0
  description: Cross-platform, high performance ML inferencing and training accelerator
  copyright:
    - license: MIT
  resources:
    memory: 64Gi

vars:
  pypi-package: onnxruntime

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - abseil-cpp-dev
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - coreutils
      - curl
      - eigen-dev
      - gcc-14-default
      - gtest-dev
      - patch
      - py3-build-base-dev
      - py3-flatbuffers
      - py3-numpy
      - py3-packaging
      - py3-protobuf
      - py3-setuptools
      - py3-wheel
      - python3
      - re2-dev
      - samurai
      - zlib-dev
  environment:
    CXXFLAGS: "-fdelete-null-pointer-checks"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/microsoft/onnxruntime.git
      tag: v${{package.version}}
      expected-commit: 89746dc19a0a1ae59ebf4b16df9acab8f99f3925

  - runs: |
      # Find system abseil-cpp
      sed 's|ABSL_PATCH_COMMAND}|&\n\ \ \ \ \FIND_PACKAGE_ARGS NAMES absl|g' \
        -i cmake/external/abseil-cpp.cmake

      # Find system nlohmann-json
      sed 's|3.10 ||g' \
        -i cmake/external/onnxruntime_external_deps.cmake

      # Find system chrono-date
      sed -e 's|${DEP_SHA1_date}|&\n \ \ \ \ \ \FIND_PACKAGE_ARGS NAMES date|g' \
          -e 's|date_interface|date::date-tz|g' \
          -i cmake/external/onnxruntime_external_deps.cmake \
          -i cmake/onnxruntime_common.cmake \
          -i cmake/onnxruntime_unittests.cmake


      # Find system cxxopts
      sed 's|${DEP_SHA1_cxxopts}|&\n\ \ \ \ \FIND_PACKAGE_ARGS NAMES cxxopts|g' \
        -i cmake/external/onnxruntime_external_deps.cmake

      # Find system nsync
      # NOTE check line number after every release
      sed -e 's|NAMES nsync|&_cpp|g' \
          -e '368aadd_library(nsync::nsync_cpp ALIAS nsync_cpp)' \
          -i cmake/external/onnxruntime_external_deps.cmake

  - runs: |
      cmake \
        --compile-no-warning-as-error \
        -S cmake \
        -B build \
        -Wno-dev \
        -G Ninja \
        -DCMAKE_POLICY_VERSION_MINIMUM=3.5 \
        -DCMAKE_BUILD_TYPE=None \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -Donnxruntime_ENABLE_PYTHON=ON \
        -Donnxruntime_BUILD_SHARED_LIB=ON \
        -Donnxruntime_BUILD_UNIT_TESTS=OFF \
        -DBUILD_TESTING=OFF \
        -Donnxruntime_ENABLE_TRAINING=ON \
        -Donnxruntime_ENABLE_LAZY_TENSOR=OFF \
        -Donnxruntime_USE_MPI=ON \
        -Donnxruntime_USE_DNNL=OFF \
        -Donnxruntime_USE_PREINSTALLED_EIGEN=OFF \
        -DCMAKE_CXX_STANDARD=17

      cmake --build build

      cp -f build/_deps/date-subbuild/cmake_install.cmake build/_deps/date-build
      cp -f build/_deps/cxxopts-subbuild/cmake_install.cmake build/_deps/cxxopts-build/
      cmake --install build

  - uses: strip

  - name: Fix Python build
    runs: |
      # Manually fix https://github.com/microsoft/onnxruntime/issues/24570
      mkdir onnxruntime/capi
      python setup.py --help # We have to call it like this once to generate the file we need.
      cp -rf build/onnxruntime/* onnxruntime

subpackages:
  - name: ${{package.name}}-dev
    description: ${{package.name}} development libraries
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - ${{package.name}}
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: ${{package.name}}-dev

  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: ${{vars.pypi-package}} installed for python${{range.key}}
    dependencies:
      provider-priority: ${{range.value}}
      runtime:
        - py${{range.key}}-coloredlogs
        - py${{range.key}}-flatbuffers
        - py${{range.key}}-numpy
        - py${{range.key}}-packaging
        - py${{range.key}}-protobuf
        - py${{range.key}}-sympy
      provides:
        - py3-${{vars.pypi-package}}
    pipeline:
      - uses: py/pip-build-install
    test:
      pipeline:
        - uses: test/tw/pip-check
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.pypi-package}}
        - uses: test/tw/ldd-check

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

update:
  enabled: true
  github:
    identifier: microsoft/onnxruntime
    strip-prefix: v
