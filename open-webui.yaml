package:
  name: open-webui
  version: 0.6.5
  epoch: 0
  description: User-friendly AI Interface (Supports Ollama, OpenAI API, ...)
  copyright:
    - license: BSD-3-Clause
  dependencies:
    runtime:
      - glib
      - libxext
      - libglvnd
      - libice
      - libsm
      - libstdc++
      - libx11
      - libxcb
      - python-${{vars.py-version}}-base
  options:
    # Don't depend on external libraries included in virtual environments
    no-depends: true
    # Don't resolve libraries installed in virtual environments as providers
    no-provides: true

vars:
  py-version: 3.12

environment:
  contents:
    packages:
      - busybox
      # Does not support NodeJS 23
      - nodejs-22
      - npm
      - python-${{vars.py-version}}

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 07d8460126a686de9a99e2662d06106e22c3f6b6
      repository: https://github.com/open-webui/open-webui
      tag: v${{package.version}}

  - name: Create venv
    runs: |
      export SOURCE_DATE_EPOCH=315532800

      # Create virtual env
      python -m venv venv
      source venv/bin/activate

      # Install open-webui
      pip install .

      # Cleanup installation
      find venv -type d -name '__pycache__' -exec rm -rf {} +
      find venv -type f -name '*.pyc' -exec rm -rf {} +
      find venv -type d -name "tests" -exec rm -rf {} +

      # Use Python in virtual environment
      sed -i "s|/home/build/venv|/usr/share/${{package.name}}|g" venv/pyvenv.cfg
      sed -i "s|/home/build/venv|/usr/share/${{package.name}}|g" venv/bin/*

      # Install virtual env
      mkdir -p ${{targets.contextdir}}/usr/share/${{package.name}}/
      cp -r venv/* ${{targets.contextdir}}/usr/share/${{package.name}}/

test:
  pipeline:
    # - uses: test/tw/ldd-check
    - name: Run open-webui server
      runs: |
        export PATH="/usr/share/${{package.name}}/bin:${PATH}"
        open-webui serve

update:
  enabled: true
  github:
    identifier: open-webui/open-webui
    strip-prefix: v
    tag-filter: v
