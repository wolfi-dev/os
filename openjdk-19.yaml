package:
  name: openjdk-19
  version: 19.0.2.7
  epoch: 6
  description:
  copyright:
    - license: GPL-2.0-or-later
  dependencies:
    runtime:
      - openjdk-19-jre

environment:
  contents:
    packages:
      - alsa-lib-dev
      - autoconf
      - automake
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - cups-dev
      - file
      - fontconfig-dev
      - freetype-dev
      - giflib-dev
      - lcms2-dev
      - libffi-dev
      - libjpeg-turbo-dev
      - libx11-dev
      - libxext-dev
      - libxi-dev
      - libxrandr-dev
      - libxrender-dev
      - libxt-dev
      - libxtst-dev
      - openjdk-18-default-jdk
      - zip
  environment:
    # This is needed to work around the error date 1970-01-01T00:00:00Z is not within the valid range 1980-01-01T00:00:02Z to 2099-12-31T23:59:59Z
    SOURCE_DATE_EPOCH: 315532900

# transform melange version to contain "+" rather than third "." so we can use a var in the fetch URL
var-transforms:
  - from: ${{package.version}}
    match: \.(\d+)$
    replace: +$1
    to: mangled-package-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/openjdk/jdk19u
      tag: jdk-${{vars.mangled-package-version}}
      expected-commit: 1d3871afcd30214ed6a5e6732b775ead3297aae5

  - working-directory: /home/build/googletest
    pipeline:
      - uses: fetch
        with:
          uri: https://github.com/google/googletest/archive/release-1.8.1.tar.gz
          expected-sha512: e6283c667558e1fd6e49fa96e52af0e415a3c8037afe1d28b7ff1ec4c2ef8f49beb70a9327b7fc77eb4052a58c4ccad8b5260ec90e4bceeac7a46ff59c4369d7

  - uses: patch
    with:
      patches: FixNullPtrCast.patch JDK-8282306_disable-test.patch

  - runs: chmod +x configure

  # Note that despite using --with-extra-cflags, --with-extra-cxxflags, and
  # --with-extra-ldflags, the configure still produces warnings like:
  # https://github.com/wolfi-dev/os/issues/18747
  - uses: autoconf/configure
    with:
      opts: |
        --with-extra-cflags="$CFLAGS" \
        --with-extra-cxxflags="$CXXFLAGS" \
        --with-extra-ldflags="$LDFLAGS" \
        --with-boot-jdk=/usr/lib/jvm/java-18-openjdk \
        --prefix=/usr/lib/jvm/java-19-openjdk \
        --with-vendor-name=wolfi \
        --with-vendor-url=https://wolfi.dev \
        --with-vendor-bug-url=https://github.com/wolfi-dev/os/issues \
        --with-version-opt="wolfi-r${{package.epoch}}" \
        --disable-warnings-as-errors \
        --disable-precompiled-headers \
        --enable-dtrace=no \
        --with-zlib=system \
        --with-native-debug-symbols=none \
        --with-jvm-variants=server \
        --with-debug-level=release \
        --with-jtreg=no  \
        --with-libpng=system \
        --with-jvm-variants=server \
        --with-debug-level=release \
        --with-libjpeg=system \
        --with-giflib=system \
        --with-lcms=system \
        --with-gtest="/home/build/googletest"

  - runs: make jdk-image

  # Check we built something valid
  - runs: |
      _java_bin="./build/*-server-release/images/jdk/bin"

      $_java_bin/javac -d . HelloWorld.java
      $_java_bin/java HelloWorld

      # NOTE: Disable flakey tests for now as we're seeing builds hang on aarch64
      # # run the gtest unittest suites
      # make test-hotspot-gtest

  - runs: |
      _java_home="usr/lib/jvm/java-19-openjdk"

      mkdir -p "${{targets.destdir}}"/$_java_home
      cp -r build/*-server-release/images/jdk/* "${{targets.destdir}}"/$_java_home
      rm "${{targets.destdir}}"/$_java_home/lib/src.zip

  - uses: strip

subpackages:
  - name: "openjdk-19-jre"
    description: "OpenJDK 19 Java Runtime Environment"
    dependencies:
      runtime:
        - freetype
        - libfontconfig1
        - openjdk-19-jre-base
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-19-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/lib
          mv "${{targets.destdir}}"/$_java_home/lib/libawt_xawt.so \
              "${{targets.destdir}}"/$_java_home/lib/libfontmanager.so \
              "${{targets.destdir}}"/$_java_home/lib/libjavajpeg.so \
              "${{targets.destdir}}"/$_java_home/lib/libjawt.so \
              "${{targets.destdir}}"/$_java_home/lib/libjsound.so \
              "${{targets.destdir}}"/$_java_home/lib/liblcms.so \
              "${{targets.destdir}}"/$_java_home/lib/libsplashscreen.so \
              "${{targets.subpkgdir}}"/$_java_home/lib
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: $(basename ${{targets.contextdir}})

  - name: "openjdk-19-jre-base"
    description: "OpenJDK 19 Java Runtime Environment (headless)"
    dependencies:
      runtime:
        - java-common
        - java-cacerts
    pipeline:
      - runs: |
          _java_home="usr/lib/jvm/java-19-openjdk"

          mkdir -p "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/lib \
             "${{targets.subpkgdir}}"/$_java_home

          mkdir -p "${{targets.subpkgdir}}"/$_java_home/bin
          for i in java \
                    jfr \
                    jrunscript \
                    jwebserver \
                    keytool \
                    rmiregistry; do
            mv "${{targets.destdir}}"/$_java_home/bin/$i "${{targets.subpkgdir}}"/$_java_home/bin/$i
          done

          mv "${{targets.destdir}}"/$_java_home/legal "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/conf "${{targets.subpkgdir}}"/$_java_home
          mv "${{targets.destdir}}"/$_java_home/release "${{targets.subpkgdir}}"/$_java_home
          cp ASSEMBLY_EXCEPTION \
              LICENSE \
              README.md \
             "${{targets.subpkgdir}}"/$_java_home

          # symlink to shared java cacerts store
          rm -f "${{targets.subpkgdir}}"/$_java_home/lib/security/cacerts
          ln -sf /etc/ssl/certs/java/cacerts \
            "${{targets.subpkgdir}}"/$_java_home/lib/security/cacerts

          # symlink for `java-common` to work (which expects jre in $_java_home/jre)
          ln -sf . "${{targets.subpkgdir}}/$_java_home/jre"

  - name: "openjdk-19-jmods"
    description: "OpenJDK 19 jmods"
    dependencies:
      provides:
        - openjdk-jmods=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-19-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-19-openjdk/jmods \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-19-openjdk

  - name: "openjdk-19-doc"
    description: "OpenJDK 19 Documentation"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-19-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-19-openjdk/man \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-19-openjdk

  - name: "openjdk-19-demos"
    description: "OpenJDK 19 Demos"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm/java-19-openjdk
          mv "${{targets.destdir}}"/usr/lib/jvm/java-19-openjdk/demo \
             "${{targets.subpkgdir}}"/usr/lib/jvm/java-19-openjdk

  - name: "openjdk-19-default-jvm"
    description: "Use the openjdk-19 JVM as the default JVM"
    dependencies:
      runtime:
        - openjdk-19-jre
      provides:
        - default-jvm=1.19
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib/jvm
          ln -sf java-19-openjdk "${{targets.subpkgdir}}"/usr/lib/jvm/default-jvm

  - name: "openjdk-19-default-jdk"
    description: "Use the openjdk-19 JVM as the default JVM with the JDK installed"
    dependencies:
      runtime:
        - openjdk-19-default-jvm
        - openjdk-19
      provides:
        - default-jdk=1.19

update:
  enabled: false
  exclude-reason: This version is EOL and only built to enable bootstrapping
