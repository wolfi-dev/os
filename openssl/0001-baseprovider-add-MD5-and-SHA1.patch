From 279a6df738fa347704124eea35f15f42e0d31a11 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.ledkov@surgut.co.uk>
Date: Fri, 15 Aug 2025 19:43:56 +0100
Subject: [PATCH] baseprovider: add MD5 and SHA1

Open up access to MD5 and SHA1 from the base provider, this allows
access to MD5 for non-security purposes from higher level languages
such as dotnet, python and others.

Crutially, this does not allow fips provider to use them for
cryptographically secure purposes such as calculating HMAC, DRBG,
PRNG, Signatures, KDF, etc.
---
 providers/baseprov.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/providers/baseprov.c b/providers/baseprov.c
index c7c72cbc8e..605e447daa 100644
--- a/providers/baseprov.c
+++ b/providers/baseprov.c
@@ -68,6 +68,19 @@ static int base_get_params(void *provctx, OSSL_PARAM params[])
     return 1;
 }
 
+/*
+ * open up access to MD5 and SHA1 for digest/crc non-security
+ * purposes, does not allow to be used in HMAC/DRBG/PRNG/KEM/Signature
+ * by the fips provider, this allows us to completely remove SHA1 from
+ * the fips provider.
+ */
+static const OSSL_ALGORITHM base_digests[] = {
+    { PROV_NAMES_SHA1, "provider=base", ossl_sha1_functions },
+    { PROV_NAMES_MD5, "provider=base", ossl_md5_functions },
+    { PROV_NAMES_MD5_SHA1, "provider=base", ossl_md5_sha1_functions },
+    { NULL, NULL, NULL }
+};
+
 static const OSSL_ALGORITHM base_encoder[] = {
 #define ENCODER_PROVIDER "base"
 #include "encoders.inc"
@@ -108,6 +121,8 @@ static const OSSL_ALGORITHM *base_query(void *provctx, int operation_id,
         return base_encoder;
     case OSSL_OP_DECODER:
         return base_decoder;
+    case OSSL_OP_DIGEST:
+        return base_digests;
     case OSSL_OP_STORE:
         return base_store;
     case OSSL_OP_RAND:
-- 
2.48.1

