package:
  name: opentelemetry-java-instrumentation
  version: "2.16.0"
  epoch: 0
  description: OpenTelemetry auto-instrumentation and instrumentation libraries for Java
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - busybox

vars:
  java-version: "21"

environment:
  contents:
    packages:
      - busybox
      - libudev
      - openjdk-${{vars.java-version}}
      # needed to build on aarch64
      - openjdk-11
      - openjdk-17
  environment:
    JAVA_HOME: /usr/lib/jvm/java-${{vars.java-version}}-openjdk

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/open-telemetry/opentelemetry-java-instrumentation
      tag: v${{package.version}}
      expected-commit: d53c0e95b6ba6fdc62d8cda0c370f9189838f932

  # upstream simply adds the platform independent jar to the destdir
  # https://github.com/open-telemetry/opentelemetry-operator/blob/main/autoinstrumentation/java/Dockerfile
  - runs: |
      ./gradlew :javaagent:assemble
      cp javaagent/build/libs/opentelemetry-javaagent-${{package.version}}.jar ${{targets.destdir}}/javaagent.jar

update:
  enabled: true
  github:
    identifier: open-telemetry/opentelemetry-java-instrumentation
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        # complains /bin/sh: javac: not found if not added
        - openjdk-21-default-jdk
  pipeline:
    - runs: |
        test -f /javaagent.jar
    - name: Run Java with agent
      runs: |
        echo 'public class Hello { public static void main(String[] args) { System.out.println("Hello!"); } }' > Hello.java
        javac Hello.java
        java -javaagent:/javaagent.jar Hello | grep -q "Hello!"
    - name: Validate agent initialization output
      runs: |
        java -javaagent:/javaagent.jar -version 2>&1 | grep -qi "opentelemetry"
