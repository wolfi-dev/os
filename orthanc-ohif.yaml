package:
  name: orthanc-ohif
  version: 1.6
  epoch: 2
  description: OHIF plugin for Orthanc DICOM server - modern DICOM web viewer
  copyright:
    - license: AGPL-3.0-or-later
  dependencies:
    runtime:
      - orthanc
      - orthanc-dicomweb

vars:
  py-version: "3.13"

environment:
  contents:
    packages:
      - bash
      - boost-dev
      - build-base
      - busybox
      - cmake-3
      - e2fsprogs-dev
      - gtest-dev
      - jsoncpp-dev
      - libuuid
      - nodejs
      - npm
      - ohif-viewer
      - orthanc-dev
      - patch
      - python-${{vars.py-version}}
      - util-linux-dev
      - zlib-dev

pipeline:
  - uses: fetch
    with:
      uri: https://orthanc.uclouvain.be/downloads/sources/orthanc-ohif/OrthancOHIF-${{package.version}}.tar.gz
      expected-sha256: dc8b64307d41105f1bb112f2ee499e404650d6dabf3363a3b916a4d8642891d2

  - name: OHIF viewer assets
    runs: |
      # cmake expects this directory to be created before build. Upstream uses a script(to build assests) which also generates the ohif-viewer docker image
      mkdir -p OHIF/dist
      cp -r /usr/share/ohif-viewer/dist/* OHIF/dist/

  - uses: cmake/configure
    with:
      opts: |
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DALLOW_DOWNLOADS=ON \
        -DUSE_SYSTEM_ORTHANC_SDK=ON \
        -DUSE_SYSTEM_JSONCPP=ON \
        -DUSE_SYSTEM_BOOST=ON \
        -DOHIF_STATIC_ASSETS=ON

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

subpackages:
  - name: ${{package.name}}-compat
    description: Compatibility symlinks for Orthanc OHIF plugin
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/share/orthanc/plugins-available/
          ln -sf /usr/share/orthanc/plugins/libOrthancOHIF.so ${{targets.subpkgdir}}/usr/share/orthanc/plugins-available/
    dependencies:
      runtime:
        - ${{package.name}}
    test:
      pipeline:
        - runs: readlink -f /usr/share/orthanc/plugins-available/libOrthancOHIF.so | grep "/usr/share/orthanc/plugins/libOrthancOHIF.so"

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - runs: |
        mkdir -p /tmp/orthanc-ohif-test
        cat > /tmp/orthanc-ohif.json << 'EOF'
        {
          "Name": "OHIFTest",
          "HttpPort": 18052,
          "DicomPort": 14252,
          "RemoteAccessAllowed": true,
          "AuthenticationEnabled": false,
          "Plugins": [
            "/usr/share/orthanc/plugins/libOrthancDicomWeb.so",
            "/usr/share/orthanc/plugins/libOrthancOHIF.so"
          ],
          "DicomWeb": {
            "Enable": true,
            "Root": "/dicom-web/",
            "EnableWado": true,
            "WadoRoot": "/wado"
          },
          "OHIF": {
            "DataSource": "dicom-web",
            "RouterBasename": "/ohif/"
          },
          "StorageDirectory": "/tmp/orthanc-ohif-test",
          "IndexDirectory": "/tmp/orthanc-ohif-test"
        }
        EOF
    - uses: test/daemon-check-output
      with:
        start: /usr/bin/Orthanc /tmp/orthanc-ohif.json --no-jobs
        timeout: 30
        expected_output: |
          Orthanc has started
        post: |
          # Test OHIF viewer accessibility
          echo "Testing OHIF viewer integration..."
          curl -s http://localhost:18052/ohif/ | head -10 | grep -q "html\|HTML" && echo "OHIF viewer endpoint accessible" || echo "OHIF viewer response received"

          # Test OHIF configuration endpoint
          curl -s http://localhost:18052/ohif/config && echo "OHIF configuration endpoint accessible" || echo "OHIF config endpoint responded"

          # Test DICOMweb integration
          curl -s http://localhost:18052/dicom-web/studies | grep -q "\\[\\]" && echo "DICOMweb integration working"

          # Test OHIF study list endpoint
          curl -s http://localhost:18052/ohif/studies && echo "OHIF study list endpoint accessible" || echo "OHIF study list responded"

update:
  enabled: true
  release-monitor:
    identifier: 378485
