package:
  name: pdns
  version: "5.2.5"
  epoch: 0
  description: PowerDNS Authoritative Server
  copyright:
    - license: GPL-2.0-or-later
    - license: LicenseRef-notice
      license-path: NOTICE
  scriptlets:
    pre-install: |
      #!/bin/sh
      addgroup -S pdns 2>/dev/null
      adduser -S -D -H -h /var/empty -s /bin/false -G pdns -g pdns pdns 2>/dev/null
      exit 0

vars:
  py-version: 3.12 # Pinning 3.12 due to imghdr. See: https://peps.python.org/pep-0594/#imghdr
  lua-version: 5.4 # Pinning latest lua version to pass cmake

environment:
  contents:
    packages:
      - bind-dev
      - binutils
      - bison
      - boost-dev
      - build-base
      - busybox
      - ca-certificates-bundle
      - curl-dev
      - file
      - flex
      - fstrm-dev
      - geoip-dev
      - krb5-dev
      - libcap-dev
      - libmaxminddb-dev
      - libsodium-dev
      - libsystemd
      - libtool
      - lmdb-dev
      - lua${{vars.lua-version}}-dev
      - luajit-dev
      - mariadb-connector-c-dev
      - mariadb-dev
      - mtdev-dev
      - net-snmp-dev
      - openldap-dev
      - openssl-dev
      - pkgconf-dev
      - postgresql-dev
      - protobuf-dev
      - py${{vars.py-version}}-virtualenv
      - python-${{vars.py-version}}
      - ragel
      - rust
      - sqlite-dev
      - systemd
      - systemd-dev
      - unixodbc-dev
      - util-linux-dev
      - yaml-cpp-dev
      - zeromq-dev

data:
  - name: backends
    items:
      bind: bind
      geoip: geoip
      gmysql: gmysql
      godbc: godbc
      gpgsql: gpgsql
      gsqlite3: gsqlite3
      ldap: ldap
      lmdb: lmdb
      lua2: lua2
      pipe: pipe
      remote: remote

  - name: tools
    items:
      calidns: calidns
      dnsbulktest: dnsbulktest
      dnsgram: dnsgram
      dnspcap2calidns: dnspcap2calidns
      dnspcap2protobuf: dnspcap2protobuf
      dnsreplay: dnsreplay
      dnsscan: dnsscan
      dnsscope: dnsscope
      dnstcpbench: dnstcpbench
      dnswasher: dnswasher
      dumresp: dumresp
      ixplore: ixplore
      nproxy: nproxy
      nsec3dig: nsec3dig
      pdns_notify: pdns_notify
      saxfr: saxfr
      sdig: sdig
      stubquery: stubquery
      zone2json: zone2json
      zone2ldap: zone2ldap
      zone2sql: zone2sql

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/PowerDNS/pdns
      expected-commit: 3955b468e9f9cbf81590f86f8e2cc6a75f4ff889
      tag: rec-${{package.version}}

  - uses: autoconf/configure
    with:
      opts: |
        --sbindir=/usr/bin \
        --with-modules="" \
        --with-dynmodules="bind geoip ldap lmdb lua2 gmysql godbc pipe gpgsql remote gsqlite3" \
        --enable-tools \
        --enable-unit-tests \
        --enable-systemd \
        --disable-static \
        --enable-remotebackend-zeromq \
        --with-libcrypto=/usr \
        --enable-ixfrdist \
        --enable-reproducible

  - uses: autoconf/make

  - uses: autoconf/make-install

  - runs: PDNS_TEST_NO_IPV6=1 make check

  - name: Install files
    runs: |
      mkdir -p ${{targets.destdir}}/etc/init.d/
      install -Dm755 pdns.initd ${{targets.destdir}}/etc/init.d/pdns
      install -Dm755 pdns.conf ${{targets.destdir}}/etc/pdns/pdns.conf

  - uses: strip

subpackages:
  - name: pdns-recursor
    description: PowerDNS Recursive Server
    scriptlets:
      pre-install: |
        #!/bin/sh
        addgroup -S recursor 2>/dev/null
        adduser -S -D -H -h /var/empty -s /bin/false -G recursor -g recursor recursor 2>/dev/null
        exit 0
    pipeline:
      - working-directory: ./pdns/recursordist
        pipeline:
          - uses: autoconf/configure
            with:
              opts: |
                --sysconfdir=/etc/powerdns \
                --sbindir=/usr/bin \
                --enable-dns-over-tls \
                --enable-unit-tests \
                --enable-snmp \
                --enable-dnstap \
                --enable-nod \
                --enable-libsodium \
                --with-lua=lua${{vars.lua-version}} \
                --with-libcrypto=/usr \
                --with-libcap
          - uses: autoconf/make
          - uses: autoconf/make-install
          - runs: PDNS_TEST_NO_IPV6=1 make check
      - name: Install files
        runs: |
          mkdir -p ${{targets.contextdir}}/etc/init.d/
          install -Dm755 pdns-recursor.initd ${{targets.contextdir}}/etc/init.d/pdns-recursor
          install -Dm755 recursor.conf ${{targets.contextdir}}/etc/pdns/recursor.conf
      - uses: strip
    test:
      environment:
        contents:
          packages:
            - pdns-recursor-compat
            - wait-for-it
        accounts:
          groups:
            - groupname: pdns
              gid: 953
          users:
            - username: pdns
              gid: 953
              uid: 953
          run-as: 0 # To bind :53 on the CI
        environment:
          TINI_SUBREAPER: 1
          DEBUG_CONFIG: yes
      pipeline:
        - uses: test/tw/ldd-check
        - runs: |
            pdns_recursor --help
            rec_control --help
        - name: "start daemon on localhost"
          uses: test/daemon-check-output
          with:
            start: "/usr/bin/tini -- /usr/local/sbin/pdns_recursor-startup"
            timeout: 30
            expected_output: |
              YAML config found and processed
              Enabled TCP data-ready
              Listening for queries
              Launching worker threads
              Launching tcpworker threads
              Enabled multiplexer
            post: |
              wait-for-it -t 5 --strict localhost:8082 -- echo ":8082 is up"
              wait-for-it -t 5 --strict localhost:53 -- echo ":53 is up"

  - name: pdns-recursor-compat
    description: Compatibility package for pdns-recursor
    dependencies:
      runtime:
        - python-${{vars.py-version}}
        - py${{vars.py-version}}-jinja2
        - tini
        - libcap-utils
        - merged-usrsbin
        - wolfi-baselayout
    pipeline:
      - working-directory: ./dockerdata
        pipeline:
          - runs: |
              # https://github.com/PowerDNS/pdns/blob/master/Dockerfile-recursor
              mkdir -p ${{targets.contextdir}}/etc/powerdns
              mkdir -p ${{targets.contextdir}}/usr/local/sbin/
              mkdir -p ${{targets.contextdir}}/etc/powerdns/recursor.d
              mkdir -p ${{targets.contextdir}}/var/run/pdns-recursor
              mkdir -p ${{targets.contextdir}}/etc/powerdns/templates.d
              install -Dm755 startup.py ${{targets.contextdir}}/usr/local/sbin/pdns_recursor-startup
              install -Dm755 recursor.conf ${{targets.contextdir}}/etc/powerdns/recursor.conf
              ln -sf /usr/bin/pdns_recursor ${{targets.contextdir}}/usr/local/sbin/pdns_recursor
              ln -sf /usr/bin/rec_control ${{targets.contextdir}}/usr/local/sbin/rec_control
    test:
      pipeline:
        - runs: |
            test "$(readlink /usr/local/sbin/pdns_recursor)" = "/usr/bin/pdns_recursor"
            test "$(readlink /usr/local/sbin/rec_control)" = "/usr/bin/rec_control"

  - range: backends
    name: pdns-backend-${{range.key}}
    description: PowerDNS ${{range.key}} backend
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/lib/pdns
          mv ${{targets.destdir}}/usr/lib/pdns/lib${{range.key}}backend.so ${{targets.contextdir}}/usr/lib/pdns/lib${{range.key}}backend.so
    test:
      pipeline:
        # gmysql backend needs libmariadb.so.3 on the runtime, which we can't provide runtime deps conditionally when using ranges.
        # Apko would resolve it when building anyway, so we skip the ldd check only for the gmysql backend.
        - if: '"${{range.key}}" != "gmysql"'
          uses: test/tw/ldd-check

  - range: tools
    name: pdns-tool-${{range.key}}
    description: PowerDNS ${{range.key}} tool
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/bin
          mv ${{targets.destdir}}/usr/bin/${{range.key}} ${{targets.contextdir}}/usr/bin/${{range.key}}
    test:
      pipeline:
        - uses: test/tw/ldd-check
        - runs: |
            # saxfr is a special case, it requires IP-address, port, zone to run and does not have a --help option.
            # So we handle it separately.
            if [ "${{range.key}}" != "saxfr" ]; then
              ${{range.key}} --help
            else
              saxfr 127.0.0.1 53 example.com
            fi

  - name: pdns-backends-all
    dependencies:
      runtime:
        - pdns-backend-bind
        - pdns-backend-geoip
        - pdns-backend-godbc
        - pdns-backend-gmysql
        - pdns-backend-gpgsql
        - pdns-backend-gsqlite3
        - pdns-backend-ldap
        - pdns-backend-lmdb
        - pdns-backend-lua2
        - pdns-backend-pipe
        - pdns-backend-remote
    pipeline:
      - runs: mkdir -p ${{targets.contextdir}}
    description: Virtual package that installs all PowerDNS backends

  - name: pdns-tools-all
    dependencies:
      runtime:
        - pdns-tool-calidns
        - pdns-tool-dnsbulktest
        - pdns-tool-dnsgram
        - pdns-tool-dnspcap2calidns
        - pdns-tool-dnspcap2protobuf
        - pdns-tool-dnsreplay
        - pdns-tool-dnsscan
        - pdns-tool-dnsscope
        - pdns-tool-dnstcpbench
        - pdns-tool-dnswasher
        - pdns-tool-dumresp
        - pdns-tool-ixplore
        - pdns-tool-nproxy
        - pdns-tool-nsec3dig
        - pdns-tool-pdns_notify
        - pdns-tool-saxfr
        - pdns-tool-sdig
        - pdns-tool-stubquery
        - pdns-tool-zone2json
        - pdns-tool-zone2ldap
        - pdns-tool-zone2sql
    pipeline:
      - runs: mkdir -p ${{targets.contextdir}}
    description: Virtual package that installs all PowerDNS tools

  - name: pdns-dev
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - pdns
    description: pdns dev
    test:
      pipeline:
        - uses: test/pkgconf
        - uses: test/tw/ldd-check

  - name: pdns-doc
    description: pdns docs
    pipeline:
      - uses: split/manpages
    test:
      pipeline:
        - uses: test/docs

update:
  enabled: true
  ignore-regex-patterns:
    - -alpha
    - -beta
    - -rc
  github:
    identifier: PowerDNS/pdns
    strip-prefix: rec-
    tag-filter: rec-
    use-tag: true

test:
  environment:
    contents:
      packages:
        - pdns-backends-all
        - pdns-tools-all
  pipeline:
    - uses: test/tw/ldd-check
    - runs: |
        pdns_control --help
        pdns_notify --help
        pdns_server --help
        pdnsutil --help
