package:
  name: perl-config-autoconf
  version: "0.319"
  epoch: 0
  description: Config::AutoConf - A module to implement some of AutoConf macros in pure perl
  copyright:
    - license: GPL-1.0-or-later OR Artistic-1.0-Perl

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - perl-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/ambs/Config-AutoConf.git
      expected-commit: 7acb5b386469f68ecb344ccdaff7193a8869bdd8
      tag: ${{package.version}}

  - runs: PERL_MM_USE_DEFAULT=1 perl Makefile.PL

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: perl/cleanup

  - uses: strip

test:
  environment:
    contents:
      packages:
        - build-base
        - gcc
        - perl
        - perl-capture-tiny
  pipeline:
    - name: Verify module loading
      runs: |
        perl -e "use Config::AutoConf; print 'Config::AutoConf loaded successfully\n'" || exit 1
    - name: Test basic functionality
      runs: |
        perl <<-'EOF'
        use Config::AutoConf;
        use strict;
        use warnings;

        # Create a Config::AutoConf instance
        my $ac = Config::AutoConf->new();

        # Test basic methods exist and work
        eval {
          # Test check_prog method
          my $cc = $ac->check_prog('cc');
          print "Found C compiler: " . ($cc || "none") . "\n";

          # Test check_header method with standard C header
          my $has_stdio = $ac->check_header('stdio.h');
          print "stdio.h header check: " . ($has_stdio ? "found" : "not found") . "\n";
          unless ($has_stdio) {
            print "FAIL: Expected stdio.h to be found\n";
            exit 1;
          }

          # Test check_lib method with standard C library
          my $has_c_lib = $ac->check_lib('c', 'printf');
          print "libc printf check: " . ($has_c_lib ? "found" : "not found") . "\n";
          unless ($has_c_lib) {
            print "FAIL: Expected libc printf to be found\n";
            exit 1;
          }

          # Test check_func method
          my $has_malloc = $ac->check_func('malloc');
          print "malloc function check: " . ($has_malloc ? "found" : "not found") . "\n";
          unless ($has_malloc) {
            print "FAIL: Expected malloc function to be found\n";
            exit 1;
          }

          print "All basic functionality tests completed successfully!\n";
        };

        if ($@) {
          print "Test failed with error: $@\n";
          exit 1;
        }
        EOF
    - name: Test compilation checks
      runs: |
        perl <<-'EOF'
        use Config::AutoConf;
        use strict;
        use warnings;

        my $ac = Config::AutoConf->new();

        eval {
          # Test that we can compile simple C code
          my $can_compile = $ac->compile_if_else('#include <stdio.h>
          int main() { printf("test"); return 0; }');
          print "Basic C compilation test: " . ($can_compile ? "passed" : "failed") . "\n";
          unless ($can_compile) {
            print "FAIL: Expected basic C compilation to succeed\n";
            exit 1;
          }

          # Test check_type functionality
          my $has_int = $ac->check_type('int');
          print "int type check: " . ($has_int ? "found" : "not found") . "\n";
          unless ($has_int) {
            print "FAIL: Expected int type to be found\n";
            exit 1;
          }

          print "Compilation tests completed successfully!\n";
        };

        if ($@) {
          print "Compilation test failed: $@\n";
          exit 1;
        }
        EOF

update:
  enabled: true
  version-transform:
    - match: _
      replace: .
  github:
    identifier: ambs/Config-AutoConf
    use-tag: true
