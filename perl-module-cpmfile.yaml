package:
  name: perl-module-cpmfile
  version: "0.006"
  epoch: 0
  description: Perl module for parsing cpmfiles
  copyright:
    - license: GPL-1.0-or-later OR Artistic-1.0-Perl
  dependencies:
    runtime:
      - perl
      - perl-module-cpanfile
      - perl-yaml-pp

environment:
  contents:
    packages:
      - busybox
      - perl
      - perl-extutils-config
      - perl-extutils-helpers
      - perl-extutils-installpaths
      - perl-module-build-tiny
      - perl-module-cpanfile
      - perl-yaml-pp

pipeline:
  - uses: fetch
    with:
      expected-sha256: 1bc976e2937724896c9f6eae9e5dca981e27f98430b92de270ee3514fd00ac0f
      uri: https://cpan.metacpan.org/authors/id/S/SK/SKAJI/Module-cpmfile-${{package.version}}.tar.gz

  - name: Build and Test
    runs: |
      export CFLAGS=$(perl -MConfig -E 'say $Config{ccflags}')
      perl Build.PL --installdirs=vendor

  - runs: |
      export CFLAGS=$(perl -MConfig -E 'say $Config{ccflags}')
      perl Build
      perl Build test

  - runs: |
      perl Build install --destdir=${{targets.destdir}}
      find ${{targets.destdir}} \( -name perllocal.pod -o -name .packlist \) -delete

update:
  enabled: true
  release-monitor:
    identifier: 227997

subpackages:
  - name: ${{package.name}}-doc
    description: ${{package.name}} documentation
    pipeline:
      - uses: split/manpages
    test:
      pipeline:
        - uses: test/docs

test:
  pipeline:
    - name: Smoke test
      runs: echo "use Module::cpmfile;" | perl
    - name: Ensure parser is working
      runs: |
        # Taken from https://github.com/skaji/relocatable-perl/blob/main/build/cpm.yml
        tee cpm.yml <<EOF
        prereqs:
          runtime:
            requires:
              CPAN::Perl::Releases::MetaCPAN:
              Devel::PatchPerl:
              HTTP::Tinyish:
              IPC::Run3:
              version:
        EOF

        perl <<'EOF'
        use strict;
        use Module::cpmfile;
        my $cpmfile = Module::cpmfile->load("cpm.yml");
        my $reqs = $cpmfile->effective_requirements(undef, ["runtime"], ["requires"]);
        EOF
