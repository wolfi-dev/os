package:
  name: perl-uri
  version: "5.34"
  epoch: 0
  description: Uniform Resource Identifiers (absolute and relative)
  copyright:
    - license: GPL-1.0-or-later OR Artistic-1.0-Perl

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - perl
      - perl-dev

pipeline:
  - uses: fetch
    with:
      expected-sha512: 990222d769bd1b85416a0814c2c80a8738d562b907e96ada1d45e1e9e751534f5f30fcca76339e1b6fb873fbc6e02eadc6dfdf1969bf8056ddf9c7bf59894c13
      uri: https://cpan.metacpan.org/authors/id/O/OA/OALDERS/URI-${{package.version}}.tar.gz

  - uses: perl/make

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: perl/cleanup

  - uses: strip

subpackages:
  - name: perl-uri-doc
    pipeline:
      - uses: split/manpages
    description: perl-uri manpages
    test:
      pipeline:
        - uses: test/docs

update:
  enabled: true
  release-monitor:
    identifier: 3485

test:
  environment:
    contents:
      packages:
        - perl
  pipeline:
    - name: Verify Installation
      runs: |
        # Check if the URI module can be imported in Perl
        perl -MURI -e 'print "URI module is installed\n"' || exit 1
        echo "perl-uri package is installed."
    - name: Test URI Creation
      runs: |
        # Test creating a simple URI and checking its components
        perl -MURI -e '
        my $uri = URI->new("http://example.com:8080/foo/bar?query=123#fragment");
        die "Scheme is incorrect" unless $uri->scheme eq "http";
        die "Host is incorrect" unless $uri->host eq "example.com";
        die "Port is incorrect" unless $uri->port == 8080;
        die "Path is incorrect" unless $uri->path eq "/foo/bar";
        die "Query is incorrect" unless $uri->query eq "query=123";
        die "Fragment is incorrect" unless $uri->fragment eq "fragment";
        print "URI creation and component checks passed.\n";'
    - name: Test Relative URI Resolution
      runs: |
        # Test resolving a relative URI against a base URI
        perl -MURI -e '
        my $base_uri = URI->new("http://example.com/foo/");
        my $rel_uri = URI->new("bar.html");
        my $abs_uri = $rel_uri->abs($base_uri);
        die "Resolved URI is incorrect" unless $abs_uri eq "http://example.com/foo/bar.html";
        print "Relative URI resolution passed.\n";'
    - name: Test URI Query Parameter Parsing
      runs: |
        # Test parsing and modifying query parameters
        perl -MURI -e '
        my $uri = URI->new("http://example.com/foo?name=John&age=30");
        my %query = $uri->query_form;
        die "Name is incorrect" unless $query{name} eq "John";
        die "Age is incorrect" unless $query{age} == 30;
        print "Query parameter parsing passed.\n";'
