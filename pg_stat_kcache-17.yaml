package:
  name: pg_stat_kcache-17
  version: 2.3.0
  epoch: 0
  description: PostgreSQL extension providing kernel statistics about query execution
  copyright:
    - license: PostgreSQL

var-transforms:
  - from: ${{package.version}}
    match: \.
    replace: _
    to: mangled-package-version
  - from: ${{package.name}}
    match: '^pg_stat_kcache-(\d+)$'
    replace: $1
    to: pg-version

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - clang-19
      - krb5-dev
      - postgresql-${{vars.pg-version}}-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/powa-team/pg_stat_kcache
      expected-commit: 9c0d0392fb08f3464fad3a334379a2b844ef0fe0
      tag: REL${{vars.mangled-package-version}}

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

test:
  environment:
    contents:
      packages:
        - postgresql-${{vars.pg-version}}
        - postgresql-${{vars.pg-version}}-client
        - postgresql-${{vars.pg-version}}-contrib
        - shadow
        - sudo-rs
        - glibc-locales
    accounts:
      run-as: 0
    environment:
      PGUSER: wolfi
      PGPASSWORD: postgres
  pipeline:
    - name: Initialize PostgreSQL database
      runs: |
        useradd $PGUSER
        echo -n $PGPASSWORD > /tmp/pwfile
        sudo -u $PGUSER initdb --pwfile=/tmp/pwfile -D /tmp/pgdata --auth=md5 2>&1
    - name: Test pg_stat_kcache extension
      runs: |
        # Start PostgreSQL with required shared libraries
        sudo -u $PGUSER pg_ctl start -w -D /tmp/pgdata -o "--shared_preload_libraries=pg_stat_statements,pg_stat_kcache --unix_socket_directories=/tmp" -l /tmp/pgdata/postgresql.log 2>&1

        # Test extension functionality
        sudo -u $PGUSER PGPASSWORD=$PGPASSWORD psql -h /tmp -d postgres << 'EOF'
        -- Create required pg_stat_statements extension first
        CREATE EXTENSION IF NOT EXISTS pg_stat_statements;

        -- Create pg_stat_kcache extension
        CREATE EXTENSION IF NOT EXISTS pg_stat_kcache;

        -- Verify extension is created
        SELECT extname FROM pg_extension WHERE extname = 'pg_stat_kcache';

        -- Test basic functionality - check that views exist
        SELECT COUNT(*) FROM pg_stat_kcache();

        -- Test that we can execute a query and see some stats
        SELECT 1;
        SELECT COUNT(*) >= 0 AS stats_available FROM pg_stat_kcache();

        -- Test reset function exists and works
        SELECT pg_stat_kcache_reset();

        \\echo 'pg_stat_kcache extension test completed successfully'
        EOF

        # Cleanup: Stop PostgreSQL
        sudo -u $PGUSER pg_ctl stop -D /tmp/pgdata -m fast 2>/dev/null || true
    - uses: test/tw/ldd-check

update:
  version-transform:
    - match: \_
      replace: .
  enabled: true
  github:
    identifier: powa-team/pg_stat_kcache
    tag-filter-contains: _
    strip-prefix: REL
    use-tag: true
