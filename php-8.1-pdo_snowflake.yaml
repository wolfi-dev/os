package:
  name: php-8.1-pdo_snowflake
  version: "3.1.0"
  epoch: 0
  description: "Snowflake driver that uses the PHP Data Objects (PDO) extension"
  copyright:
    - license: Apache-2.0
  # Only appears to work for x86_64.
  # https://github.com/snowflakedb/pdo_snowflake/issues/338
  target-architecture:
    - x86_64
  dependencies:
    runtime:
      - php-${{vars.phpMM}}

var-transforms:
  - from: ${{package.name}}
    match: ^php-(\d+\.\d+)-.*$
    replace: "$1"
    to: phpMM

environment:
  contents:
    packages:
      - autoconf
      - automake
      - bash
      - binutils
      - bison
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - gcc
      - libtool
      - php-${{vars.phpMM}}
      - php-${{vars.phpMM}}-dev
      - php-${{vars.phpMM}}-pdo
      - unixodbc-dev
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/snowflakedb/pdo_snowflake
      expected-commit: 53edf0f13fcd97d9bcc863328a02a665f311a861
      tag: v${{package.version}}

  - name: Run and build
    runs: |
      # The build files because there's a Werror and there are unused functions.
      # Best guess is that their release was created with an older version
      # of gcc, which didn't consider that a failure. Because we build this from
      # a script, we can't just set CFLAGS, so we have to edit the script.
      # Note. This also modifies the make clean target, but since we do not use
      # it, it is not a problem.
      # https://github.com/snowflakedb/pdo_snowflake/issues/339
      sed -i -e 's@make@make CFLAGS="-Wno-unused-function $CFLAGS"@' ./scripts/build_pdo_snowflake.sh
      PHP_HOME=/usr ./scripts/build_pdo_snowflake.sh

  - name: Install
    runs: |
      # https://github.com/snowflakedb/pdo_snowflake#installing-the-driver-on-linux-and-macos
      mkdir -p ${{targets.destdir}}
      mkdir -p ${{targets.destdir}}/usr/lib/php/modules
      install -d ${{targets.destdir}}/etc/php/conf.d
      echo "extension=pdo_snowflake.so" > ${{targets.destdir}}/etc/php/conf.d/20-pdo_snowflake.ini
      echo "pdo_snowflake.cacert=/etc/php/conf.d/cacert.pem" >> ${{targets.destdir}}/etc/php/conf.d/20-pdo_snowflake.ini
      cp ./modules/pdo_snowflake.so ${{targets.destdir}}/usr/lib/php/modules/
      cp ./libsnowflakeclient/cacert.pem ${{targets.destdir}}/etc/php/conf.d

  - uses: strip

test:
  environment:
    contents:
      packages:
        - php-${{vars.phpMM}}
        - php-${{vars.phpMM}}-pdo
  pipeline:
    - name: Verify Extension is Loaded
      runs: |
        php -m | grep -i 'pdo_snowflake'
        if [ $? -ne 0 ]; then
          echo "Test failed: pdo snowflake extension is not loaded."
          exit 1
        else
          echo "Test passed: pdo snowflake extension is loaded."
        fi
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}

update:
  enabled: true
  github:
    identifier: snowflakedb/pdo_snowflake
    strip-prefix: v
