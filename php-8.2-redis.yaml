package:
  name: php-8.2-redis
  version: "6.2.0"
  epoch: 0
  description: "A PHP extension for Redis"
  copyright:
    - license: PHP-3.01
  dependencies:
    runtime:
      - ${{package.name}}-config
      - php-${{vars.phpMM}}
      - php-${{vars.phpMM}}-igbinary

var-transforms:
  - from: ${{package.name}}
    match: ^php-(\d+\.\d+)-.*$
    replace: "$1"
    to: phpMM

environment:
  contents:
    packages:
      - autoconf
      - build-base
      - busybox
      - php-${{vars.phpMM}}
      - php-${{vars.phpMM}}-dev
      - php-${{vars.phpMM}}-igbinary-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/phpredis/phpredis
      tag: ${{package.version}}
      expected-commit: 04e54f8833efb9504354f1c167eeea3dddf21217

  - name: Prepare build
    runs: phpize

  - name: Configure
    runs: ./configure --enable-redis-igbinary

  - uses: autoconf/make

  - name: Make install
    runs: |
      INSTALL_ROOT="${{targets.destdir}}" DESTDIR="${{targets.destdir}}" make install

subpackages:
  - name: ${{package.name}}-config
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}/etc/php/conf.d"
          echo "extension=redis.so" > "${{targets.subpkgdir}}/etc/php/conf.d/redis.ini"

  - name: ${{package.name}}-dev
    description: PHP ${{vars.phpMM}} redis development headers
    pipeline:
      - uses: split/dev

update:
  enabled: true
  github:
    identifier: phpredis/phpredis

test:
  environment:
    contents:
      packages:
        - php-${{vars.phpMM}}
  pipeline:
    - name: Verify Extension is Loaded
      runs: |
        # Ensure the extension configuration is in place
        if [ ! -f /etc/php/conf.d/redis.ini ]; then
          echo "extension=redis.so" > /etc/php/conf.d/redis.ini
        fi

        # List loaded PHP modules and check for 'redis'
        php -m | grep -i 'redis'
        if [ $? -ne 0 ]; then
          echo "Test failed: Redis extension is not loaded."
          exit 1
        else
          echo "Test passed: Redis extension is loaded."
        fi
    - name: Test Basic Redis Functionality
      runs: |
        # Create a PHP script to test the extension
        echo "<?php
        \$redis = new Redis();
        if (!\$redis) {
          echo 'Failed to create Redis instance';
          exit(1);
        }
        echo 'Redis extension is functional';
        ?>" > test.php

        # Run the PHP script
        php test.php

        # Check the output
        if [ $? -ne 0 ]; then
          echo "Test failed: Unable to use Redis extension."
          exit 1
        else
          echo "Test passed: Redis extension is functional."
        fi
    - uses: test/tw/ldd-check
