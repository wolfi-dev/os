name: Setup auth to clone guarded repos using OctoSTS

needs:
  packages:
    - busybox
    - curl
    - git
    - jq

inputs:
  repo:
    description: which GitHub repo to clone (e.g., "chainguard-dev/ecosystems-cassandra")
    required: true
  identity:
    description: the identity to use for OctoSTS
    required: false
    default: elastic-build

pipeline:
  - runs: |
      set -euo pipefail

      # If we aren't able to authenticate using Octo STS, fall back to local token
      if idtoken=$(curl --fail-with-body -sSL -H "Metadata-Flavor: Google" \
                   http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/identity?audience=issuer.enforce.dev); then
        echo "Using OctoSTS to get a token for ${{inputs.repo}} as ${{inputs.identity}}"
        ghtoken=$(curl --fail-with-body -sSL -H "Authorization: Bearer ${idtoken}" 'https://octo-sts.dev/sts/exchange?scope=${{inputs.repo}}&identity=${{inputs.identity}}' | jq -r '.token')
      elif [ -f /home/build/.guarded-repo.token ]; then
        echo "Using local token for ${{inputs.repo}}"
        ghtoken=$(cat /home/build/.guarded-repo.token)
      else
        echo "Unable to generate token for guarded repo!"
        exit 1
      fi

      git config --global credential.helper store
      echo "https://user:${ghtoken}@github.com" > ~/.git-credentials
