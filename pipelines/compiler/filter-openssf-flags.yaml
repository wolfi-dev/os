name: filter-openssf-flags

inputs:
  compiler:
    description: The compiler executable name (e.g. gcc-12)
    default: gcc
  spec-file-out:
    description: Where to write the filtered spec file. Set GCC_SPEC_FILE to this path for gcc to use it. You can use a relative path in this pipeline, but GCC_SPEC_FILE should have an absolute path.
  remove-flags:
    description: flags to filter out

pipeline:
  - runs: |
      if [ -e "${{inputs.spec-file-out}}" ]; then
        echo "ERROR: ${{inputs.spec-file-out}} exists, refusing to overwrite it." 1>&2
        exit 1
      fi
      gccdir="$(GCC_SPEC_FILE=/dev/null ${{inputs.compiler}} --print-search-dirs | grep ^install: | cut -d' ' -f2)"
      tmpspec=$(mktemp)
      cp "$gccdir/openssf.spec" "${{inputs.spec-file-out}}"
      cp "$gccdir/openssf.spec" "$tmpspec"
      for flag in ${{inputs.remove-flags}}; do
        # Comma separated, such as -Wl,foo,bar
        if echo $flag | grep -q ','; then
          switch=$(echo "$flag" | cut -d, -f1)
          param=$(echo "$flag" | cut -d, -f2-)
          sed -i -E "s|(${switch}(,[^\s,]*))*,${param}(,[^\s,])*|\2\3|" "$tmpspec"
        # Exact matches
        else
          sed -i -E "s,(^|\s)(${flag})(\s|$), ," "$tmpspec"
        fi
        if diff "$tmpspec" "${{inputs.spec-file-out}}" > /dev/null; then
          echo "ERROR: filter did not change spec file" 1>&2
          exit 1
        fi
        cp "$tmpspec" "${{inputs.spec-file-out}}"
      done
