name: Setup auth to clone private ecosystems repos using OctoSTS

needs:
  packages:
    - busybox
    - curl
    - git
    - jq

inputs:
  repo:
    description: which GitHub repo to clone (e.g., "chainguard-dev/ecosystems-cassandra")
    required: true
  identity:
    description: the identity to use for OctoSTS
    required: false
    default: elastic-build

pipeline:
  - runs: |
      set -euo pipefail

      # If .github-token file exists in the source dir, use that.
      # You can use this for local testing:
      #
      #    gh auth token > your-package-name/.github-token
      #    make package/your-package-name
      #
      # THIS IS ONLY FOR LOCAL TESTING -- be careful not to commit your .github-token file!
      if [ -f .github-token ]; then
        echo "Using .github-token to get a token for ${{inputs.repo}} -- ONLY FOR LOCAL TESTING"
        ghtoken=$(cat .github-token)
      else
        echo "Using OctoSTS to get a token for ${{inputs.repo}} as ${{inputs.identity}}"
        idtoken=$(curl --fail-with-body -sSL -H "Metadata-Flavor: Google" http://metadata/computeMetadata/v1/instance/service-accounts/default/identity?audience=octo-sts.dev)
        ghtoken=$(curl --fail-with-body -sSL -H "Authorization: Bearer ${idtoken}" "https://octo-sts.dev/sts/exchange?scope=${{inputs.repo}}&identity=${{inputs.identity}}" | jq -r .token)
      fi

      git config --global credential.helper store
      echo "https://user:${ghtoken}@github.com" > ~/.git-credentials
