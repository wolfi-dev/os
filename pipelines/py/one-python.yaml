name: Run some stuff with just one python - do not worry about the name

needs:
  packages:
    - busybox

inputs:
  content:
    description: |
      what do you want to run. content will be written to file and executed.
      If it has a shbang (#!) then it will be honored.
      Otherwise use '#!/bin/sh -e'
    required: true

pipeline:
  - name: "run content"
    runs: |
      set +x
      tmpd=$(mktemp -d) || { echo "failed mktemp"; exit 1; }
      trap "rm -Rf $tmpd" EXIT

      cat > "$tmpd/runner.dist" <<"END_ONE_PYTHON_CONTENT"
      ${{inputs.content}}
      END_ONE_PYTHON_CONTENT

      if p=$(command -v python3); then
        py=$p
        if [ -L "$p" ]; then
          py=$(readlink -f "$p") ||
            { echo "ERROR: failed 'readlink -f $p'" 1>&2; exit 1; }
        fi
      else
        glob="/usr/bin/python3.[0-9][0-9] /usr/bin/python3.[789]"
        n=0
        for p in $glob; do
          [ -x "$p" ] && n=$((n+1)) && py=$p && found="$found $p"
        done
        if [ "$n" -ne 1 ]; then
          echo "ERROR: found $n pythons matching $glob. Cannot use one-python here."
          [ "$n" -eq 0 ] || echo "  found: $found" 1>&2
          exit 1
        fi
      fi
      echo "using python=$py for one-python"

      ln -s "$py" "$tmpd/python" && ln -s "$py" "$tmpd/python3" || {
        echo "ERROR: symlink of $py into tmpdir failed."
        exit 1
      }

      # add shbang of #!/bin/sh -e if not present.
      if head -n 1 "$tmpd/runner.dist" | grep -q "^#!"; then
         cp "$tmpd/runner.dist" "$tmpd/runner"
      else
         echo "#!/bin/sh -e" > "$tmpd/runner"
         cat "$tmpd/runner.dist" >> "$tmpd/runner"
      fi

      [ $? -eq 0 ] || {
        echo "ERROR: very strange failure (failed write to runner?)"
        exit 1
      }
      chmod 755 "$tmpd/runner"
      export PATH="$tmpd:$PATH"

      runner
