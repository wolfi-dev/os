name: Package target in virtual environment

needs:
  packages:
    - python-${{inputs.py-version}}-base
    - uv

inputs:
  package:
    description: "Name of package to install."
    required: true
  dependencies:
    description: "Dependencies to install or bump."
  py-version:
    description: "Python version to use."
    required: true

pipeline:
  - uses: auth/uv

  - runs: |
      # Don't allow uv to download Python
      export "UV_PYTHON_DOWNLOADS=never"

      # Path to virtual environment
      _venv_path="/usr/share/chainguard/${{inputs.package}}"

      # Create and source virtual environment
      uv venv --python ${{inputs.py-version}} --system-site-packages $_venv_path
      source $_venv_path/bin/activate

      # Install target
      uv pip install --reinstall ${{inputs.package}}==${{package.version}}

      # Update dependencies
      if [ -n ${{inputs.dependencies}} ]; then
        uv pip install --reinstall --upgrade ${{inputs.dependencies}}
      fi

      # Remove batch and powershell scripts
      # These environments are not meant to be portable
      rm -rf $_venv_path/bin/*.bat
      rm -rf $_venv_path/bin/*.ps1

      # Paths to site packages
      _sys_site_pkgs="${{targets.contextdir}}/usr/lib/python${{inputs.py-version}}/site-packages"
      _venv_site_pkgs="$_venv_path/lib/python${{inputs.py-version}}/site-packages"

      # Include virtual env's site packages in system path
      mkdir -p $_sys_site_pkgs
      echo $_venv_site_pkgs > $_sys_site_pkgs/${{inputs.package}}.pth

      # Include binaries in path
      mkdir -p ${{targets.contextdir}}/usr/bin
      for path in $_venv_path/bin/*; do
        bin=${path##*/}
        case $bin in
          # Ignore vendored Python and activation scripts
          activate*|deactivate*|python|python3|python${{inputs.py-version}})
            continue
            ;;
          *)
            ln -s "$path" "${{targets.contextdir}}/usr/bin/$bin"
            ;;
        esac
      done

      # Install virtual environment
      mkdir -p ${{targets.contextdir}}/usr/share/chainguard
      mv $_venv_path ${{targets.contextdir}}/usr/share/chainguard/
