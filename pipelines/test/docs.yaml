name: docs

needs:
  packages:
    - apk-tools
    - grep
    - man-db
    - texinfo

pipeline:
  - name: docs readability check
    runs: |
      # Get our doc package name, which is usually a sub package
      doc_pkg=$(basename ${{targets.contextdir}})
      # We seem to have a lot of "empty" doc packages...
      if [ $(apk info -L "$doc_pkg" | wc -l) -le 3 ]; then
        echo "See:"
        apk info -L "$doc_pkg"
        echo "This package [$doc_pkg] is completely empty (i.e. installs no files)."
        echo "Please check the package build for proper docs installation, and either:"
        echo "  (a) fix the docs subpackage build to actually include documentation (check the split/manpages and split/infodir pipelines), or"
        echo "  (b) remove the test/docs pipeline (if for some reason we want an empty docs package), or"
        echo "  (c) remove the docs subpackage entirely"
        exit 1
      fi 
      # Find all doc files installed by this doc_pkg
      cd /
      doc_files=false
      # Test man pages
      for doc_file in $(apk info -L "$doc_pkg" | grep "^usr/share/man/"); do
        if [ -f /"$doc_file" ]; then
          # Ensure that man can read and render
          # NOTE: man will dutifully, print any text file, not just troff manpages (e.g. html or plain text too)
          # NOTE: but man will fail, if the file is binary or otherwise garbage
          man -l /"$doc_file" >/dev/null
          doc_files=true
        fi
      done
      # Test info pages
      for doc_file in $(apk info -L "$doc_pkg" | grep "^usr/share/info/"); do
        if [ -f /"$doc_file" ]; then
          # Ensure that info can read at least one file that looks like an info page
          [ $(info -f /"$doc_file" -o - | wc -l) -gt 0 ] && doc_files=true
        fi
      done
      # Test any other text files
      for doc_file in $(apk info -L "$doc_pkg" | grep "^usr/share/"); do
        if [ -f /"$doc_file" ]; then
          # Check that we have readable files installed in /usr/share
          # There are too many types to test explicitly (text, html, pdf, images, etc.)
          cat /"$doc_file" >/dev/null
          doc_files=true
        fi
      done
      if [ $doc_files = "false" ]; then
        echo "See:"
        apk info -L "$doc_pkg"
        echo "This package [$doc_pkg] installs files, but no usable documentation"
        echo "Please check the package build for proper docs installation, and either:"
        echo "  (a) fix the docs subpackage build to actually include docs (check the split/manpages and split/infodir pipelines), or"
        echo "  (b) remove the test/docs pipeline"
        exit 1
      fi
