name: fonts

needs:
  packages:
    - file
    - py3-fonttools

inputs:
  path-prefix:
    description: "Prefix used for fonts."
    default: "usr/share"

pipeline:
  - name: font usability test
    runs: |
      # Get our font package name
      font_pkg=$(basename ${{targets.contextdir}})
      # Find all font files installed by this font_pkg
      cd /
      font_files=false
      # Test font files
      for font_file in $(apk info -qL "$font_pkg" | grep "^${{inputs.path-prefix}}/fonts/"); do
        if [ -f /"$font_file" ]; then
          case /"$font_file" in
            *.alias|*.dir|*.scale)
              # Check file type
              file /"$font_file" | grep -Ei ": (ASCII text|.*font)"
              font_files=true
            ;;
            *.gz)
              # Check file type
              zcat /"$font_file" | file - | grep -i ": .*font"
              font_files=true
            ;;
            *.afm|*.pfa|*.pfb)
              # PostScript Type 1 outlines (*.pfa, *.pfb) or metrics (*.afm).
              # "file" must recognise them as font-related, but "fonttools ttx"
              # cannot open Type 1 formats, so we **skip** the ttx inspection here.
              file /"$font_file" | grep -Ei ": (ASCII font metrics|PostScript .*font|.*font)"
              font_files=true
            ;;
            *)
              # Ensure that file thinks this is a font
              file /"$font_file" | grep -i ": .*font" || fonttools ttx -y 0 -l /"$font_file"
              # Print some information about this font, if it is a real font
              fonttools ttx -y 0 -l /"$font_file"
              font_files=true
            ;;
          esac
        fi
      done
      # Make sure this isn't an empty package
      if [ "$font_files" = "false" ] || [ $(apk info -L "$font_pkg" | wc -l) -le 3 ]; then
        echo "See:"
        apk info -qL "$font_pkg"
        echo "This package [$font_pkg] is completely empty (i.e. installs no files)."
        echo "Please check the package build for proper fonts installation, and either:"
        echo "  (a) fix the package build to actually include some fonts, or"
        echo "  (b) remove the test/fonts pipeline (if for some reason we want an empty fonts package), or"
        echo "  (c) remove the package entirely"
        exit 1
      fi
      echo "All font files in package [$font_pkg] are valid fonts."
