name: headers

needs:
  packages:
    - autoconf
    - build-base
    - file

pipeline:
  - name: syntax check .h headers
    runs: |
      function test_header() {
        local lang="$1"
        local header="$2"
        local rc=1
        d=$(mktemp -d XXXXXXXX)
        cd $d
        case $lang in
          c)
            gen_c_ac "$header"
          ;;
          cpp)
            gen_cpp_ac "$header"
          ;;
          *)
            return 1
          ;;
        esac
        cat configure.ac
        autoconf
        ./configure && rc=0 || rc=1
        cat config.log
        cd ..
        rm -rf $d
        return $rc
      }
      function gen_c_ac() {
        local f="$1"
        cat >configure.ac <<EOF
        AC_INIT([example],[1.0],[example@example.com])
        AC_PREREQ(2.69)
        AC_PROG_CC
        AC_LANG(C)
        AC_CHECK_HEADER($f,[c_header_found=yes],,)
        AS_IF([test "x\$c_header_found" != "xyes"], [AC_MSG_ERROR([Unable to check header])])
        AC_OUTPUT()
      EOF
      }
      function gen_cpp_ac() {
        local f="$1"
        cat >configure.ac <<EOF
        AC_INIT([example],[1.0],[example@example.com])
        AC_PREREQ(2.69)
        AC_PROG_CXX
        AC_LANG(C++)
        AC_CHECK_HEADER($f,[cxx_header_found=yes],,)
        AS_IF([test "x\$cxx_header_found" != "xyes"], [AC_MSG_ERROR([Unable to check header])])
        AC_OUTPUT()
      EOF
      }
      pkg=$(basename ${{targets.contextdir}})
      for f in $(apk info -L "$pkg" 2>/dev/null | grep "^usr/include/.*\.h[p]*$" | sed -e "s:^usr/include/::"); do
        success=false
        for lang in "c" "cpp"; do
          if test_header "$lang" "$f"; then
            success=true
            break
          fi
        done
        if [ "$success" = "true" ]; then
          echo "Success testing header [/usr/include/$f]"
        else
          echo "Failure testing header [/usr/include/$f]"
          exit 1
        fi
      done
