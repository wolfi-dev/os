name: no-docs

needs:
  packages:
    - apk-tools
    - man-db

pipeline:
  - name: primary package docs check
    runs: |
      # Get our primary package name
      primary_pkg=$(basename ${{targets.contextdir}})

      # Skip if this is a documentation package
      case "$primary_pkg" in
        *-doc)
          echo "Skipping documentation package [$primary_pkg]"
          echo "Remove the \"test/no-docs\" pipeline from documentation packages"
          exit 0
          ;;
      esac

      cd /
      doc_violations=false
      violation_count=0
      has_manpages=false
      has_infodir=false

      # Start with default paths
      default_paths="usr/share/man usr/local/share/man usr/man"
      all_paths="$default_paths"

      # Get additional paths from man --path
      if command -v man >/dev/null 2>&1; then
        for path in $(man --path 2>/dev/null | tr ':' ' '); do
          clean_path=$(echo "$path" | sed 's|^/||')
          if [ -n "$clean_path" ]; then
            # Check if this path is already in our list
            path_exists=false
            for existing_path in $all_paths; do
              if [ "$clean_path" = "$existing_path" ]; then
                path_exists=true
                break
              fi
            done
            # Add if unique
            if [ "$path_exists" = "false" ]; then
              all_paths="$all_paths $clean_path"
            fi
          fi
        done
      fi

      # Build grep pattern from unique paths
      man_paths=""
      for path in $all_paths; do
        if [ -z "$man_paths" ]; then
          man_paths="^$path/"
        else
          man_paths="$man_paths|^$path/"
        fi
      done

      # Check for manual pages
      for doc_file in $(apk info -qL "$primary_pkg" | grep -E "$man_paths"); do
        if [ -f "/$doc_file" ]; then
          if [ "$doc_violations" = "false" ]; then
            echo "Primary package [$primary_pkg] contains documentation files:"
            doc_violations=true
          fi
          has_manpages=true
          violation_count=$((violation_count + 1))
          echo "  /$doc_file (manual page)"
        fi
      done

      # Check for GNU info pages (exclude the dir file)
      for doc_file in $(apk info -qL "$primary_pkg" | grep -E "^usr/share/info/|usr/local/share/info/"); do
        if [ -f "/$doc_file" ] && [ "$(basename "$doc_file")" != "dir" ]; then
          if [ "$doc_violations" = "false" ]; then
            echo "Primary package [$primary_pkg] contains documentation files:"
            doc_violations=true
          fi
          has_infodir=true
          violation_count=$((violation_count + 1))
          echo "  /$doc_file (info page)"
        fi
      done

      if [ "$doc_violations" = "true" ]; then
        echo ""
        echo "These files should be moved to a -doc subpackage."
        echo "Please add the following split pipeline(s):"
        if [ "$has_manpages" = "true" ]; then
          echo "  - split/manpages (for manual pages)"
        fi
        if [ "$has_infodir" = "true" ]; then
          echo "  - split/infodir (for GNU info pages)"
        fi
        echo ""
        echo "Total documentation files found: $violation_count"
        exit 1
      fi

      echo "Primary package [$primary_pkg] does not contain documentation files"
