name: pkgconf

needs:
  packages:
    - pkgconf

pipeline:
  - name: pkgconf build dependency check
    runs: |
      # Get our dev package name, which is possibly a sub package
      dev_pkg=$(basename ${{targets.contextdir}})
      # Find all pc files installed by this dev_pkg
      cd /
      pc_files=false
      for pc_file in $(apk info -L "$dev_pkg" | grep "\.pc$"); do
        pc_files=true
        # Ensure this is a pkgconf .pc file
        if grep -q "^Name:" $pc_file; then
          lib_name=$(basename "$pc_file" ".pc")
          # Ensure .pc file is installed in usr/lib/pkgconfig/*.pc or
          # in usr/share/pkgconfig/*.pc
          echo "$pc_file" | grep -q "^usr/lib/pkgconfig/${lib_name}.pc$\|^usr/share/pkgconfig/${lib_name}.pc$"
          # Try to get the library name from the pc filename
          # Run some package config tests, which will likely be used by
          # other packages that have build dependencies on this dev package
          pkgconf --exists $lib_name || pkgconf --print-errors --exists $lib_name
          # If we have a module version in our .pc file, ensure pkgconf can get it
          if grep -q "^Version:" $pc_file; then
            pkgconf --modversion $lib_name
          fi
          # If we have libraries flags listed in our .pc file, ensure pkgconf can get them
          if grep -q "^Libs:" $pc_file; then
            pkgconf --libs $lib_name
          fi
          # If we have C flags listed in our .pc file, ensure pkgconf can get them
          if grep -q "^Cflags:" $pc_file; then
            pkgconf --cflags $lib_name
          fi
        fi
      done
      if [ $pc_files = "false" ]; then
        echo "No .pc files found in $dev_pkg please remove the pkgconf test"
      fi
