name: help-check

needs:
  packages:
    - help-check

inputs:
  bins:
    description: |
      Space-separated list of binary names to check for help output.
      Can be a single binary or multiple binaries.
      Examples: "nginx" or "gcc g++ cpp" or "node npm npx"
    required: true
  help-flag:
    description: |
      Command line flag used to get help information.
      Use 'auto' to try common flags automatically: --help, -h, -help, help
      Or specify exact flag like: --help, -h, etc.
    required: false
    default: "auto"
  expect-contains:
    description: |
      Optional string(s) to verify are present in the help output.
      Can be used to ensure help text contains usage information, options, etc.
      Multiple strings can be space-separated (all must be found).
      Example: "Usage Options" or "Examples --version"
    required: false
    default: ""
  verbose:
    description: |
      Whether or not the output should be verbose
    required: false
    default: false

# USAGE EXAMPLES:
#
# Basic check (just ensure help flag works):
#   - uses: test/tw/help-check
#     with:
#       bins: ${{package.name}}
#
# Multiple binaries:
#   - uses: test/tw/help-check
#     with:
#       bins: "gcc g++ cpp"
#
# Verify help content contains specific strings:
#   - uses: test/tw/help-check
#     with:
#       bins: "nginx"
#       expect-contains: "Usage Options"
pipeline:
  - name: "check help information for binaries"
    runs: |
      help-check \
          --bins="${{inputs.bins}}" \
          --help-flag="${{inputs.help-flag}}" \
          --expect-contains="${{inputs.expect-contains}}" \
          --verbose="${{inputs.verbose}}"
