name: ver-check

needs:
  packages:
    - ver-check

inputs:
  bins:
    description: |
      Space-separated list of binary names to check for version.
      Can be a single binary or multiple binaries.
      Examples: "nginx" or "gcc g++ cpp" or "node npm npx"
    required: true
  version:
    description: |
      Expected version string to match in the binary's version output.
      Defaults to package version. Can be overridden for specific version formats.
    required: false
    default: ${{package.version}}
  version-flag:
    description: |
      Command line flag used to get version information.
      Use 'auto' to try common flags automatically: --version, -version, -V, -v, version
      Or specify exact flag like: --version, -V, etc.
    required: false
    default: "auto"
  match-type:
    description: |
      How to match the version string:
      - 'contains': Check if version string appears anywhere in output (default)
      - 'exact': Require exact match of entire output
      - 'regex': Use version as regex pattern
    required: false
    default: "contains"

# USAGE EXAMPLES:
#
# Single binary:
#   - uses: test/tw/ver-check
#     with:
#       bins: ${{package.name}}
#
# Multiple binaries:
#   - uses: test/tw/ver-check
#     with:
#       bins: "gcc g++ cpp"
#       version: "gcc (GCC) ${{package.version}}"
pipeline:
  - name: "check version information for binaries"
    runs: |
      ver-check \
          --bins="${{inputs.bins}}" \
          --version="${{inputs.version}}" \
          --version-flag="${{inputs.version-flag}}" \
          --match-type="${{inputs.match-type}}" \
          --verbose="${{inputs.verbose}}"
