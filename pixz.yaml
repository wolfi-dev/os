package:
  name: pixz
  version: 1.0.7
  epoch: 0
  description: Parallel, indexed xz compressor
  copyright:
    - license: BSD-2-Clause

environment:
  contents:
    packages:
      - asciidoc
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - docbook-xml
      - libarchive-dev
      - libpthread-stubs
      - libtool
      - libxml2-dev
      - libxml2-utils
      - libxslt
      - m4
      - pkgconf-dev
      - xz-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: "573e4a8d2c9cc600ffeb109683d5a5904aa8fa50"
      repository: https://github.com/vasi/pixz
      tag: v${{package.version}}

  - runs: |
      # Replace the entire line containing AC_PROG_CC_STDC with AC_PROG_CC
      sed -i '/AC_PROG_CC_STDC/c\AC_PROG_CC' configure.ac

  - runs: ./autogen.sh

  - uses: autoconf/configure

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

subpackages:
  - name: "${{package.name}}-doc"
    description: "${{package.name}} documentation"
    pipeline:
      - uses: split/manpages
    test:
      pipeline:
        - uses: test/docs

update:
  enabled: true
  manual: false
  github:
    identifier: vasi/pixz
    use-tag: true
    strip-prefix: v

test:
  pipeline:
    - runs: |
        # Temporary files
        TMP_DIR=$(mktemp -d)
        INPUT_FILE="$TMP_DIR/input.txt"
        COMPRESSED_FILE="$TMP_DIR/output.pxz"
        DECOMPRESSED_FILE="$TMP_DIR/output.txt"

        echo "This is a test file for pixz." > "$INPUT_FILE"

        # 1. Compress the input file
        pixz "$INPUT_FILE" "$COMPRESSED_FILE"
        if [[ ! -f "$COMPRESSED_FILE" ]]; then
            echo "Error: Compression failed. Compressed file not created."
            exit 1
        fi

        # 2. Decompress the file
        pixz -d "$COMPRESSED_FILE" "$DECOMPRESSED_FILE"
        if [[ ! -f "$DECOMPRESSED_FILE" ]]; then
            echo "Error: Decompression failed. Decompressed file not created."
            exit 1
        fi

        # 3. Verify integrity
        if ! diff "$INPUT_FILE" "$DECOMPRESSED_FILE" &> /dev/null; then
            echo "Error: Decompressed file content does not match the original."
            exit 1
        fi

        echo "All tests passed successfully!"
