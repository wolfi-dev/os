package:
  name: pkgconf
  version: 2.3.0
  epoch: 1
  description: "An implementation of pkg-config"
  copyright:
    - license: ISC

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - libtool
      - m4
      - wolfi-baselayout

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/pkgconf/pkgconf
      tag: pkgconf-${{package.version}}
      expected-commit: a88c0d962a987c62d98ede5a738e37ec71005cbd

  - runs: |
      autoreconf -fiv

  - name: 'Configure pkgconf'
    runs: |
      ./configure \
        --prefix=/usr \
        --libdir=/usr/lib \
        --sysconfdir=/etc \
        --mandir=/usr/share/man \
        --infodir=/usr/share/info \
        --with-pkg-config-dir=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig \
        --host=${{host.triplet.gnu}} \
        --target=${{host.triplet.gnu}}

  - runs: |
      make -j$(nproc) V=1

  - uses: autoconf/make-install

  - runs: |
      ln -s pkgconf "${{targets.destdir}}"/usr/bin/pkg-config

  - name: 'Clean up documentation'
    runs: |
      rm -rf ${{targets.destdir}}/usr/share/info

  - uses: strip

subpackages:
  - name: "pkgconf-dev"
    description: "pkgconf headers"
    pipeline:
      - uses: split/dev
      - runs: |
          mv "${{targets.subpkgdir}}"/usr/bin/pkg-config "${{targets.destdir}}"/usr/bin/
    dependencies:
      runtime:
        - pkgconf
    test:
      pipeline:
        - uses: test/pkgconf

  - name: "pkgconf-doc"
    description: "pkgconf documentation"
    pipeline:
      - uses: split/manpages
    test:
      pipeline:
        - uses: test/docs

update:
  enabled: true
  github:
    identifier: pkgconf/pkgconf
    strip-prefix: pkgconf-
    use-tag: true

test:
  environment:
    contents:
      packages:
        - build-base
        - gcc
        - zlib-dev # Common package to test against
  pipeline:
    # AUTOGENERATED
    - runs: |
        bomtool --version
        pkg-config --version
        pkgconf --version
        bomtool --help
        pkg-config --help
        pkgconf --help
    - name: "Verify basic commands and versioning"
      runs: |
        pkgconf --version
        pkg-config --version
        pkgconf --help
        pkg-config --help
    - name: "Test package query functionality"
      runs: |
        # Query zlib as a common package
        pkgconf --print-provides zlib
        pkgconf --modversion zlib
        pkgconf --libs zlib
        pkgconf --cflags zlib
    - name: "Test pkg-config compatibility"
      runs: |
        # Same tests with pkg-config symlink
        pkg-config --modversion zlib
        pkg-config --libs zlib
        pkg-config --cflags zlib
    - name: "Test path resolution"
      runs: |
        pkgconf --validate zlib
    - name: "Test variable operations"
      runs: |
        pkgconf --variable=prefix zlib
        pkgconf --variable=libdir zlib
    - name: "Test error handling"
      runs: |
        # Should fail gracefully
        if pkgconf --modversion nonexistent-package 2>/dev/null; then
          exit 1
        fi
    - name: "Test dependency resolution"
      runs: |
        pkgconf --print-requires zlib
        pkgconf --list-all
    - name: "Test development package functionality"
      runs: |
        # Create a temporary .pc file
        cat > test.pc << EOF
        prefix=/usr
        exec_prefix=${prefix}
        libdir=${prefix}/lib
        includedir=${prefix}/include

        Name: test
        Description: Test package
        Version: 1.0.0
        Libs: -L${libdir} -ltest
        Cflags: -I${includedir}
        EOF

        # Test with the created .pc file
        PKG_CONFIG_PATH=. pkgconf --exists test
        PKG_CONFIG_PATH=. pkgconf --modversion test
    - name: "Test multiple package handling"
      runs: |
        pkgconf --cflags --libs zlib
    - name: "Verify static and dynamic linking flags"
      runs: |
        pkgconf --libs --static zlib
        pkgconf --libs --shared zlib
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}
