package:
  name: polaris
  version: "10.1.0"
  epoch: 0
  description: Validation of best practices in your Kubernetes clusters
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 4de082b443c4062c512d7561a486ac8aae156fd3
      repository: https://github.com/FairwindsOps/polaris
      tag: v${{package.version}}

  - uses: go/build
    with:
      ldflags: |
        -X main.Version=${{package.version}}
        -X main.Commit=$(git rev-parse HEAD)
      output: polaris
      packages: .

update:
  enabled: true
  github:
    identifier: FairwindsOps/polaris
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - jq
  pipeline:
    - uses: test/kwok/cluster
    - runs: |
        polaris audit --format json > /tmp/polaris.json
        # there is an entry in json like this:
        # 2025/07/28 14:04:01 INFO   "Results": [
        # {
        #   "Name": "cluster-admin",
        #   "Namespace": "",
        #   "Kind": "ClusterRoleBinding",
        #   "Results": {
        #     "clusterrolebindingClusterAdmin": {
        #       "ID": "clusterrolebindingClusterAdmin",
        #       "Message": "The ClusterRoleBinding does not reference the default cluster-admin ClusterRole or one with wildcard permissions",
        #       "Details": null,
        #       "Success": true,
        #       "Severity": "danger",
        #       "Category": "Security",
        #       "Mutations": null
        #     },
        # ....
        # use jq to check that the cluster-admin ClusterRoleBinding is not present
        jq '.Results[]   | select(.Name == "extension-apiserver-authentication")   | .Results.sensitiveConfigmapContent.Success' /tmp/polaris.json | grep -q true
