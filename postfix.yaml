package:
  name: postfix
  version: ${{vars.package_version}}
  epoch: 1
  description: Secure and fast drop-in replacement for Sendmail (MTA) with Rspamd integration
  copyright:
    - license: IPL-1.0 OR EPL-2.0
  checks:
    disabled:
      - setuidgid
  dependencies:
    runtime:
      - bash
      - busybox
      - cronie
      - merged-usrsbin
      - rspamd
      - rsyslog
      - sasl-xoauth2
      - supervisor
      - wolfi-baselayout

# Dual-source package: scripts from github (docker-postfix), source code from official Postfix tarball
vars:
  # Main package version
  package_version: "4.4.0"
  # Postfix source version
  postfix_source_version: "3.10.4"
  # git commit hash
  docker_postfix_commit: "5113756b0836cc27e928040b2aa9762e820dc71b"

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - coreutils
      - cyrus-sasl-dev
      - icu-dev
      - libnsl-dev
      - linux-headers
      - lmdb-dev
      - m4
      - mariadb-connector-c-dev
      - openldap-dev
      - openssl-dev
      - pcre2-dev
      - perl
      - postgresql-dev
      - sasl-xoauth2-dev
      - sqlite-dev

data:
  - name: _subpackages
    items:
      ldap:
      mysql:
      pcre:
      pgsql:
      sqlite:

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/bokysan/docker-postfix
      tag: v${{vars.package_version}}
      expected-commit: ${{vars.docker_postfix_commit}}

  - uses: patch
    with:
      patches: |
        0001-migrate-to-rspamd.patch

  # Get source tarball (source code only available via tarball)
  - uses: fetch
    with:
      expected-sha256: cfb66861fe8f964787ddaeab15f3ca3e7ef3de730f97171afc4a5eca338ca444
      uri: https://de.postfix.org/ftpmirror/official/postfix-${{vars.postfix_source_version}}.tar.gz

  - runs: |
      _mvline() {
        local regex="$1"
        local outfile="$3.d/$2"
        local infile="$3"
        sed -i -E -e "\|$regex|{
      w $outfile
      d
      }" "$infile"
      }

      # Initialize variables for compile-time flags and auxiliary libraries
      ccargs="-DHAS_SHL_LOAD"
      auxlibs="$LDFLAGS"

      # Add Berkeley-DB settings
      ccargs="$ccargs -DNO_DB"

      # Add PCRE2 settings
      ccargs="$ccargs -DHAS_PCRE=2 $(pcre2-config --cflags)"

      # Add SSL/TLS settings
      ccargs="$ccargs -DUSE_TLS"
      auxlibs="$auxlibs -lssl -lcrypto"

      # Add Dovecot SASL settings
      ccargs="$ccargs -DUSE_SASL_AUTH -DDEF_SASL_SERVER=\\\"dovecot\\\""

      # Add Cyrus SASL settings
      ccargs="$ccargs -DUSE_SASL_AUTH -DUSE_CYRUS_SASL -I/usr/include/sasl"
      auxlibs="$auxlibs -lsasl2"

      # Add PostgreSQL settings
      ccargs="$ccargs -DHAS_PGSQL $(pkg-config --cflags libpq)"

      # Add MySQL settings
      ccargs="$ccargs -DHAS_MYSQL $(mysql_config --include)"

      # Add LDAP settings
      ccargs="$ccargs -DHAS_LDAP -DUSE_LDAP_SASL"

      # Add SQLite settings
      ccargs="$ccargs -DHAS_SQLITE $(pkg-config --cflags sqlite3)"

      # Add LMDB settings and make it default
      ccargs="$ccargs -DHAS_LMDB $(pkg-config --cflags lmdb) -DDEF_DB_TYPE=\\\"lmdb\\\""

      # Fix build error with gcc 15.
      ccargs="$ccargs -std=gnu17"

      mkdir -p "${{targets.contextdir}}"/usr/bin
      mkdir -p "${{targets.contextdir}}"/etc/postfix
      mkdir -p "${{targets.contextdir}}"/var/spool/postfix/public
      mkdir -p "${{targets.contextdir}}"/var/spool/postfix/maildrop
      mkdir -p "${{targets.contextdir}}"/var/spool/postfix/pid
      mkdir -p "${{targets.contextdir}}"/var/lib/postfix
      mkdir -p "${{targets.contextdir}}"/var/mail/domains
      mkdir -p "${{targets.contextdir}}"/usr/share/man
      mkdir -p "${{targets.contextdir}}"/usr/share/man/man1
      mkdir -p "${{targets.contextdir}}"/usr/share/doc/postfix/defaults
      mkdir -p "${{targets.contextdir}}"/usr/share/doc/postfix/readme
      mkdir -p "${{targets.contextdir}}"/usr/share/licenses/postfix

      # compile
      make DEBUG="" \
      	OPT="$CFLAGS" \
      	CCARGS="$ccargs" \
      	AUXLIBS="$auxlibs" \
      	AUXLIBS_LDAP="-lldap -llber" \
      	AUXLIBS_MYSQL="$(mysql_config --libs)" \
      	AUXLIBS_PCRE="$(pkg-config --libs libpcre2-8)" \
      	AUXLIBS_PGSQL="$(pkg-config --libs libpq)" \
      	AUXLIBS_SQLITE="$(pkg-config --libs sqlite3)" \
      	AUXLIBS_LMDB="$(pkg-config --libs lmdb)" \
      	config_directory=/etc/postfix \
      	meta_directory=/etc/postfix \
      	daemon_directory=/usr/libexec/postfix \
      	shlib_directory=/usr/lib/postfix \
      	SHLIB_RPATH="-Wl,-rpath,/usr/lib/postfix" \
      	sendmail_path=/usr/bin/sendmail \
      	dynamicmaps=yes \
      	shared=yes \
      	makefiles

      make OPT="$CFLAGS"

      make non-interactive-package \
         install_root="${{targets.contextdir}}" \
         readme_directory=/usr/share/doc/postfix/readme \
         manpage_directory=/usr/share/man \
         command_directory=/usr/bin

      # Install qshape auxiliary script
      install -Dm644 man/man1/qshape.1 -t "${{targets.contextdir}}"/usr/share/man/man1
      install -Dm755 auxiliary/qshape/qshape.pl -t "${{targets.contextdir}}"/usr/bin

      # Set setgid bit for postqueue and postdrop (users/groups handled by image config)
      for i in postdrop postqueue; do
         chgrp 1001 "${{targets.contextdir}}"/usr/bin/$i  # Use numeric GID since groups don't exist during build
         chmod g+s "${{targets.contextdir}}"/usr/bin/$i
      done

      mkdir -p "${{targets.contextdir}}"/usr/share/doc/postfix/defaults/ \
        "${{targets.contextdir}}"/usr/share/licenses/postfix/
      mv "${{targets.contextdir}}"/etc/postfix/*.default \
      	"${{targets.contextdir}}"/usr/share/doc/postfix/defaults/
      mv "${{targets.contextdir}}"/etc/postfix/*LICENSE* \
      	"${{targets.contextdir}}"/usr/share/licenses/postfix/
      install -Dm755 postfix.initd "${{targets.contextdir}}"/etc/init.d/postfix

      # Note: Directory ownership is handled by image config paths
      # Package only creates directories, image config sets ownership

      cd "${{targets.contextdir}}"/etc/postfix/
      for map in ldap mysql pcre pgsql sqlite lmdb; do
      	_mvline "^\s*$map" "$map" dynamicmaps.cf
      done
      rm makedefs.out

      # fix /etc/postfix/postfix-files so that "postfix set-permissions" can run
      sed -i \
      	-e '/shlib_directory\/postfix-/d' \
      	-e '/meta_directory\/makedefs.out/d' \
      	-e '/manpage_directory/d' \
      	-e '/config_directory\/LICENSE/d' \
      	-e '/config_directory\/TLS_LICENSE/d' \
      	-e '/config_directory\/[^/]\+\.cf\.default/d' \
      	"${{targets.contextdir}}"/etc/postfix/postfix-files

  # Copy upstream scripts and configs
  - name: "Copy upstream scripts and configs"
    runs: |
      # Copy scripts from upstream with permissions
      install -Dm755 scripts/*.sh -t "${{targets.contextdir}}"/scripts/

      # Copy configs from upstream (except supervisord.conf - subpackage will handle it)
      install -Dm644 configs/* -t "${{targets.contextdir}}"/etc/
      rm -f "${{targets.contextdir}}"/etc/supervisord.conf

  # Customize scripts for rspamd instead of OpenDKIM
  - name: "Customize scripts for rspamd integration"
    runs: |
      cd "${{targets.contextdir}}"

      # Create rspamd script (replacing opendkim.sh)
      cat > scripts/rspamd.sh << 'EOF'
      #!/bin/sh
      set -e
      exec /usr/bin/rspamd -c /etc/rspamd/rspamd.conf -f -u _rspamd -g _rspamd
      EOF
      chmod +x scripts/rspamd.sh

      # patch only stable files to avoid upstream drift issues
      # update healthcheck.sh to check rspamd instead of opendkim (consolidated)
      sed -i -e 's/check_dkim/check_rspamd/g' \
             -e 's/printf.*8891/printf "\\x18Clocalhost\\x004\\x00\\x00127.0.0.1\\x00" | nc -w 2 127.0.0.1 11332/g' \
             -e 's/DKIM check/Rspamd check/g' \
             scripts/healthcheck.sh

      # Fix cron.sh flag
      sed -i 's/crond -f -S/crond -f/' scripts/cron.sh

  - name: "Create Rspamd configuration files"
    runs: |
      mkdir -p "${{targets.contextdir}}"/etc/postfix/main.cf.d

      cat > "${{targets.contextdir}}"/etc/postfix/main.cf.d/milter.conf << EOF
      # DKIM signing only, no spam filtering
      # Outbound mail scanning (required for DKIM signing)
      non_smtpd_milters = inet:localhost:11332
      EOF

      # handle permissions and ownership at runtime in postfix_setup_rspamd()
      mkdir -p "${{targets.contextdir}}"/etc/rspamd/local.d

      # Fix cron warnings, cron checks /etc/cron.d in log
      mkdir -p "${{targets.contextdir}}"/etc/cron.d

      # Create DKIM signing configuration for Postfix-specific settings
      # This will override the base Rspamd configuration without conflicts
      cat > "${{targets.contextdir}}"/etc/rspamd/local.d/dkim_signing.conf << EOF
      # Postfix-specific DKIM signing overrides
      # Note: DKIM signing requires outbound mail scanning via non_smtpd_milters

      # CRITICAL: Enable DKIM signing by uncommenting the path and selector
      # This overrides the commented-out lines in the upstream config
      path = "/var/lib/rspamd/dkim/\$domain.\$selector.key";
      selector = "default";

      # Sign authenticated users (SMTP authentication)
      sign_authenticated = true;

      # Sign local network mail
      sign_local = true;

      # Don't sign inbound mail (only outbound)
      sign_inbound = false;

      # Use domain from email header for signing
      use_domain = "header";

      # Normalize domains to eSLD (e.g., sub.example.com -> example.com)
      use_esld = true;

      # Check if public key matches private key (recommended for production)
      check_pubkey = true;

      # Allow public key mismatch (for key rotation scenarios)
      allow_pubkey_mismatch = true;
      EOF

subpackages:
  - name: ${{package.name}}-compat
    description: "Compatibility package for postfix"
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/sbin

          ln -sf /usr/bin/postfix "${{targets.contextdir}}"/usr/sbin/postfix
          ln -sf /usr/bin/sendmail "${{targets.contextdir}}"/usr/sbin/sendmail
          ln -sf /usr/bin/postconf "${{targets.contextdir}}"/usr/sbin/postconf
          ln -sf /usr/bin/postdrop "${{targets.contextdir}}"/usr/sbin/postdrop
          ln -sf /usr/bin/postqueue "${{targets.contextdir}}"/usr/sbin/postqueue
          ln -sf /usr/bin/postsuper "${{targets.contextdir}}"/usr/sbin/postsuper
          ln -sf /usr/bin/postmap "${{targets.contextdir}}"/usr/sbin/postmap
          ln -sf /usr/bin/postcat "${{targets.contextdir}}"/usr/sbin/postcat
          ln -sf /usr/bin/postalias "${{targets.contextdir}}"/usr/sbin/postalias
          ln -sf /usr/bin/postkick "${{targets.contextdir}}"/usr/sbin/postkick
          ln -sf /usr/bin/postlock "${{targets.contextdir}}"/usr/sbin/postlock
          ln -sf /usr/bin/postlog "${{targets.contextdir}}"/usr/sbin/postlog
          ln -sf /usr/bin/postmulti "${{targets.contextdir}}"/usr/sbin/postmulti
          ln -sf /usr/bin/newaliases "${{targets.contextdir}}"/usr/sbin/newaliases
          ln -sf /usr/bin/mailq "${{targets.contextdir}}"/usr/sbin/mailq
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
      pipeline:
        - runs: |
            test "$(readlink /usr/sbin/postfix)" = "/usr/bin/postfix"
            test "$(readlink /usr/sbin/sendmail)" = "/usr/bin/sendmail"
            test "$(readlink /usr/sbin/postconf)" = "/usr/bin/postconf"

  - name: ${{package.name}}-supervisor-config
    description: Supervisor configuration for Postfix with Rspamd integration
    dependencies:
      replaces:
        - supervisor-config
      provides:
        - supervisor-config
      runtime:
        - supervisor # Only depend on base supervisor, not supervisor-config
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/etc
          install -m644 configs/supervisord.conf "${{targets.subpkgdir}}"/etc/

          # Modify the supervisord.conf to replace opendkim with rspamd (consolidated)
          sed -i -e 's/\[program:opendkim\]/\[program:rspamd\]/' \
                 -e 's/command.*=.*opendkim.sh/command         = \/scripts\/rspamd.sh/' \
                 -e 's/user.*=.*opendkim/user            = _rspamd/' \
                 "${{targets.subpkgdir}}"/etc/supervisord.conf

  - name: postfix-doc
    pipeline:
      - uses: split/manpages
    description: postfix manpages
    test:
      pipeline:
        - uses: test/docs
    dependencies:
      runtime:
        - merged-usrsbin
        - wolfi-baselayout

  - name: postfix-stone
    description: Postfix simulation and testing tools
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/bin
          install -Dm755 src/fsstone/fsstone "${{targets.contextdir}}"/usr/bin/fsstone
          find src/smtpstone -mindepth 1 -perm 0755 -exec cp {} "${{targets.contextdir}}"/usr/bin \;
    dependencies:
      runtime:
        - merged-usrsbin
        - wolfi-baselayout

  - range: _subpackages
    name: postfix-${{range.key}}
    description: "${{range.key}} map support for postfix"
    dependencies:
      runtime:
        - mariadb-11.8-dev
        - merged-usrsbin
        - wolfi-baselayout
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/lib/postfix \
                 "${{targets.contextdir}}"/etc/postfix/dynamicmaps.cf.d
          m="${{range.key}}"
          mv "${{targets.destdir}}"/usr/lib/postfix/postfix-$m.so \
          	"${{targets.subpkgdir}}"/usr/lib/postfix/
          mv "${{targets.destdir}}"/etc/postfix/dynamicmaps.cf.d/$m \
          	"${{targets.subpkgdir}}"/etc/postfix/dynamicmaps.cf.d/
    test:
      pipeline:
        - uses: test/tw/ldd-check

update:
  enabled: true
  github:
    identifier: bokysan/docker-postfix
    use-tag: true
    strip-prefix: v

test:
  pipeline:
    - runs: |
        #!/bin/bash
        #create postdrop group and postfix user with unique group IDs

        addgroup -S postfix
        addgroup -S postdrop
        adduser -S -D -H -h /dev/null -s /sbin/nologin -G postfix postfix
        chown -R postfix:postdrop /var/spool/postfix
        chmod -R 755 /var/spool/postfix

        # Fix ownership of /var/spool/postfix and its subdirectories
        chown root:root /var/spool/postfix
        chown root:root /var/spool/postfix/pid

        # Fix ownership of /var/lib/postfix
        chown -R postfix:postfix /var/lib/postfix

        # Fix ownership and permissions of postqueue and postdrop executables
        chown root:postdrop /usr/bin/postqueue /usr/bin/postdrop
        chmod 2755 /usr/bin/postqueue /usr/bin/postdrop

        set +e
        postfix -v start
        set -e

        postfix check
        postfix status

        echo "Checking Postfix mail queue..."
        mailq

        LOG_FILE="/var/log/maillog"
        if [ -f "$LOG_FILE" ]; then
            echo "Checking Postfix logs for email delivery status..."
            grep "$(date +'%b %d')" $LOG_FILE | tail -n 10
        else
            echo "Log file not found: $LOG_FILE"
        fi

        TO_EMAIL="localuser@localhost"
        FROM_EMAIL="testuser@localhost"
        SUBJECT="Postfix Test Email"
        BODY="This is a test email sent via Postfix to verify functionality."

        EMAIL_CONTENT="From: $FROM_EMAIL\nTo: $TO_EMAIL\nSubject: $SUBJECT\n\n$BODY"

        echo -e "$EMAIL_CONTENT" | /usr/bin/sendmail -t

        sleep 3

        MAIL_QUEUE=$(mailq)

        if [ -z "$MAIL_QUEUE" ]; then
            echo "Postfix test successful: Mail queue is empty. Email was likely delivered."
        else
            echo "Postfix test result: Mail queue is not empty. Here is the current queue:"
            echo "$MAIL_QUEUE"
        fi

        echo "Test complete."
