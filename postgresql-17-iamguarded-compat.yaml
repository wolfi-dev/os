package:
  name: postgresql-17-iamguarded-compat
  version: "17.0"
  epoch: 40
  description: "compat package with postgresql image"
  copyright:
    - license: BSD-3-Clause
  dependencies:
    provides:
      - postgresql-iamguarded-compat=${{package.full-version}}
    runtime:
      - bash
      # Required by startup scripts
      - busybox
      - merged-usrsbin
      - net-tools
      - pgaudit-${{vars.major-version}}
      - postgresql-${{vars.major-version}}
      - wolfi-baselayout

environment:
  contents:
    packages:
      - bash
      - busybox
      - net-tools
      - postgresql-${{vars.major-version}}-base

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+).*
    replace: $1
    to: major-version

pipeline:
  - uses: iamguarded/build-compat
    with:
      package: postgresql
      version: ${{vars.major-version}}

  - runs: |
      mkdir -p /iamguarded/postgresql
      mkdir -p /opt/iamguarded/postgresql/conf/conf.d
      mkdir -p /opt/iamguarded/postgresql/conf.default/conf.d
      mkdir -p /opt/iamguarded/postgresql/share
      mkdir -p /opt/iamguarded/postgresql/tmp
      mkdir -p /opt/iamguarded/postgresql/logs

      # Provide necessary permissions as per Iamguarded image
      chmod -R u+rwX,g+rwX,o+rw /iamguarded/postgresql
      chmod -R u+rwX,g+rwX,o+rw /opt/iamguarded/postgresql

      # Copy sample configs used to generate Iamguarded config
      cp /usr/share/postgresql${{vars.major-version}}/pg_hba.conf.sample /opt/iamguarded/postgresql/share/pg_hba.conf.sample
      cp /usr/share/postgresql${{vars.major-version}}/postgresql.conf.sample /opt/iamguarded/postgresql/share/postgresql.conf.sample

      /opt/iamguarded/scripts/postgresql/postunpack.sh

      # Remove sample configs
      rm /opt/iamguarded/postgresql/share/*.sample

      # Link binaries used by Iamguarded config
      ln -sf /usr/libexec/postgresql${{vars.major-version}} /opt/iamguarded/postgresql/bin
      ln -sf /usr/lib/postgresql${{vars.major-version}} /opt/iamguarded/postgresql/lib

  - uses: iamguarded/finalize-compat
    with:
      package: postgresql
      version: ${{vars.major-version}}

test:
  pipeline:
    - uses: iamguarded/test-compat
      with:
        package: postgresql
        version: ${{vars.major-version}}

update:
  enabled: false
  exclude-reason: repository is a monorepo we don't have fidelity into the specific package updates
