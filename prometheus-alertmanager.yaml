package:
  name: prometheus-alertmanager
  version: "0.28.1"
  epoch: 4
  description: Prometheus Alertmanager
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - curl
      - go
      - nodejs<21
      - npm

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/prometheus/alertmanager
      tag: v${{package.version}}
      expected-commit: b2099eaa2c9ebc25edb26517cb9c732738e93910

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.38.0

  - runs: |
      sed -i '/_ "net\/http\/pprof"/d' ui/web.go
      git diff

  - runs: |
      make build

  - runs: |
      install -Dm755 amtool "${{targets.destdir}}"/usr/bin/amtool
      install -Dm755 alertmanager "${{targets.destdir}}"/usr/bin/alertmanager
      install -Dm644 examples/ha/alertmanager.yml "${{targets.destdir}}"/etc/alertmanager/alertmanager.yml

  - uses: strip

subpackages:
  - name: ${{package.name}}-bitnami-compat
    dependencies:
    description: "compat package with bitnami/alertmanager image"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/opt/bitnami/alertmanager/bin/
          mkdir -p ${{targets.contextdir}}/opt/bitnami/alertmanager/conf/
          mkdir -p ${{targets.contextdir}}/opt/bitnami/alertmanager/data/
          mkdir -p ${{targets.contextdir}}/etc/alertmanager
          mkdir -p ${{targets.contextdir}}/alertmanager
          chmod g+rwX ${{targets.contextdir}}/opt/bitnami/alertmanager/data/
          ln -sf /usr/bin/alertmanager ${{targets.contextdir}}/opt/bitnami/alertmanager/bin/alertmanager
          ln -sf /usr/bin/amtool ${{targets.contextdir}}/opt/bitnami/alertmanager/bin/amtool
          ln -sf /etc/alertmanager/alertmanager.yml ${{targets.contextdir}}/opt/bitnami/alertmanager/conf/config.yml
          ln -sf /opt/bitnami/alertmanager/conf ${{targets.contextdir}}/etc/alertmanager
          ln -sf /opt/bitnami/alertmanager/data ${{targets.contextdir}}/alertmanager
    test:
      environment:
        contents:
          packages:
            - ${{package.name}}
            - curl
      pipeline:
        - runs: |
            /opt/bitnami/alertmanager/bin/alertmanager --version | grep ${{package.version}}
            /opt/bitnami/alertmanager/bin/alertmanager --help
            /opt/bitnami/alertmanager/bin/amtool --version | grep ${{package.version}}
            /opt/bitnami/alertmanager/bin/amtool --help
        - name: "start alertmanager and test"
          uses: test/daemon-check-output
          with:
            start: /opt/bitnami/alertmanager/bin/alertmanager --config.file=test-alertmanager-config.yaml --storage.path=alertmanager --web.listen-address=127.0.0.1:9093 --cluster.listen-address="" --log.level=debug
            timeout: 30
            expected_output: |
              Starting Alertmanager
              Build context
            post: |
              #!/bin/sh -e
              # Test health endpoints
              curl -s http://127.0.0.1:9093/-/ready | grep -i OK
              curl -s http://127.0.0.1:9093/-/healthy | grep -i OK
              # Create a test alert
              curl -XPOST -H "Content-Type: application/json" -d '[{"labels":{"alertname":"TestAlertFromMelangeTest","severity":"critical"}}]' http://127.0.0.1:9093/api/v2/alerts

update:
  enabled: true
  github:
    identifier: prometheus/alertmanager
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - runs: |
        alertmanager --version
        alertmanager --help
        amtool --version
        amtool --help
    - name: Functional tests
      runs: |
        # Start alertmanager with test config
        alertmanager \
          --config.file=test-alertmanager-config.yaml \
          --storage.path=alertmanager \
          --web.listen-address=127.0.0.1:9093 \
          --cluster.listen-address="" \
          --log.level=debug &
        AM_PID=$!
        sleep 5

        # Test health endpoints
        curl -s http://127.0.0.1:9093/-/ready || exit 1
        curl -s http://127.0.0.1:9093/-/healthy || exit 1

        # Create a test alert
        curl -XPOST -H "Content-Type: application/json" \
          -d '[{"labels":{"alertname":"TestAlertFromMelangeTest","severity":"critical"}}]' \
          http://127.0.0.1:9093/api/v2/alerts

        # Verify alert exists
        curl -s http://127.0.0.1:9093/api/v2/alerts | grep -q "TestAlertFromMelangeTest"

        # Create a silence for our test alert
        SILENCE_ID=$(curl -s -XPOST -H "Content-Type: application/json" \
          -d '{"matchers":[{"name":"alertname","value":"TestAlertFromMelangeTest","isRegex":false}],"startsAt":"2021-01-01T00:00:00Z","endsAt":"2031-01-01T00:00:00Z","createdBy":"melange-test","comment":"test silence"}' \
          http://127.0.0.1:9093/api/v2/silences | grep -o '"silenceID":"[^"]*"' | cut -d'"' -f4)

        # Verify silence exists
        curl -s http://127.0.0.1:9093/api/v2/silences | grep -q "$SILENCE_ID"
