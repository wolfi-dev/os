package:
  name: prometheus-operator
  version: "0.81.0"
  epoch: 2
  description: Prometheus Operator creates/configures/manages Prometheus clusters atop Kubernetes
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - merged-bin
      - wolfi-baselayout

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - go
      - openssl

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/prometheus-operator/prometheus-operator.git
      tag: v${{package.version}}
      expected-commit: 240b3031fc5bdcaa3d784bdc776f6114bbc6808d

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0

  - uses: autoconf/make
    with:
      opts: operator

  - runs: |
      mkdir -p "${{targets.contextdir}}/usr/bin"
      cp ./operator "${{targets.contextdir}}/usr/bin"

  - runs: |
      # test uses the -race flag which is incompatible with -buildmode=pie
      unset GOFLAGS
      make test-unit

subpackages:
  - name: prometheus-config-reloader
    description: Prometheus Operator creates/configures/manages Prometheus clusters atop Kubernetes
    dependencies:
      # REMOVE_POST_USRMERGE - https://github.com/orgs/wolfi-dev/discussions/40270
      provides:
        - prometheus-config-reloader-oci-entrypoint-compat=${{package.full-version}}
      runtime:
        - merged-bin
        - wolfi-baselayout
    pipeline:
      - uses: autoconf/make
        with:
          opts: prometheus-config-reloader
      - runs: |
          mkdir -p "${{targets.contextdir}}/usr/bin"
          mv ./prometheus-config-reloader "${{targets.contextdir}}/usr/bin"

  - name: prometheus-admission-webhook
    description: Prometheus Operator creates/configures/manages Prometheus clusters atop Kubernetes
    dependencies:
      provides:
        # REMOVE_POST_USRMERGE - https://github.com/orgs/wolfi-dev/discussions/40270
        - prometheus-admission-webhook-compat=${{package.full-version}}
      runtime:
        - merged-bin
        - wolfi-baselayout
    pipeline:
      - uses: autoconf/make
        with:
          opts: admission-webhook
      - runs: |
          mkdir -p "${{targets.contextdir}}/usr/bin"
          mv ./admission-webhook "${{targets.contextdir}}/usr/bin"
    test:
      pipeline:
        - runs: |
            admission-webhook --version
            admission-webhook --help

  - name: ${{package.name}}-bitnami-compat
    dependencies:
      runtime:
        - ${{package.name}}
        - prometheus-config-reloader
        - coreutils
        - findutils
        - grep
        - procps
        - sed
    description: "compat package with bitnami/prometheus-operator image"
    pipeline:
      - uses: bitnami/compat
        with:
          image: prometheus-operator
          version-path: 0/debian-12
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/bitnami/${{package.name}}/bin/
          chmod g+rwX ${{targets.subpkgdir}}/opt/bitnami
          ln -sf ${{targets.contextdir}}/usr/bin/operator ${{targets.subpkgdir}}/opt/bitnami/${{package.name}}/bin/operator
          ln -sf ${{targets.contextdir}}/usr/bin/prometheus-config-reloader ${{targets.subpkgdir}}/opt/bitnami/${{package.name}}/bin/prometheus-config-reloader
    test:
      environment:
        environment:
          BITNAMI_APP_NAME: prometheus-operator
      pipeline:
        - name: Test symlinks
          runs: |
            test -f $(readlink -f /bin/operator)
            test -f $(readlink -f /bin/prometheus-config-reloader)
        - name: "Setup mock Kubernetes cluster"
          uses: test/kwok/cluster
        - name: "Test prometheus-operator with mock API server"
          runs: |
            output=$(operator --log-level=debug \
              --apiserver $(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}') \
              -tls-insecure 2>&1 || true)

            echo "$output" | grep -q "Starting Prometheus Operator" || {
              echo "Expected output not found: Starting Prometheus Operator"
              exit 1
            }

            # The operator will fail because it doesn't expose a simple way to just use our kubeconfig, so just check for the known errors
            echo "$output" | grep -q "failed to check StorageClass support" || {
              echo "Expected error not found: failed to check StorageClass support"
              exit 1
            }

update:
  enabled: true
  github:
    identifier: prometheus-operator/prometheus-operator
    strip-prefix: v

test:
  pipeline:
    - name: "Check operator binary"
      runs: |
        operator --version
        operator --help
    - name: "Setup mock Kubernetes cluster"
      uses: test/kwok/cluster
    - name: "Test prometheus-operator with mock API server"
      runs: |
        output=$(operator --log-level=debug \
          --apiserver $(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}') \
          -tls-insecure 2>&1 || true)

        echo "$output" | grep -q "Starting Prometheus Operator" || {
          echo "Expected output not found: Starting Prometheus Operator"
          exit 1
        }

        # The operator will fail because it doesn't expose a simple way to just use our kubeconfig, so just check for the known errors
        echo "$output" | grep -q "failed to check StorageClass support" || {
          echo "Expected error not found: failed to check StorageClass support"
          exit 1
        }
