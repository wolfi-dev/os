package:
  name: protobuf
  version: "33.0" # On update, please check if -fdelete-null-pointer-checks is still required
  epoch: 0
  description: Library for extensible, efficient structure packing
  copyright:
    - license: BSD-3-Clause

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+)\.(\d+)$
    replace: ${1}.${2}.0
    to: soversion

environment:
  contents:
    packages:
      - abseil-cpp-dev
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - git
      - libtool
      - samurai
      - zlib-dev
  environment:
    # https://github.com/wolfi-dev/os/issues/34075
    CMAKE_CXX_FLAGS: -fdelete-null-pointer-checks

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/protocolbuffers/protobuf
      tag: v${{package.version}}
      expected-commit: a79f2d2e9fadd75e94f3fe40a0399bf0a5d90551
      cherry-picks: |
        main/ced605d0e6a7ad20985375b596b2ca6720e07737: utf8_range: add version marker to library

  - runs: |
      cmake -B build -G Ninja \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DCMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS" \
        -DBUILD_SHARED_LIBS=True \
        -DCMAKE_BUILD_TYPE=Release \
        -Dprotobuf_ABSL_PROVIDER=package \
        -Dprotobuf_BUILD_TESTS=OFF \
        -Dprotobuf_BUILD_LIBUPB=ON \
        -Dprotobuf_LOCAL_DEPENDENCIES_ONLY=ON
      ninja -C build
      DESTDIR=${{targets.destdir}} ninja -C build install

  - uses: strip

subpackages:
  - name: ${{package.name}}-dev
    description: protobuf dev
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - abseil-cpp-dev
        - libprotoc${{vars.soversion}}
        - libprotobuf${{vars.soversion}}
        - libprotobuf-lite${{vars.soversion}}
        - protobuf
        - protoc
        - zlib-dev
    test:
      pipeline:
        - uses: test/pkgconf
        - uses: test/tw/ldd-check

  - name: protoc
    description: Protocol buffer compiler binary and library
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          mv ${{targets.destdir}}/usr/bin/protoc-${{vars.soversion}} ${{targets.subpkgdir}}/usr/bin/
          mv ${{targets.destdir}}/usr/bin/protoc ${{targets.subpkgdir}}/usr/bin/protoc
    test:
      pipeline:
        - name: Verify protoc installation
          runs: |
            protoc --version || exit 1
            protoc-${{vars.soversion}} --version
            protoc-${{vars.soversion}} --help
        - name: Compile sample proto file
          runs: |
            echo 'syntax = "proto3"; message Test { string name = 1; }' > test.proto
            protoc --proto_path=. --python_out=. test.proto || exit 1

  - name: libprotoc${{vars.soversion}}
    description: Runtime library for Protocol Buffer compiler
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv ${{targets.destdir}}/usr/lib/libprotoc*.so.* ${{targets.subpkgdir}}/usr/lib/
          mv ${{targets.destdir}}/usr/lib/libutf8_*.so.* ${{targets.subpkgdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/tw/ldd-check

  - name: libprotobuf${{vars.soversion}}
    description: Runtime library for C++ users of protocol buffers
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv ${{targets.destdir}}/usr/lib/libprotobuf.so.* ${{targets.subpkgdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/tw/ldd-check

  - name: libprotobuf-lite${{vars.soversion}}
    description: Runtime library for C++ users with 'lite runtime' setting of protocol buffers
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv ${{targets.destdir}}/usr/lib/libprotobuf-lite.so.* ${{targets.subpkgdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/tw/ldd-check

update:
  enabled: true
  github:
    identifier: protocolbuffers/protobuf
    strip-prefix: v
    use-tag: true
  ignore-regex-patterns:
    - '.*-dev$'

test:
  environment:
    contents:
      packages:
        - ${{package.name}}-dev
  pipeline:
    - runs: |
        protoc --help
    - uses: test/tw/ldd-check
