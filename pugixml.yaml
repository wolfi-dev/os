package:
  name: pugixml
  version: "1.15"
  epoch: 1
  description: "Light-weight, simple and fast XML parser for C++ with XPath support"
  copyright:
    - license: "MIT"

environment:
  contents:
    packages:
      - build-base
      - busybox

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/zeux/pugixml.git
      tag: v${{package.version}}
      expected-commit: ee86beb30e4973f5feffe3ce63bfa4fbadf72f38

  - uses: cmake/configure
    with:
      opts: |
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

subpackages:
  - name: ${{package.name}}-dev
    description: Development files for pugixml
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - ${{package.name}}
    test:
      pipeline:
        - uses: test/tw/ldd-check

test:
  environment:
    contents:
      packages:
        - gcc
        - pkgconf
        - ${{package.name}}-dev
  pipeline:
    - uses: test/tw/ldd-check
    - name: Test basic functionality
      runs: |
        # Create a simple test program to verify the library works
        cat > /tmp/test_pugixml.cpp << 'EOF'
        #include <pugixml.hpp>
        #include <iostream>
        #include <sstream>

        int main() {
            // Test basic XML parsing
            pugi::xml_document doc;
            std::string xml_content = "<?xml version=\"1.0\"?><root><child>test</child></root>";

            pugi::xml_parse_result result = doc.load_string(xml_content.c_str());

            if (!result) {
                std::cerr << "XML parsing failed: " << result.description() << std::endl;
                return 1;
            }

            // Test XPath functionality
            pugi::xpath_node node = doc.select_node("//child");
            if (!node) {
                std::cerr << "XPath query failed" << std::endl;
                return 1;
            }

            std::string text = node.node().child_value();
            if (text != "test") {
                std::cerr << "Expected 'test', got '" << text << "'" << std::endl;
                return 1;
            }

            std::cout << "pugixml basic functionality test passed!" << std::endl;
            return 0;
        }
        EOF

        # Compile and run the test
        g++ -o /tmp/test_pugixml /tmp/test_pugixml.cpp $(pkg-config --cflags --libs pugixml)
        /tmp/test_pugixml

        echo "All pugixml tests passed successfully!"

update:
  enabled: true
  github:
    identifier: zeux/pugixml
    strip-prefix: v
