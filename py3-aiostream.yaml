package:
  name: py3-aiostream
  version: 0.6.4
  epoch: 0
  description: Generator-based operators for asynchronous iteration
  copyright:
    - license: GPL-3.0
  dependencies:
    provider-priority: 0

vars:
  pypi-package: aiostream
  import: aiostream

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - py3-supported-build-base

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 4cd7257a1c948c09c21738d922a47f33b8b2f674
      repository: https://github.com/vxgmichel/aiostream
      tag: v${{package.version}}

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
      runtime:
        - py${{range.key}}-typing-extensions
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}
    - uses: py/one-python
      with:
        content: |
          cat <<'EOF' > /tmp/test_aiostream.py
          import asyncio
          from aiostream import stream

          async def numbers():
              for i in range(3):
                  yield i

          async def letters():
              for c in ['a', 'b', 'c']:
                  yield c

          async def main():
              merged = stream.merge(numbers(), letters())
              output = [item async for item in merged]
              assert set(output) == {0, 1, 2, 'a', 'b', 'c'}

          asyncio.run(main())
          EOF
          python3 /tmp/test_aiostream.py

update:
  enabled: true
  ignore-regex-patterns:
    - (.*)(a|b|rc)(.*)
  github:
    use-tag: true
    strip-prefix: v
    identifier: vxgmichel/aiostream
