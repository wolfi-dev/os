package:
  name: py3-botocore
  version: "1.37.6"
  epoch: 0
  description: The low-level, core functionality of Boto3
  copyright:
    - license: Apache-2.0
  dependencies:
    provider-priority: 0

vars:
  pypi-package: botocore
  import: botocore

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - py3-supported-build-base

pipeline:
  - uses: fetch
    with:
      uri: https://files.pythonhosted.org/packages/source/b/botocore/botocore-${{package.version}}.tar.gz
      expected-sha256: 2cb121a403cbec047d76e2401a402a6b2efd3309169037fbac588e8f7125aec4

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
      runtime:
        - py${{range.key}}-dateutil
        - py${{range.key}}-jmespath
        - py${{range.key}}-urllib3
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}
    - name: Import Test
      uses: py/one-python
      with:
        content: |
          #!/usr/bin/env python3
          import botocore
          import botocore.session
          print('Botocore imported successfully')
    - name: Session Creation Test
      uses: py/one-python
      with:
        content: |
          #!/usr/bin/env python3
          import botocore.session
          session = botocore.session.Session()
          print('Session created successfully')
    - name: Mocked EC2 API Call Test
      uses: py/one-python
      with:
        content: |
          #!/usr/bin/env python3
          import botocore.session
          from botocore.stub import Stubber
          session = botocore.session.Session()
          ec2 = session.create_client('ec2', region_name='us-west-2')
          stubber = Stubber(ec2)
          response = {'Regions': [{'RegionName': 'us-west-2', 'Endpoint': 'ec2.us-west-2.amazonaws.com'}]}
          stubber.add_response('describe_regions', response)
          stubber.activate()
          assert ec2.describe_regions() == response, 'Mocked EC2 call failed'
          print('Mocked EC2 API call success')
    - name: Validate EC2 JSON Data
      uses: py/one-python
      with:
        content: |
          #!/usr/bin/env python3
          import os, site
          sp = site.getsitepackages()[0]
          ec2_waiter = os.path.sep.join((sp, 'botocore/data/ec2/2016-11-15/waiters-2.json'))
          assert os.path.isfile(ec2_waiter), 'EC2 waiter JSON not found'
          print('EC2 waiter JSON validated')

update:
  enabled: true
  release-monitor:
    identifier: 29738
