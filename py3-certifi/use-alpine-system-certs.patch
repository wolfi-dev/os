# originated from https://git.alpinelinux.org/aports/tree/main/py3-certifi/use-alpine-system-certs.patch

NEVER EVER REMOVE THIS PATCH
REBASE IT ON TOP OF THE VERSION YOU'RE UPGRADING

This makes py3-certifi use the system certificates provided by Alpine Linux
instead of the ones provided with py3-certifi instead, this allows us to add
this package as a dependency for other packages without worries.

This is based on the patch used by Debian

diff --git a/certifi/core.py b/certifi/core.py
index 1c9661c..32423f7 100644
--- a/certifi/core.py
+++ b/certifi/core.py
@@ -10,13 +10,13 @@ import atexit
 def exit_cacert_ctx() -> None:
     _CACERT_CTX.__exit__(None, None, None)  # type: ignore[union-attr]
 
+ALPINE_CA_CERTS_PATH = '/etc/ssl/certs/ca-certificates.crt'
 
 if sys.version_info >= (3, 11):
 
     from importlib.resources import as_file, files
 
-    _CACERT_CTX = None
-    _CACERT_PATH = None
+    _CACERT_PATH = ALPINE_CA_CERTS_PATH
 
     def where() -> str:
         # This is slightly terrible, but we want to delay extracting the file
@@ -44,14 +44,14 @@ if sys.version_info >= (3, 11):
         return _CACERT_PATH
 
     def contents() -> str:
-        return files("certifi").joinpath("cacert.pem").read_text(encoding="ascii")
+        with open(where(), "r", encoding="ascii") as data:
+            return data.read()
 
 else:
 
     from importlib.resources import path as get_path, read_text
 
-    _CACERT_CTX = None
-    _CACERT_PATH = None
+    _CACERT_PATH = ALPINE_CA_CERTS_PATH
 
     def where() -> str:
         # This is slightly terrible, but we want to delay extracting the
@@ -80,4 +80,5 @@ else:
         return _CACERT_PATH
 
     def contents() -> str:
-        return read_text("certifi", "cacert.pem", encoding="ascii")
+        with open(where(), "r", encoding="ascii") as data:
+            return data.read()
