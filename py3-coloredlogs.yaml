package:
  name: py3-coloredlogs
  version: 15.0.1
  epoch: 1
  description: Simple cross-platform colored terminal text
  copyright:
    - license: MIT

vars:
  pypi-package: coloredlogs

environment:
  contents:
    packages:
      - py3-supported-build-base-dev

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/xolox/python-coloredlogs
      tag: ${{package.version}}
      expected-commit: 65bdfe976ac0bf81e8c0bd9a98242b9d666b2859

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: ${{vars.pypi-package}} installed for python${{range.key}}
    dependencies:
      runtime:
        - py${{range.key}}-humanfriendly
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      environment:
        contents:
          packages:
            - python-${{range.key}}
            - py${{range.key}}-pip
            - py${{range.key}}-${{vars.pypi-package}}
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.pypi-package}}
        - runs: |
            pip freeze | grep -F -e "${{vars.pypi-package}}-${{package.version}}"
        - runs: |
            LOGFILE=$(mktemp)
            python3 <<'EOF' 2>&1 | tee "${LOGFILE}"
            import coloredlogs, logging

            logger = logging.getLogger(__name__)
            logger.debug("this should not show up")
            logger.info("this should not show up")
            logger.warning("this is a warning message")
            logger.error("this is an error message")
            logger.critical("this is a critical message")
            EOF
            grep -F \
              -e "this is a warning message" \
              -e "this is an error message" \
              -e "this is a critical message" \
              "${LOGFILE}"
            if grep -F -e "this should not show up" "${LOGFILE}" ; then
              printf "%s\n" "Expected debug and info logs to be disabled by default" >&2
              exit 1
            fi

update:
  enabled: true
  git:
    strip-prefix: v
