package:
  name: py3-conda-libmamba-solver
  version: "25.1.1"
  epoch: 0
  description: The libmamba based solver for conda.
  copyright:
    - license: BSD-3-Clause
  dependencies:
    provider-priority: 0

vars:
  pypi-package: conda-libmamba-solver
  import: conda_libmamba_solver
  test-comprehensive: |
    cat > test.py <<-EOF
    from conda.models.match_spec import MatchSpec
    from conda.models.channel import Channel
    from conda_libmamba_solver.solver import LibMambaSolver

    def main():
        # Test a simple solve scenario
        channel = Channel('defaults')
        solver = LibMambaSolver(
          prefix='/tmp/test-env',
            channels=[channel],
            specs_to_add=[MatchSpec('python=3.10'), MatchSpec('numpy')]
        )

        try:
            solution = solver.solve_final_state()
            if not solution:
                raise Exception("No solution returned.")

            # Check that expected packages are present
            solved_names = {pkg.name for pkg in solution}
            for expected in ['python', 'numpy']:
                if expected not in solved_names:
                    raise Exception(f"Expected {expected} in solution, got {solved_names}")

            print("Solver returned a valid solution containing python and numpy.")

        except Exception as e:
            print(f"Error during solver test: {e}")
            raise

        # Test a conflicting scenario
        solver.specs_to_add = [MatchSpec('python=3.10'), MatchSpec('python=3.9')]
        try:
            conflict_solution = solver.solve_final_state()
            raise Exception("Expected a conflict, but solver returned a solution.")
        except Exception as conflict_exception:
            print("As expected, no solution could be found for conflicting specs.")

    if __name__ == "__main__":
        main()
    EOF
    python3 test.py

data:
  - name: py-versions
    items:
      # 3.13 is disabled until conda is available
      3.10: "310"
      3.11: "311"
      3.12: "312"

environment:
  contents:
    packages:
      - ca-certificates-bundle
      - py3-supported-build-base
      - py3-supported-hatch-vcs
      - py3-supported-hatchling
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/conda/conda-libmamba-solver
      tag: ${{package.version}}
      expected-commit: 539f05b15aca43c50222cc98d6c6fd39368f7cd3

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provides:
        - py3-${{vars.pypi-package}}
      provider-priority: ${{range.value}}
      runtime:
        - py${{range.key}}-boltons
        - py${{range.key}}-libmambapy
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      environment:
        contents:
          packages:
            # The comprehensive solver test will use `python3`, so let's
            # make sure it points to the python3.x we want to test by
            # installing python-3.x.
            - py${{range.key}}-conda
            - python-${{range.key}}
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.import}}
        - name: "Run comprehensive solver test for python${{range.key}}"
          runs: ${{vars.test-comprehensive}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: python/import
          with:
            python: python3.10
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.11
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.12
            import: ${{vars.import}}

update:
  enabled: true
  github:
    identifier: conda/conda-libmamba-solver

test:
  environment:
    contents:
      packages:
        - conda
  pipeline:
    - uses: python/import
      with:
        import: ${{vars.import}}
    - name: "Run comprehensive solver test w/ python3"
      runs: ${{vars.test-comprehensive}}
