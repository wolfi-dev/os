# Generated from https://pypi.org/project/google-cloud-bigtable/
package:
  name: py3-google-cloud-bigtable
  version: "2.30.0"
  epoch: 0
  description: Google Cloud Bigtable API client library
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - py3-google-api-core
      - py3-google-cloud-core
      - py3-grpc-google-iam-v1
      - py3-proto-plus
      - py3-protobuf
      - python-3

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - py3-setuptools
      - python-3
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      # README: for version v2.21.0, if you use this, update the package.version above to this version
      expected-commit: 4f0331f357acd831431bf422c7d520c42209ee39
      repository: https://github.com/googleapis/python-bigtable
      tag: v${{package.version}}

  - name: Python Build
    uses: python/build-wheel

  - uses: strip

test:
  pipeline:
    - uses: python/import
      with:
        imports: import google.cloud.bigtable
    - name: Simple mocked usage
      runs: |
        echo > test.py <<EOF
        import unittest
        from unittest.mock import MagicMock, patch
        from google.cloud.bigtable import Client

        class TestBigtableClient(unittest.TestCase):
            @patch('google.cloud.bigtable.Client')
            def test_write_row(self, mock_client):
                mock_table = MagicMock()
                mock_row = MagicMock()

                mock_instance = MagicMock()
                mock_client.return_value.instance.return_value = mock_instance
                mock_instance.table.return_value = mock_table
                mock_table.row.return_value = mock_row

                client = Client(project="fake-project")
                table = client.instance("fake-instance").table("fake-table")
                row = table.row("test-row")
                row.set_cell("cf1", b"col1", b"test-value")
                row.commit()

                mock_row.commit.assert_called_once()

        if __name__ == '__main__':
            unittest.main()
        EOF
        python3 test.py

update:
  enabled: true
  manual: false
  github:
    identifier: googleapis/python-bigtable
    strip-prefix: v
