package:
  name: py3-graph-tool
  version: 2.97
  epoch: 3
  description: graph-tool is an efficient Python module for manipulation and statistical analysis of graphs (a.k.a. networks).
  resources:
    cpu: 65
    memory: 128Gi
  copyright:
    - license: GPL-3.0-only

vars:
  pypi-package: graph-tool
  import: graph_tool

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - bash
      - boost-dev
      - busybox
      - cairo-dev
      - cairomm-1.16-dev
      - ccache
      - cgal-dev
      - eigen-dev
      - expat-dev
      - freetype-dev
      - glib-gir
      - gmp-dev
      - gtk-3-dev
      - libsigcplusplus-dev
      - libtool
      - mpfr-dev
      - pkgconf-dev
      - py3-supported-build-base-dev
      - py3-supported-cairo
      - py3-supported-gobject3
      - py3-supported-libboost
      - py3-supported-numpy
      - py3-supported-scipy
      - sparsehash-dev
      - zlib-dev
  environment:
    # Use ccache
    CC: ccache gcc
    CXX: ccache g++
    # Silence literal gigabytes of warnings
    CXXFLAGS: '-Wno-attributes -Wno-maybe-uninitialized -Wno-uninitialized -Wno-psabi'

pipeline:
  - uses: git-checkout
    with:
      repository: https://git.skewed.de/count0/graph-tool
      tag: release-${{package.version}}
      expected-commit: cd15650ec9fb6807b4536b523a059354f231fcb1

  - runs: ccache -F 0 -M 0

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: "${{vars.pypi-package}} for Python ${{range.key}}"
    dependencies:
      runtime:
        - py${{range.key}}-cairo
        - py${{range.key}}-matplotlib
        - py${{range.key}}-gobject3
        - py${{range.key}}-numpy
        - py${{range.key}}-scipy
        - glib-gir
    pipeline:
      - runs: ./autogen.sh
      - uses: autoconf/configure
        with:
          opts: |
            --includedir=/usr/lib/cairomm-1.16 \
            PYTHON=python${{range.key}}
      - runs: |
          # Only link when needed
          sed -i -e 's/ -shared / -Wl,-O1,--as-needed\0/g' libtool

          # Grab available memory
          MEM_KB=$(awk '/^MemAvailable:/ { print $2; exit }' /proc/meminfo)
          MEM_MB=$(( MEM_KB / 1024 ))

          # Arbitrary amount of memory to reserve per-thread
          # https://salsa.debian.org/python-team/packages/graph-tool/-/blob/master/debian/rules?ref_type=heads
          MEM_PER_JOB=13000

          # Calculate number of jobs
          NJOBS=$(( MEM_MB / MEM_PER_JOB ))

          # Build graph tool
          make -C . -j$NJOBS
      - uses: autoconf/make-install
      - runs: find ${{targets.contextdir}} -name "*.so" -exec strip -g {} \;
    test:
      environment:
        contents:
          packages:
            - py${{range.key}}-numpy
            - py${{range.key}}-scipy
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.import}}
        - name: Verify basic graph creation
          runs: |
            python${{range.key}} <<EOF
            import graph_tool as gt

            # Create a new graph
            g = gt.Graph()

            # Add vertices
            g.add_vertex()
            g.add_vertex()

            # Add an edge
            g.add_edge(0, 1)

            # Verify graph structure
            assert g.num_vertices() == 2 and g.num_edges() == 1
            EOF
        - name: Verify property maps
          runs: |
            python${{range.key}} <<EOF
            import graph_tool as gt

            # Create a graph
            g = gt.Graph()

            # Create a string property map for vertices
            vprop = g.new_vertex_property('string')

            # Add a vertex and set its property
            v = g.add_vertex()
            vprop[v] = 'test'

            # Verify the property value
            assert vprop[v] == 'test'
            EOF
        - name: Verify basic algorithm
          runs: |
            python${{range.key}} <<EOF
            import graph_tool as gt

            # Create an undirected graph
            g = gt.Graph(directed=False)

            # Add three vertices
            v1 = g.add_vertex()
            v2 = g.add_vertex()
            v3 = g.add_vertex()

            # Add two edges to form a path
            g.add_edge(v1, v2)
            g.add_edge(v2, v3)

            # Calculate vertex degrees
            deg = g.degree_property_map('out')

            # Verify degrees (first and last vertex should have degree 1, middle vertex degree 2)
            assert list(deg) == [1, 2, 1]
            EOF

  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}-doc
    description: "Documentation for ${{vars.pypi-package}} with Python ${{range.key}}"
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/share
          mv ${{targets.outdir}}/py${{range.key}}-${{vars.pypi-package}}/usr/share/doc \
             ${{targets.contextdir}}/usr/share/
    test:
      pipeline:
        - uses: test/docs

  - name: py3-supported-${{vars.pypi-package}}
    description: Meta-package providing ${{vars.pypi-package}} for supported Python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}-dev
    description: "${{vars.pypi-package}} development files for Python ${{range.key}}"
    pipeline:
      - uses: split/dev
        with:
          package: py${{range.key}}-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: test/pkgconf
        - uses: test/tw/ldd-check

update:
  enabled: true
  git:
    strip-prefix: release-

test:
  pipeline:
    - uses: test/emptypackage
