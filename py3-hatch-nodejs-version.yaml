package:
  name: py3-hatch-nodejs-version
  version: "0.4.0"
  epoch: 0
  description: Reads PEP 621 metadata from the Node.js package.json file.
  copyright:
    - license: MIT
  dependencies:
    provider-priority: 0

vars:
  pypi-package: hatch-nodejs-version
  import: hatch_nodejs_version

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - py3-supported-build-base-dev
      - py3-supported-hatchling

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/agoose77/hatch-nodejs-version
      tag: v${{package.version}}
      expected-commit: 81c4612da14dec4b260bc956225fa24ab62b377e

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: test/metapackage

test:
  environment:
    contents:
      packages:
        - py3-hatch-bin
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}
    - runs: |
        mkdir -p src/test_project
        touch src/test_project/__init__.py  # Create an empty Python package

        echo '{"name": "test-project", "version": "${{package.version}}"}' > package.json

        cat <<EOF > pyproject.toml
        [build-system]
        requires = ["hatchling", "hatch-nodejs-version"]
        build-backend = "hatchling.build"

        [project]
        name = "test-project"
        dynamic = ["version"]  # This indicates that the version is determined dynamically

        [tool.hatch.version]
        source = "nodejs"
        EOF

        hatch build

        # Extract the version from the built wheel or sdist
        FILE_VERSION=$(ls dist | sed -n 's/.*-\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p' | head -n 1)

        # Check that the version matches what's in package.json
        if [[ "$FILE_VERSION" == "${{package.version}}" ]]; then
            echo "Test passed: Version matches ${{package.version}}"
        else
            echo "Test failed: Version mismatch"
            exit 1
        fi

update:
  enabled: true
  github:
    identifier: agoose77/hatch-nodejs-version
    tag-filter-prefix: v
    strip-prefix: v
