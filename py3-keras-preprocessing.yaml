package:
  name: py3-keras-preprocessing
  version: 1.1.2
  epoch: 6
  description: Easy data preprocessing and data augmentation for deep learning models
  copyright:
    - license: MIT
  dependencies:
    provider-priority: 0

vars:
  pypi-package: keras-preprocessing
  import: keras_preprocessing

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - py3-supported-build-base

pipeline:
  - uses: fetch
    with:
      expected-sha256: add82567c50c8bc648c14195bf544a5ce7c1f76761536956c3d2978970179ef3
      uri: https://files.pythonhosted.org/packages/source/k/keras_preprocessing/Keras_Preprocessing-${{package.version}}.tar.gz

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
      runtime:
        - py${{range.key}}-numpy<2.0
        - py${{range.key}}-six
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: test/metapackage

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}

update:
  enabled: false
  exclude-reason: >
    The modular keras-preprocessing package has been retired upstream in favor of monolithic "keras" package, but Tensorflow itself has not made the jump yet.

