package:
  name: py3-lz4
  version: 4.4.4
  epoch: 0
  description: LZ4 bindings for Python
  annotations:
    cgr.dev/ecosystem: python
  copyright:
    - license: BSD-3-Clause
  dependencies:
    provider-priority: 0

vars:
  pypi-package: lz4

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - build-base
      - py3-supported-build-base-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: b20fdf35e659d697bcc82a81ac0aec6bf95bdbc3
      repository: https://github.com/python-lz4/python-lz4
      tag: v${{package.version}}

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      environment:
        contents:
          packages:
            - python-${{range.key}}
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.pypi-package}}
        - name: Test basic functionality
          runs: |
            cat > test.py <<EOF
            import os
            import lz4.frame

            # Compress / decompress
            input_data = 20 * 128 * os.urandom(1024)
            compressed = lz4.frame.compress(input_data)
            decompressed = lz4.frame.decompress(compressed)

            assert decompressed == input_data

            # Compress in chunks
            context = lz4.frame.create_compression_context()
            compressed = lz4.frame.compress_begin(context)
            compressed += lz4.frame.compress_chunk(context, input_data[:10 * 128 * 1024])
            compressed += lz4.frame.compress_chunk(context, input_data[10 * 128 * 1024:])
            compressed += lz4.frame.compress_flush(context)

            # Work with compressed files
            with lz4.frame.open("testfile", mode="wb") as fp:
                bytes_written = fp.write(input_data)
                assert bytes_written == len(input_data)

            with lz4.frame.open("testfile", mode="r") as fp:
                output_data = fp.read()

            assert input_data == output_data
            EOF

            python${{range.key}} test.py

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

update:
  enabled: true
  github:
    identifier: python-lz4/python-lz4
    strip-prefix: v
    tag-filter: v
