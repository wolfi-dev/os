package:
  name: py3-pip
  version: "25.3"
  epoch: 1 # CVE-2025-8869
  description: The PyPA recommended tool for installing Python packages.
  copyright:
    - license: MIT

vars:
  pypi-package: pip

data:
  - name: py-versions
    items:
      3.10:
      3.11:
      3.12:
      3.13:
      3.14:

environment:
  contents:
    packages:
      - build-base
      - busybox
      - py3-supported-python
      - python-3.14-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/pypa/pip
      expected-commit: a52069365063ea813fe3a3f8bac90397c9426d35
      tag: ${{package.version}}

subpackages:
  - range: py-versions
    # Historically py3.X-pip installed /usr/bin/pip
    # Hence co-installable modules only package is called -base
    # And /usr/bin/pip conflicting package is called py3.X-pip
    name: py${{range.key}}-${{vars.pypi-package}}-base
    description: ${{vars.pypi-package}} installed for python${{range.key}}
    pipeline:
      - uses: py/pip-build-install-bootstrap
        with:
          python: python${{range.key}}
    dependencies:
      runtime:
        - py${{range.key}}-setuptools

  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: Executable binaries for ${{vars.pypi-package}} installed for python${{range.key}}
    dependencies:
      runtime:
        - py${{range.key}}-${{vars.pypi-package}}-base
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/bin
          mv ${{targets.contextdir}}/../py${{range.key}}-${{vars.pypi-package}}-base/usr/bin/pip ${{targets.contextdir}}/usr/bin/
          mv ${{targets.contextdir}}/../py${{range.key}}-${{vars.pypi-package}}-base/usr/bin/pip3 ${{targets.contextdir}}/usr/bin/
    test:
      environment:
        contents:
          packages:
            - python-${{range.key}}
      pipeline:
        - uses: test/tw/pip-check
        - name: "Basic pip command tests"
          uses: python/import
          with:
            import: pip
        - runs: |
            pip --version
            pip --help
            pip wheel --help
            pip3 --version
            pip3 --help
            pip3 wheel --help
        - name: "Check pip installation of a simple package"
          runs: |
            pip install requests
            python -c "import requests; print('requests imported successfully')"
        - name: "Verify pip list and show"
          runs: |
            pip list | grep requests
            pip show requests
        - name: "Uninstall the test package"
          runs: |
            pip uninstall -y requests
            python -c "import requests" && echo "ERROR: requests not uninstalled" && exit 1 || echo "requests successfully uninstalled"
        - name: "Check pip cache functionality"
          runs: |
            pip cache list | head -n 10
            pip cache remove '*'
            pip cache dir | xargs ls -al

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}-base
        - py3.11-${{vars.pypi-package}}-base
        - py3.12-${{vars.pypi-package}}-base
        - py3.13-${{vars.pypi-package}}-base
        - py3.14-${{vars.pypi-package}}-base
    test:
      pipeline:
        - uses: test/metapackage

  - name: py3-pip-wheel
    description: "wheel of pip"
    # priority here is higher than the py3-pip-wheel-bootstrap priority.
    dependencies:
      provider-priority: 10
    pipeline:
      - runs: |
          set -- ./.wheels/*/*.whl
          [ -e "$1" ] || { echo "did not find wheels matching ./wheels/*/*.whl"; exit 1; }
          echo "found $# wheels"
          sha256sum "$@" >/tmp/all
          found=$1
          shift
          read mysum path <"/tmp/all"
          while read sum path ; do
            [ "$mysum" = "$sum" ] || {
              echo "FAIL: selected wheel '$found' ($mysum) differed from $path $(sum)"
              exit 1
            }
          done </tmp/all

          wdir="${{targets.contextdir}}/usr/share/python-wheels"
          mkdir -p "$wdir"
          cp -v "$1" "$wdir"
          # NOTE: fix permissions to ensure readable by non-root user (0600 by default).
          chmod 0644 "$wdir"/*.whl

update:
  ignore-regex-patterns:
    - b
  enabled: true
  shared: true
  github:
    identifier: pypa/pip
    use-tag: true

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import pip
    - name: "Verify CVE-2024-47081 fix"
      uses: py/one-python
      with:
        content: |
          #!/usr/bin/env python3
          import sys
          # Import from pip's vendored requests
          from pip._vendor.requests.utils import get_netrc_auth
          import inspect

          # Get the source code of get_netrc_auth function
          source = inspect.getsource(get_netrc_auth)

          # Verify that the security fix is applied
          if 'host = ri.hostname' in source:
              print('✓ CVE-2024-47081 fix verified: using ri.hostname for netrc lookups')
              sys.exit(0)
          elif 'host = ri.netloc' in source or 'ri.netloc.split' in source:
              print('✗ VULNERABLE: still using ri.netloc for netrc lookups')
              sys.exit(1)
          else:
              print('? Unable to verify CVE fix - code structure may have changed')
              # Print relevant part of the source for debugging
              for line in source.split('\n'):
                  if 'host =' in line or 'ri.' in line:
                      print(f'  Found: {line.strip()}')
              sys.exit(1)
