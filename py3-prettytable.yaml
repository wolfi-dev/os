package:
  name: py3-prettytable
  version: "3.16.0"
  description: "Display tabular data in a visually appealing ASCII table format"
  epoch: 1
  copyright:
    - license: BSD-3-Clause

vars:
  pypi-package: prettytable

environment:
  contents:
    packages:
      - ca-certificates-bundle
      - py3-supported-build-base
      - py3-supported-hatch
      - py3-supported-hatch-vcs
  environment:
    SOURCE_DATE_EPOCH: 315532800

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/prettytable/prettytable.git
      tag: ${{package.version}}
      expected-commit: 0f9dd7c94a86c8956dce89f26325d5ae1a4a9a3e

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: ${{vars.pypi-package}} installed for python${{range.key}}
    dependencies:
      runtime:
        - py${{range.key}}-wcwidth
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
          prevent-inclusion: melange-out
    test:
      environment:
        contents:
          packages:
            - python-${{range.key}}
      pipeline:
        - name: Check if the package is installed
          runs: |
            python3 -c "import prettytable; print(prettytable.__version__)" | grep -q "${{package.version}}"
        - name: Test adding and retrieving table data
          runs: |
            cat <<"EOF" >test.py
            #!/usr/bin/env python
            from prettytable import PrettyTable

            expected_data = [
                {'Name': 'Alice', 'Age': 30, 'City': 'New York'},
                {'Name': 'Bob', 'Age': 25, 'City': 'Los Angeles'},
                {'Name': 'Charlie', 'Age': 35, 'City': 'Chicago'}
            ]

            # Create PrettyTable instance
            table = PrettyTable(['Name', 'Age', 'City'])

            # Add rows dynamically
            for row in expected_data:
                table.add_row([row['Name'], row['Age'], row['City']])

            print(table)
            EOF
            got="$(python test.py)"
            if [ -z "${got}" ]; then
              echo "PrettyTable output is empty"
              exit 1
            fi

              # Compare retrieved data with expected values
            expected="+---------+-----+-------------+
            |   Name  | Age |     City    |
            +---------+-----+-------------+
            |  Alice  |  30 |   New York  |
            |   Bob   |  25 | Los Angeles |
            | Charlie |  35 |   Chicago   |
            +---------+-----+-------------+"
            if [[ "${got}" != "${expected}" ]]; then
              echo "PrettyTable output is not as expected"
              exit 1
            fi

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

update:
  enabled: true
  github:
    identifier: prettytable/prettytable
