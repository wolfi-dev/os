package:
  name: py3-psycopg
  version: "3.2.5"
  epoch: 0
  description: PostgreSQL database adapter for Python
  copyright:
    - license: LGPL-3.0-only
  dependencies:
    provider-priority: 0

vars:
  pypi-package: psycopg
  import: psycopg

data:
  - name: py-versions
    items:
      3.10: "310"
      3.11: "311"
      3.12: "312"
      3.13: "313"

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - poetry
      - py3-supported-gpep517
      - py3-supported-pip
      - py3-supported-python-dev
      - py3-supported-setuptools
      - py3-supported-wheel
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/psycopg/psycopg
      tag: ${{package.version}}
      expected-commit: 664b2a12d68d9f826b58ea004f05460448e78bca

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
      runtime:
        - libpq-17
        - py${{range.key}}-typing-extensions
        - py${{range.key}}-tzdata
    pipeline:
      - uses: py/pip-build-install
        working-directory: psycopg
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      environment:
        contents:
          packages:
            - postgresql
            - postgresql-client
            - shadow
            - sudo-rs
            - glibc-locales
        environment:
          PGDATA: /tmp/test_db
          PGUSER: wolfi
      pipeline:
        - name: "Test database creation"
          runs: |
            useradd $PGUSER
            sudo -u $PGUSER initdb -D /tmp/test_db
            sudo -u $PGUSER pg_ctl -D /tmp/test_db -l /tmp/logfile start
            sudo -u $PGUSER createdb testdb
            psql -lqt | cut -d \| -f 1 | grep -qw testdb
        - name: "Test psycopg"
        - runs: |
            cat <<'EOF' >> /tmp/test.py
            import psycopg

            def main():
                conn = psycopg.connect(dbname="testdb", user="wolfi")
                cursor = conn.cursor()

                try:
                    # Create Table
                    cursor.execute("""
                        CREATE TABLE IF NOT EXISTS example_table (
                            id SERIAL PRIMARY KEY,
                            message TEXT
                        )
                    """)

                    # Insert value
                    cursor.execute("INSERT INTO example_table (message) VALUES (%s)", ("Hello Wolfy!",))
                    conn.commit()

                    # Select and print
                    cursor.execute("SELECT message FROM example_table")
                    result = cursor.fetchone()
                    message = result[0].decode("utf-8")
                    print("Message retrieved from database:", message)

                except Exception as e:
                    print("Error:", e)

                finally:
                    cursor.close()
                    conn.close()

            if __name__ == "__main__":
                main()
            EOF

            python${{range.key}} /tmp/test.py

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: python/import
          with:
            python: python3.10
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.11
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.12
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.13
            import: ${{vars.import}}

update:
  enabled: true
  ignore-regex-patterns:
    - pool-*
    - 3.0.dev*
  github:
    identifier: psycopg/psycopg
    use-tag: true
