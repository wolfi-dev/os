package:
  name: py3-pyarrow
  version: 19.0.1
  epoch: 0
  description: Apache Arrow is the universal columnar format and multi-language toolbox for fast data interchange and in-memory analytics
  annotations:
    cgr.dev/ecosystem: python
  copyright:
    - license: Apache-2.0
  dependencies:
    provider-priority: 0

vars:
  pypi-package: pyarrow

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  environment:
    ARROW_HOME: /home/build/dist
    CMAKE_PREFIX_PATH: /home/build/dist
    LD_LIBRARY_PATH: /home/build/dist/lib
  contents:
    packages:
      - build-base
      - brotli-dev
      - cmake
      - py3-supported-build-base-dev
      - py3-supported-cython
      - py3-supported-numpy
      - samurai

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 272715f6df2a042d69881ffa03d5078c58e4b345
      recurse-submodules: true
      repository: https://github.com/apache/arrow
      tag: apache-arrow-${{package.version}}

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    pipeline:
      - name: Set up C++ libraries
        runs: |
          cmake -S cpp -B cpp/build -DCMAKE_INSTALL_PREFIX=$ARROW_HOME --preset ninja-release-python
          cmake --build cpp/build --target install
      - uses: py/pip-build-install
        working-directory: python
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      environment:
        contents:
          packages:
            - py${{range.key}}-numpy
            - python-${{range.key}}
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.pypi-package}}
        - name: Test basic functionality
          runs: |
            cat > test.py <<EOF
            import numpy as np
            import ${{vars.pypi-package}} as pa
            import ${{vars.pypi-package}}.parquet as pq

            # Create basic array
            arr = pa.array(np.arange(100))
            print(f"{arr[0]} .. {arr[-1]}")

            # Create Table / dump to Parquet file
            table = pa.Table.from_arrays([arr], names=["col1"])
            pq.write_table(table, "test.parquet", compression=None)

            # Read Parquet file
            read_table = pq.read_table("test.parquet")
            assert read_table == table
            EOF

            python${{range.key}} test.py

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: python/import
          with:
            python: python3.13
            import: ${{vars.pypi-package}}

update:
  enabled: true
  ignore-regex-patterns:
    - -rc[0-9]*$
    - \.dev$
  github:
    identifier: apache/arrow
    strip-prefix: apache-arrow-
    tag-filter: apache-arrow-
