From 235a9ada03c1079f8177a7e102d139980db6c083 Mon Sep 17 00:00:00 2001
From: dann frazier <dann.frazier@chainguard.dev>
Date: Mon, 7 Apr 2025 18:31:43 -0600
Subject: [PATCH] cmake: Use any available Python_add_library command

python_add_library and python3_add_library are mis-cased.
These commands are capitalized.

Even when corrected, this code will fail if Python_FOUND is
set, but Python_add_library() is not available, which appears
to be the issue described here:

 https://github.com/pybind/pybind11/issues/3996

This seems to be due to a mix of FindPython and FindPython3 usage.
Both Python_add_library() and Python3_add_library() support
Python 3.x, so use either one.

Signed-off-by: dann frazier <dann.frazier@chainguard.dev>
---
 tools/pybind11NewTools.cmake | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/tools/pybind11NewTools.cmake b/tools/pybind11NewTools.cmake
index 087784c2..785732c9 100644
--- a/tools/pybind11NewTools.cmake
+++ b/tools/pybind11NewTools.cmake
@@ -268,14 +268,18 @@ function(pybind11_add_module target_name)
     set(lib_type MODULE)
   endif()
 
-  if("${_Python}" STREQUAL "Python")
-    python_add_library(${target_name} ${lib_type} ${ARG_UNPARSED_ARGUMENTS})
-  elseif("${_Python}" STREQUAL "Python3")
-    python3_add_library(${target_name} ${lib_type} ${ARG_UNPARSED_ARGUMENTS})
-  else()
+  if(NOT ("${_Python}" STREQUAL "Python" OR "${_Python}" STREQUAL "Python3"))
     message(FATAL_ERROR "Cannot detect FindPython version: ${_Python}")
   endif()
 
+  if(COMMAND Python_add_library)
+    Python_add_library(${target_name} ${lib_type} ${ARG_UNPARSED_ARGUMENTS})
+  elseif(COMMAND Python3_add_library)
+    Python3_add_library(${target_name} ${lib_type} ${ARG_UNPARSED_ARGUMENTS})
+  else()
+    message(FATAL_ERROR "Neither Python_add_library nor Python3_add_library command found")
+  endif()
+
   target_link_libraries(${target_name} PRIVATE pybind11::headers)
 
   if(lib_type STREQUAL "MODULE")
-- 
2.45.2

