package:
  name: py3-pypiserver
  version: 2.3.2
  epoch: 0
  description: Minimal PyPI server for uploading & downloading packages with pip/easy_install
  copyright:
    - license: MIT AND Zlib
  dependencies:
    provider-priority: 0

vars:
  pypi-package: pypiserver
  import: pypiserver

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - py3-supported-build-base

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 01915d1a689327da763efb3a3358f4e91207da24
      repository: https://github.com/pypiserver/pypiserver
      tag: v${{package.version}}

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}
        - name: functional test
          runs: |
            apk add py${{range.key}}-pip wait-for-it
            pip${{range.key}} download coloredlogs -d my-packages
            touch /tmp/dummy-welcome.html
            pypi-server run --disable-fallback --welcome /tmp/dummy-welcome.html -p 8080 my-packages &
            wait-for-it localhost:8080
            pip${{range.key}} install --no-index --find-links http://localhost:8080/packages/   coloredlogs
  #- range: py-versions
  #  name: py${{range.key}}-${{vars.pypi-package}}-bin
  #  description: Executable binaries for ${{vars.pypi-package}} installed for python${{range.key}}
  #  dependencies:
  #    runtime:
  #      - py${{range.key}}-${{vars.pypi-package}}
  #    provides:
  #      - ${{package.name}}
  #      - py3-${{vars.pypi-package}}-bin
  #      - py3-${{vars.pypi-package}}
  #    provider-priority: ${{range.value}}
  #  pipeline:
  #    - runs: |
  #        mkdir -p ${{targets.contextdir}}/usr/
  #        tree
  #        mv ./cleanup/${{range.key}}/bin ${{targets.contextdir}}/usr/
  #        echo "ðŸ§Œ"
  #  test:
  #    pipeline:
  #      - runs: |
  #          pypi-server --version
  #- name: py3-supported-${{vars.pypi-package}}
  #  description: meta package providing ${{vars.pypi-package}} for supported python versions.
  #  dependencies:
  #    runtime:
  #      - py3.10-${{vars.pypi-package}}
  #      - py3.11-${{vars.pypi-package}}
  #      - py3.12-${{vars.pypi-package}}
  #      - py3.13-${{vars.pypi-package}}

  - name: py3-pypiserver-compat
    description: Compatibility files for running py3-pypiserver as per Docker image
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}/data"
          install -Dpm0755 -t "${{targets.subpkgdir}}/usr/bin/" ./docker/entrypoint.sh
          install -Dpm0755 -t "${{targets.subpkgdir}}/usr/bin/" ./docker/gunicorn.conf.py
          ln -sf /usr/bin/entrypoint.sh "${{targets.subpkgdir}}/entrypoint.sh"
          ln -sf /usr/bin/gunicorn.conf.py "${{targets.subpkgdir}}/data/gunicorn.conf.py"
    test:
      pipeline:
        - runs: test "$(readlink /entrypoint.sh)" = "docker/entrypoint.sh"
        - runs: test "$(readlink /data/gunicorn.conf.py)" = "docker/gunicorn.conf.py"

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}
    - name: functional test
      runs: |
        apk add py3.11-pip
        pip3.11 download coloredlogs -d my-packages
        pypi-server run --disable-fallback -p 8080 my-packages &
        pip install   --no-index   --find-links http://localhost:8080/packages/   coloredlogs

update:
  enabled: true
  manual: false
  github:
    identifier: pypiserver/pypiserver
    use-tag: true
    strip-prefix: v
