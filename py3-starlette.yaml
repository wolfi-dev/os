package:
  name: py3-starlette
  version: "0.47.0"
  epoch: 0
  description: The little ASGI library that shines
  copyright:
    - license: BSD-3-Clause
  dependencies:
    provider-priority: 0

vars:
  pypi-package: starlette
  module-name: starlette

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - py3-supported-build
      - py3-supported-hatchling
      - py3-supported-pip
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/encode/starlette
      tag: ${{package.version}}
      expected-commit: 739321d719db5b6e3fff9ccca9a2ccc7c2e07f18

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: ${{vars.pypi-package}} installed for python${{range.key}}
    dependencies:
      provides:
        - py3-${{vars.pypi-package}}
      provider-priority: ${{range.value}}
      runtime:
        - py${{range.key}}-anyio
        - py${{range.key}}-idna
        - py${{range.key}}-sniffio
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.module-name}}
        - name: Test Starlette basic functionality
          runs: |
            python${{range.key}} <<EOF
            import starlette
            from starlette.applications import Starlette
            from starlette.responses import JSONResponse
            from starlette.routing import Route

            # Verify core components are available
            assert hasattr(starlette, '__version__')
            print(f"Starlette version: {starlette.__version__}")

            # Test basic app creation
            async def homepage(request):
                return JSONResponse({'hello': 'world'})

            app = Starlette(routes=[
                Route('/', homepage),
            ])

            # Verify app was created successfully
            assert app is not None
            assert len(app.routes) == 1

            print("All tests passed!")
            EOF

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

update:
  enabled: true
  git: {}
