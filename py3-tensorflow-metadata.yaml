package:
  name: py3-tensorflow-metadata
  version: "1.17.0"
  epoch: 0
  description: Utilities for passing TensorFlow-related metadata between tools
  copyright:
    - license: Apache-2.0
  dependencies:
    provider-priority: 0

vars:
  pypi-package: tensorflow-metadata
  import: tensorflow_metadata

data:
  - name: py-versions
    items:
      3.10: "310"
      3.11: "311"
      3.12: "312"
      3.13: "313"

environment:
  contents:
    packages:
      - bash
      - bazel-6
      - build-base
      - busybox
      - ca-certificates-bundle
      - openjdk-17
      - py3-supported-build-base
      - wolfi-base
  environment:
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk

pipeline:
  - uses: git-checkout
    with:
      expected-commit: e0f569f3b1039b6a51e9156bf323f677a026e537
      repository: https://github.com/tensorflow/metadata
      tag: v${{package.version}}

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provides:
        - py3-${{vars.pypi-package}}
      provider-priority: ${{range.value}}
      runtime:
        - py${{range.key}}-absl-py
        - py${{range.key}}-googleapis-common-protos
        - py${{range.key}}-protobuf
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
    test:
      pipeline:
        - name: Import Test
          uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.import}}
        - name: Basic Functionality Test
          runs: |
            echo "Testing ${{vars.pypi-package}} basic functionality..."
            python${{range.key}} <<EOF-
            from ${{vars.import}}.proto.v0 import schema_pb2
            schema = schema_pb2.Schema()
            schema.feature.add(name='example_feature')
            assert schema.feature[0].name == 'example_feature', 'Basic feature addition failed'
            print('${{vars.pypi-package}} basic functionality success')
            EOF-
        - uses: strip

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: python/import
          with:
            python: python3.10
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.11
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.12
            import: ${{vars.import}}
        - uses: python/import
          with:
            python: python3.13
            import: ${{vars.import}}

update:
  enabled: true
  manual: false
  github:
    identifier: tensorflow/metadata
    strip-prefix: v

test:
  pipeline:
    - name: Import Test
      uses: python/import
      with:
        import: ${{vars.import}}
    - name: Basic Functionality Test
      uses: py/one-python
      with:
        content: |
          #!/usr/bin/env python3
          from tensorflow_metadata.proto.v0 import schema_pb2
          schema = schema_pb2.Schema()
          schema.feature.add(name='example_feature')
          assert schema.feature[0].name == 'example_feature', 'Basic feature addition failed'
          print('tensorflow-metadata basic functionality success')
