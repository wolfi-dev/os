package:
  name: py3-toolz
  version: 1.0.0
  epoch: 0
  description: A set of utility functions for iterators, functions, and dictionaries.
  annotations:
    cgr.dev/ecosystem: python
  copyright:
    - license: BSD-3-Clause
  dependencies:
    provider-priority: 0

vars:
  pypi-package: toolz

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - py3-supported-build-base
      - py3-supported-versioneer

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 07f30a9c75e07a4b7095d0ec93ba4e963504f259
      repository: https://github.com/pytoolz/toolz
      tag: ${{package.version}}

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      environment:
        contents:
          packages:
            - jq
            - python-${{range.key}}
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.pypi-package}}
        - name: Test functionality - slightly modified example from docs
          runs: |
            cat > test.py <<EOF
            import json

            from ${{vars.pypi-package}} import compose, frequencies
            from ${{vars.pypi-package}}.curried import map

            def stem(word: str):
                """ Stem word to primitive form """
                return word.lower().rstrip(",.!:;'-\"").lstrip("'\"")

            wordcount = compose(frequencies, map(stem), str.split)
            sentence = "This cat jumped over this other cat!"

            print(json.dumps(wordcount(sentence)))
            EOF

            [ $(python${{range.key}} test.py | jq '.cat') = 2 ]

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}
    test:
      pipeline:
        - uses: python/import
          with:
            python: python3.13
            import: ${{vars.pypi-package}}

update:
  enabled: true
  github:
    identifier: pytoolz/toolz
    use-tag: true
