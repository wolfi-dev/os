package:
  name: py3-wcmatch
  version: "10.1"
  epoch: 1
  description: Wilcard File Name matching library.
  copyright:
    - license: MIT
  dependencies:
    provider-priority: 0

vars:
  pypi-package: wcmatch
  import: wcmatch

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '313'

environment:
  contents:
    packages:
      - py3-supported-build-base
      - py3-supported-gpep517
      - py3-supported-hatchling

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/facelessuser/wcmatch
      tag: ${{package.version}}
      expected-commit: a6578f3e33924eab9fa79c658d9d037bc93e5aed

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
      runtime:
        - py${{range.key}}-bracex
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}
    - uses: py/one-python
      with:
        content: |
          # Create test files
          touch test_file.txt
          touch another_test_file.txt

          # Test basic file matching with wcmatch
          python3 -c '
          import wcmatch
          from wcmatch import glob
          # Test glob functionality
          matched_files = glob.glob("test_file.txt")
          print("Matched files:", matched_files)
          assert "test_file.txt" in matched_files
          print("wcmatch glob test passed")
          '

          python3 -c '
          # Test multiple file matching with wcmatch
          import wcmatch
          from wcmatch import glob
          # Test glob functionality with multiple files
          matched_files = glob.glob("*.txt")
          print("Matched .txt files:", matched_files)
          assert "test_file.txt" in matched_files
          assert "another_test_file.txt" in matched_files
          print("wcmatch multiple file glob test passed")
          '

update:
  enabled: true
  github:
    identifier: facelessuser/wcmatch
