#!/bin/sh
Usage() {
    cat <<EOF
Usage: ${0##*/} expected-shbang file1 [file2...]
EOF
}

error() {
    echo "ERROR:" "$@" 1>&2
    exit 1
}

fail() {
    echo "FAIL:" "$@" 1>&2
    FAILS=$((FAILS+1))
}

pass() {
    echo "PASS:" "$@" 1>&2
    PASSES=$((PASSES+1))
}

PASSES=0
FAILS=0
shbang="#!"

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    Usage
    exit 0
fi

[ $# -gt 1 ] || { Usage ; echo "got $# args, expect > 1"; exit 1; }

expected="$1"
shift

for p in "$@"; do
    # if provided input has no '/', then see if it is in PATH
    case "$p" in
        */*) :;;
        *)
            if [ ! -f "$p" ] && fp=$(command -v "$p" 2>/dev/null); then
                p="$fp"
            fi
    esac
    if [ ! -f "$p" ]; then
        error "$p - not a file, and not in PATH"
    fi
    # shellcheck disable=SC2162
    read curshbang < "$p" ||
        error "reading shbang from '$p' failed"
    case "$curshbang" in
        $shbang\ *|$shbang/*) :;;
        *) error "$p - bad shbang '$curshbang'";;
    esac
    if printf "%s" "$curshbang" | grep -q -F "$expected"; then
        pass "$p - $curshbang"
    else
        fail "$p - shbang did not match '$expected'. found '$curshbang'"
    fi
done

echo "checked $# shbangs. $PASSES passes / $FAILS fails" 1>&2
if [ $FAILS -ne 0 ]; then
    exit 1
fi
exit 0
