#!/bin/sh
fail() { echo "FAIL:" "$@"; exit 1; }

wrapper="$1"
varname="$2"
wrapped="$3"
[ -x "$wrapper" ] || fail "$wrapper is not executable file"
echo "PASS: $wrapper is executable"

if env "$varname=true" "$wrapper"; then
  echo "PASS: $varname=true exited 0"
else
  fail "$wrapper exited $? with $varname=true"
fi

if env "${varname}=false" "$wrapper"; then
  fail "$wrapper exited 0 with ${varname}=false"
else
  echo "PASS: ${varname}=false exited $?"
fi

# test that bad values are caught by the wrapper
# 'wrapped' here is 'python' or 'python3'. We want
# to check that potential recursion is blocked.
for val in bogus-prog-name $wrapped /usr/bin/$wrapped; do
  out=$(env "$varname=$val" "$wrapper" 2>&1)
  rc=$?
  case "$rc" in
    9) echo "PASS: $wrapper exited $rc with ${varname}=$val";;
    *) echo "output: $out";
       fail "$wrapper exited $rc with ${varname}=$val";;
  esac
done

exit 0
