package:
  name: rancher-2.10
  version: "2.10.4"
  epoch: 0
  description: Complete container management platform
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - rancher=${{package.full-version}}
    runtime:
      - acl-dev
      - bash
      - blkid
      - busybox
      - ca-certificates
      - cdrkit
      - conntrack-tools
      - containerd-shim-runc-v2
      - curl
      - docker-machine-driver-harvester
      - docker-machine-driver-linode
      - etcd
      - ethtool
      - gawk
      - git
      - gzip
      - helm
      - iproute2
      - ipset
      - iptables-xtables-privileged
      - jq
      - k3s-multicall
      - kustomize
      - losetup
      - mount
      - net-tools
      - netcat-openbsd
      - openssh-client
      - openssl
      - pigz
      - posix-libc-utils
      - rancher-charts-${{vars.major-minor-version}}
      - rancher-helm-3
      - rancher-helm3-charts
      - rancher-kontainer-driver-metadata-${{vars.major-minor-version}}
      - rancher-machine
      - rancher-partner-charts
      - rancher-rke2-charts
      - rancher-system-charts-${{vars.major-minor-version}}
      - rancher-telemetry
      - runc
      - sed
      - shadow
      - sysstat
      - tar
      - tini
      - umount
      - unzip
      - util-linux-dev
      - util-linux-misc
      - vim
      - xz

environment:
  contents:
    packages:
      - btrfs-progs-dev
      - cdrkit
      - gpgme-dev

vars:
  py-version: 3.13

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/rancher/rancher
      tag: v${{package.version}}
      expected-commit: 3fdfa8c24361429803baa3fc4be739cfd4e0263a

  - name: Create directories
    runs: |
      mkdir -p ${{targets.contextdir}}/usr/bin
      mkdir -p ${{targets.contextdir}}/var/lib/rancher/k3s/agent/images
      mkdir -p ${{targets.contextdir}}/var/lib/kubelet
      mkdir -p ${{targets.contextdir}}/var/lib/cni
      mkdir -p ${{targets.contextdir}}/var/log
      mkdir -p ${{targets.contextdir}}/var/lib/rancher-data/driver-metadata
      mkdir -p ${{targets.contextdir}}/var/log/auditlog
      mkdir -p ${{targets.contextdir}}/usr/share/rancher/ui
      mkdir -p ${{targets.contextdir}}/etc/rancher/ssl
      mkdir -p ${{targets.contextdir}}/app/rancher
      mkdir -p ${{targets.contextdir}}/var/lib/rancher-data/driver-metadata
      mkdir -p ${{targets.contextdir}}/var/lib/cattle
      mkdir -p ${{targets.contextdir}}/opt/jail

  - uses: go/bump
    with:
      deps: |-
        k8s.io/kubernetes@v1.31.6
        github.com/go-jose/go-jose/v3@v3.0.4
        golang.org/x/crypto@v0.35.0
        golang.org/x/oauth2@v0.27.0
        golang.org/x/net@v0.36.0
        github.com/golang-jwt/jwt/v4@v4.5.2
        github.com/golang-jwt/jwt/v5@v5.2.2

  - uses: go/build
    with:
      packages: .
      output: rancher
      ldflags: |
        -X main.VERSION=${{package.version}}
        -X github.com/rancher/rancher/pkg/version.Version=${{package.version}}
        -X github.com/rancher/rancher/pkg/version.GitCommit=$(git rev-parse --short HEAD)
        -X github.com/rancher/rancher/pkg/settings.InjectDefaults="{\"rke-version\":\"${RKE_VERSION}\"}"
      tags: k8s

  - uses: go/build
    with:
      packages: .
      output: export-images
      tags: k3s_export

  - name: Export k3s images
    runs: |
      CATTLE_K3S_VERSION="$(
        curl -fsSL "https://github.com/rancher/rancher/raw/refs/tags/v${{package.version}}/package/Dockerfile" \
          | grep -m1 '^ENV CATTLE_K3S_VERSION' \
          | sed 's/ENV CATTLE_K3S_VERSION //'
      )"
      export-images -k3s-version $CATTLE_K3S_VERSION -output ${{targets.contextdir}}/var/lib/rancher/k3s/agent/images/

  - runs: |
      install -Dm755 package/loglevel ${{targets.contextdir}}/usr/bin/
      install -Dm755 package/entrypoint.sh ${{targets.contextdir}}/usr/bin/
      install -Dm755 package/kustomize.sh ${{targets.contextdir}}/usr/bin/
      install -Dm755 package/jailer.sh ${{targets.contextdir}}/usr/bin/
      mv /usr/bin/mkisofs "${{targets.contextdir}}"/usr/bin

  - name: Create symlinks
    runs: |
      ln -sf /usr/bin/cattle-${{vars.py-version}} ${{targets.contextdir}}/usr/bin/cattle
      ln -sf /usr/bin/gdapi-${{vars.py-version}} ${{targets.contextdir}}/usr/bin/gdapi
      ln -sf /usr/bin/tox-${{vars.py-version}} ${{targets.contextdir}}/usr/bin/tox
      mkdir -p ${{targets.contextdir}}/opt/drivers/management-state/bin
      ln -sf /usr/bin/docker-machine-driver-harvester ${{targets.contextdir}}/opt/drivers/management-state/bin/docker-machine-driver-harvester
      ln -sf /usr/bin/docker-machine-driver-linode ${{targets.contextdir}}/opt/drivers/management-state/bin/docker-machine-driver-linode
      # https://github.com/rancher/rancher/blob/3fdfa8c24361429803baa3fc4be739cfd4e0263a/package/Dockerfile#L38-L42
      mkdir -p ${{targets.contextdir}}/root/.kube
      ln -sf /etc/rancher/k3s/k3s.yaml ${{targets.contextdir}}/root/.kube/k3s.yaml
      ln -sf /etc/rancher/k3s/k3s.yaml ${{targets.contextdir}}/root/.kube/config
      ln -sf /usr/bin/rancher ${{targets.contextdir}}/usr/bin/reset-password
      ln -sf /usr/bin/rancher ${{targets.contextdir}}/usr/bin/ensure-default-admin
      ln -sf /usr/bin/helm ${{targets.contextdir}}/usr/bin/helm_v3

test:
  pipeline:
    - runs: |
        rancher --help
        rancher --version | grep ${{package.version}}
    - name: Test that some of the dependency binaries were copied
      runs: |
        # https://github.com/rancher/rancher/blob/3fdfa8c24361429803baa3fc4be739cfd4e0263a/package/Dockerfile#L23-L28
        /usr/bin/unshare --version
        /usr/bin/mount --version
        /usr/bin/umount --version
        /usr/bin/nsenter --version
    - name: Ensure all needed binaries are exist and working properly
      runs: |
        git --version
        curl --version
        unshare --version
        mount --version
        umount --version
        nsenter --version
        unzip -v
        xz --version
        gzip --version
        sed --version
        tar --version
        useradd --help
        groupadd --help
        usermod --help
        gawk --version
        vim --version
        nc --help
        mkisofs -version
        ssh -V || true   # 'ssh -V' prints version on stderr; '|| true' avoids exit on non-zero.
        openssl version

        rancher-machine -v
        docker-machine-driver-linode --help
        docker-machine-driver-harvester --help

        rancher-helm version
        rancher-tiller version
        helm_v3 version
        kustomize version
        etcdctl version

        k3s --version
        kubectl version --client
        containerd --version
        containerd-shim-runc-v2 --help
        runc --version
        cni --help
        ip -V
        ipset -v
        pigz --version
        iptables --version
        ip6tables --version
        which --help

        tini --version
        telemetry --version
        rancher --version || rancher --help

update:
  enabled: true
  github:
    identifier: rancher/rancher
    strip-prefix: v
    use-tag: true
    tag-filter: v2.10.
