package:
  name: rancher-2.11
  version: "2.11.1"
  epoch: 1
  description: Complete container management platform
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - rancher=${{package.full-version}}
    runtime:
      - bash
      - blkid
      - busybox
      - ca-certificates
      - ca-certificates-bundle
      - cdrkit
      - conntrack-tools
      - containerd-shim-runc-v2
      - curl
      - docker-machine-driver-harvester
      - docker-machine-driver-linode
      - etcd
      - ethtool
      - gawk
      - git # catalogv2
      - gnutar
      - gzip
      - helm
      - iproute2
      - ipset
      - iptables-xtables-privileged
      - jq
      - k3s-multicall
      - kustomize
      - losetup
      - mount
      - net-tools
      - netcat-openbsd
      - openssh
      - openssh-client
      - openssl
      - pigz
      - posix-libc-utils
      - py${{vars.py-version}}-tox
      - rancher-api-ui
      - rancher-charts-${{vars.major-minor-version}}
      - rancher-dashboard-${{vars.major-minor-version}}
      - rancher-helm-3
      - rancher-helm3-charts
      - rancher-kontainer-driver-metadata-${{vars.major-minor-version}}
      - rancher-machine
      - rancher-partner-charts
      - rancher-rke2-charts
      - rancher-telemetry
      - rancher-ui-${{vars.major-minor-version}}
      - runc
      - sed
      - shadow
      - sysstat
      - tini
      - umount
      - unzip
      - util-linux
      - util-linux-misc # unshare
      - xz
  checks:
    disabled:
      - opt # docker-machine-driver-harvester should not be a compat package

environment:
  contents:
    packages:
      - btrfs-progs-dev
      - cdrkit
      - curl
      - gpgme-dev

vars:
  py-version: 3.13

var-transforms:
  - from: ${{package.version}}
    match: ^(\d+\.\d+)\.\d+$
    replace: "$1"
    to: major-minor-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/rancher/rancher
      tag: v${{package.version}}
      expected-commit: 9ba54dabed07d028758e36f7cc2e4329e9cbf215

  - name: Create directories
    runs: |
      mkdir -p ${{targets.contextdir}}/usr/bin
      mkdir -p ${{targets.contextdir}}/var/lib/rancher/k3s/agent/images
      mkdir -p ${{targets.contextdir}}/var/lib/kubelet
      mkdir -p ${{targets.contextdir}}/var/lib/cni
      mkdir -p ${{targets.contextdir}}/var/log
      mkdir -p ${{targets.contextdir}}/var/lib/rancher-data/driver-metadata
      mkdir -p ${{targets.contextdir}}/var/log/auditlog
      mkdir -p ${{targets.contextdir}}/usr/share/rancher/ui
      mkdir -p ${{targets.contextdir}}/etc/rancher/ssl
      mkdir -p ${{targets.contextdir}}/app/rancher
      mkdir -p ${{targets.contextdir}}/var/lib/ca-certificates
      mkdir -p ${{targets.contextdir}}/var/lib/rancher-data/driver-metadata
      mkdir -p ${{targets.contextdir}}/var/lib/cattle
      mkdir -p ${{targets.contextdir}}/opt/jail
      mkdir -p /var/tmp

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/net@v0.38.0

  - uses: go/build
    with:
      packages: .
      output: rancher
      ldflags: |
        -X main.VERSION=${{package.version}}
        -X github.com/rancher/rancher/pkg/version.Version=${{package.version}}
        -X github.com/rancher/rancher/pkg/version.GitCommit=$(git rev-parse --short HEAD)
        -X github.com/rancher/rancher/pkg/settings.InjectDefaults="{\"rke-version\":\"$(grep -m1 'github.com/rancher/rke' go.mod | awk '{print $2}')\"}"
      tags: k8s

  - working-directory: hack/airgap
    uses: go/build
    with:
      packages: .
      output: export-images
      tags: k3s_export

  # Helm V2 is quite old and deprecated and has not been maintained for long time.
  # We can't able to build the `rancher-tiller` from source since it doesn't compatible
  # with the latest dependencies: https://github.com/chainguard-dev/enterprise-packages/pull/20234
  - name: Download pre-built rancher-tiller
    assertions:
      required-steps: 1
    pipeline:
      - if: ${{build.arch}} == 'aarch64'
        uses: fetch
        with:
          uri: "https://github.com/rancher/helm/releases/download/v2.16.8-rancher2/rancher-tiller-arm64"
          expected-sha256: "2f40f96f29f1bea2f4b0f2a9de40d0d8766eaf51da8ffbb94aa41f4cf07ff0e8"
          extract: false
      - if: ${{build.arch}} == 'x86_64'
        uses: fetch
        with:
          uri: "https://github.com/rancher/helm/releases/download/v2.16.8-rancher2/rancher-tiller"
          expected-sha256: "f7f28a147879fc0d682d9eb41095218d4f562636d16da96a05d9b76a7aff4ecc"
          extract: false

  - runs: install -Dm755 rancher-tiller* ${{targets.contextdir}}/usr/bin/rancher-tiller

  - name: Export k3s images
    runs: |
      CATTLE_K3S_VERSION="$(
        curl -fsSL --retry 5 --retry-connrefused "https://github.com/rancher/rancher/raw/refs/tags/v${{package.version}}/package/Dockerfile" \
          | grep -m1 '^ENV CATTLE_K3S_VERSION' \
          | sed 's/ENV CATTLE_K3S_VERSION //'
      )"
      # Tools doesn't have a retry mechanism, and it results CI flakes if the network is slow. (context cancelled)
      for i in $(seq 1 20); do
        if ${{targets.contextdir}}/usr/bin/export-images -k3s-version $CATTLE_K3S_VERSION -output ${{targets.contextdir}}/var/lib/rancher/k3s/agent/images/k3s-airgap-images.tar; then
          break
        fi
        sleep 10
      done
      rm -rf ${{targets.contextdir}}/usr/bin/export-images # We don't need this binary in the final image

  - runs: |
      install -Dm755 package/loglevel ${{targets.contextdir}}/usr/bin/
      install -Dm755 package/entrypoint.sh ${{targets.contextdir}}/usr/bin/
      install -Dm755 package/jailer.sh ${{targets.contextdir}}/usr/bin/
      mv /usr/bin/mkisofs "${{targets.contextdir}}"/usr/bin

  - name: Create symlinks
    runs: |
      ln -sf /usr/bin/cattle-${{vars.py-version}} ${{targets.contextdir}}/usr/bin/cattle
      ln -sf /usr/bin/gdapi-${{vars.py-version}} ${{targets.contextdir}}/usr/bin/gdapi
      ln -sf /usr/bin/tox-${{vars.py-version}} ${{targets.contextdir}}/usr/bin/tox
      mkdir -p ${{targets.contextdir}}/opt/drivers/management-state/bin
      ln -sf /usr/bin/docker-machine-driver-harvester ${{targets.contextdir}}/opt/drivers/management-state/bin/docker-machine-driver-harvester
      ln -sf /usr/bin/docker-machine-driver-linode ${{targets.contextdir}}/opt/drivers/management-state/bin/docker-machine-driver-linode
      # https://github.com/rancher/rancher/blob/3fdfa8c24361429803baa3fc4be739cfd4e0263a/package/Dockerfile#L38-L42
      mkdir -p ${{targets.contextdir}}/root/.kube
      ln -sf /etc/rancher/k3s/k3s.yaml ${{targets.contextdir}}/root/.kube/k3s.yaml
      ln -sf /etc/rancher/k3s/k3s.yaml ${{targets.contextdir}}/root/.kube/config
      ln -sf /usr/bin/rancher ${{targets.contextdir}}/usr/bin/reset-password
      ln -sf /usr/bin/rancher ${{targets.contextdir}}/usr/bin/ensure-default-admin
      ln -sf /usr/bin/helm ${{targets.contextdir}}/usr/bin/helm_v3
      ln -s /etc/ssl/cert.pem ${{targets.contextdir}}/var/lib/ca-certificates/ca-bundle.pem

test:
  environment:
    accounts:
      groups:
        - groupname: rancher
          gid: 1001
        - groupname: jail-accessors
          gid: 1001
      users:
        - username: rancher
          gid: 1001
          uid: 1001
        - username: jail-accessors
          gid: 1001
          uid: 1001
      run-as: 0
  pipeline:
    - runs: |
        rancher --help
        rancher --version | grep ${{package.version}}
    - name: Sanity check to ensure all needed binaries are exist (scraped from Dockerfile)
      runs: |
        # https://github.com/rancher/rancher/blob/3fdfa8c24361429803baa3fc4be739cfd4e0263a/package/Dockerfile#L23-L28
        command -v git
        command -v curl
        command -v unshare
        command -v mount
        command -v umount
        command -v nsenter
        command -v unzip
        command -v xz
        command -v gzip
        command -v sed
        command -v tar
        command -v useradd
        command -v groupadd
        command -v usermod
        command -v gawk
        command -v nc
        command -v mkisofs
        command -v ssh
        command -v openssl
        command -v rancher-machine
        command -v docker-machine-driver-linode
        command -v docker-machine-driver-harvester
        command -v rancher-helm
        command -v rancher-tiller
        command -v helm_v3
        command -v kustomize
        command -v etcdctl
        command -v k3s
        command -v kubectl
        command -v containerd
        command -v containerd-shim-runc-v2
        command -v runc
        command -v ip
        command -v ipset
        command -v pigz
        command -v iptables
        command -v ip6tables
        command -v which
        command -v tini
        command -v tox
        command -v loglevel
        command -v entrypoint.sh
        command -v jailer.sh
        command -v telemetry
        command -v rancher-tiller
        command -v rancher
    - name: Test k3s-airgap-images
      runs: |
        mkdir -p /tmp/k3s-airgap-images
        tar -xf /var/lib/rancher/k3s/agent/images/k3s-airgap-images.tar -C /tmp/k3s-airgap-images
        stat /tmp/k3s-airgap-images/repositories /tmp/k3s-airgap-images/manifest.json
    - name: "start daemon on localhost"
      uses: test/daemon-check-output
      with:
        start: "rancher --trace --debug" # We can't use `entrypoint.sh` here since it needs `/run/secrets/kubernetes.io/serviceaccount` and `/dev/kmsg` to be mounted
        timeout: 60
        # This is a negative-test to ensure that the Rancher prepares itself to run in a single server mode.
        # After that it exits immediately due to the `:6443` is not available in this environment.
        # We can't use the `test/kwok/cluster` here as it conflicts with the Rancher package and it manages
        # its own k3s cluster inside.
        expected_output: |
          Running in single server mode
          setupRancherService refreshing service
          setupRancherService refreshing endpoint

update:
  enabled: true
  github:
    identifier: rancher/rancher
    strip-prefix: v
    use-tag: true
    tag-filter: v2.11.
