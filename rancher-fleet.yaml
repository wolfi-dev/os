package:
  name: rancher-fleet
  version: "0.12.2"
  epoch: 1
  description: Deploy workloads from Git to large fleets of Kubernetes clusters
  copyright:
    - license: Apache-2.0

pipeline:
  - uses: git-checkout
    with:
      expected-commit: fcb09948fb937f043ab421b2b7ef03d7cbcce02b
      repository: https://github.com/rancher/fleet
      tag: v${{package.version}}

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
        helm.sh/helm/v3@v3.17.3
        golang.org/x/net@v0.38.0
        k8s.io/kubernetes@v1.32.4

subpackages:
  - name: ${{package.name}}-agent
    pipeline:
      - uses: go/build
        with:
          ldflags: |
            -X github.com/rancher/fleet/pkg/version.GitCommit=$(git rev-parse HEAD)
            -X github.com/rancher/fleet/pkg/version.Version=${{package.version}}
          output: fleetagent
          packages: ./cmd/fleetagent/main.go
    test:
      pipeline:
        - runs: |
            fleetagent --version | grep ${{package.version}}

  - name: ${{package.name}}-controller
    pipeline:
      - uses: go/build
        with:
          ldflags: |
            -X github.com/rancher/fleet/pkg/version.GitCommit=$(git rev-parse HEAD)
            -X github.com/rancher/fleet/pkg/version.Version=${{package.version}}
          output: fleetcontroller
          packages: ./cmd/fleetcontroller
    test:
      environment:
        contents:
          packages:
            - curl
      pipeline:
        - runs: |
            fleetcontroller --version
            fleetcontroller --help
        - name: "Setup KWOK cluster"
          uses: test/kwok/cluster
        - name: "Install CRDs"
          runs: |
            kubectl apply -f https://raw.githubusercontent.com/rancher/fleet/refs/tags/v${{package.version}}/charts/fleet-crd/templates/crds.yaml
            kubectl wait --for=condition=Established crd --all --timeout=60s
            kubectl create ns cattle-fleet-system
        - name: "Start fleet controller daemon"
          uses: test/daemon-check-output
          with:
            start: |
              fleetcontroller \
                --namespace cattle-fleet-system  \
                --kubeconfig ~/.kube/config
            timeout: 30
            expected_output: |
              listening for changes on local cluster
              starting job scheduler
              starting manager
              successfully acquired lease
            post: |
              # Check metrics endpoint
              curl -fsSL http://localhost:8080/metrics | grep "leader_election_master_status"

  - name: ${{package.name}}-termination-log
    description: fleet-termination-log outputs fleet's termination log to /dev/termination-log
    dependencies:
      runtime:
        - busybox
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/var/lib/fleet
          cp package/log.sh ${{targets.subpkgdir}}/var/lib/fleet/log.sh
          chmod +x ${{targets.subpkgdir}}/var/lib/fleet/log.sh
    test:
      pipeline:
        - runs: |
            stat /var/lib/fleet/log.sh

update:
  enabled: true
  github:
    identifier: rancher/fleet
    strip-prefix: v
