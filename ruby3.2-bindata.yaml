package:
  name: ruby3.2-bindata
  version: 2.5.0
  epoch: 2
  description: BinData is a declarative way to read and write binary file formats.
  copyright:
    - license: BSD-2-Clause

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/dmendel/bindata
      tag: v${{package.version}}
      expected-commit: 8244a1c7e7b24617adcd7264e02370663bd03621

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: bindata

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - runs: |
        ruby <<-EOF
        require 'bindata'
        require 'test/unit'
        include Test::Unit::Assertions

        class TestBinData < Test::Unit::TestCase
          def test_uint16_read
            # Create a binary string
            data = "\x01\x02".b

            # Read the binary data as an unsigned 16-bit integer
            uint16 = BinData::Uint16be.read(data)

            # Verify the value
            assert_equal 258, uint16, "Expected the value to be 258 for binary \\x01\\x02"
            puts "BinData Uint16 read test passed!"
          end

          def test_uint16_write
            # Create a BinData Uint16 object
            uint16 = BinData::Uint16be.new(258)

            # Write it to a binary string
            binary = uint16.to_binary_s

            # Verify the binary output
            assert_equal "\x01\x02".b, binary, "Expected binary output to match \\x01\\x02"
            puts "BinData Uint16 write test passed!"
          end
        end
        EOF
    - uses: test/tw/gem-check

update:
  enabled: true
  github:
    identifier: dmendel/bindata
    strip-prefix: v
    use-tag: true

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
