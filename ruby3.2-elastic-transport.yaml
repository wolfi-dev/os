package:
  name: ruby3.2-elastic-transport
  version: "8.4.0"
  epoch: 0
  description: |
    Low level Ruby client for Elastic. See the `elasticsearch` or `elastic-enterprise-search` gems for full integration.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ruby${{vars.rubyMM}}-faraday
      - ruby${{vars.rubyMM}}-multi_json

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/elastic/elastic-transport-ruby.git
      tag: v${{package.version}}
      expected-commit: fbff6b6e3ae1879ba590e2588500897b8c836335

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: elastic-transport

test:
  environment:
    contents:
      packages:
        - ruby${{vars.rubyMM}}-net-http
  pipeline:
    - runs: ruby -e "require 'elastic/transport'; puts 'Elastic Transport library loaded successfully!'"
    - runs: |
        ruby <<-EOF
        require 'elastic/transport'

        # Initialize a client
        client = Elastic::Transport::Client.new(hosts: [{ host: 'localhost', port: 9200 }])

        # Verify client setup
        raise "Client initialization failed!" unless client
        puts "Elastic Transport client initialized successfully!"

        # Perform a mock request (no server interaction expected)
        begin
          client.perform_request('GET', '/')
        rescue => e
          puts "Expected error (no server running): \#{e.class}: \#{e.message}"
        else
          raise "Request should have failed as no server is running!"
        end

        puts "Elastic Transport functionality verified!"
        EOF

update:
  enabled: true
  github:
    identifier: elastic/elastic-transport-ruby
    strip-prefix: v
    use-tag: true

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
