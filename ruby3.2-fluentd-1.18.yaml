package:
  # fluentd supported versions: https://github.com/fluent/fluentd/blob/master/SECURITY.md
  name: ruby3.2-fluentd-1.18
  version: "1.18.0"
  epoch: 1
  description: Fluentd is an open source data collector designed to scale and simplify log management. It can collect, process and ship many kinds of data in near real-time.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ruby${{vars.rubyMM}}-base64
      - ruby${{vars.rubyMM}}-bundler
      - ruby${{vars.rubyMM}}-cool.io
      - ruby${{vars.rubyMM}}-csv
      - ruby${{vars.rubyMM}}-drb
      - ruby${{vars.rubyMM}}-http_parser.rb
      - ruby${{vars.rubyMM}}-logger
      - ruby${{vars.rubyMM}}-msgpack
      - ruby${{vars.rubyMM}}-serverengine
      - ruby${{vars.rubyMM}}-sigdump
      - ruby${{vars.rubyMM}}-strptime
      - ruby${{vars.rubyMM}}-tzinfo
      - ruby${{vars.rubyMM}}-tzinfo-data
      - ruby${{vars.rubyMM}}-webrick
      - ruby${{vars.rubyMM}}-yajl-ruby
      - ruby-${{vars.rubyMM}}
    provides:
      - ruby${{vars.rubyMM}}-fluentd=${{package.full-version}}

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

vars:
  gem: fluentd

pipeline:
  # This package makes use of `git ls-files` in its gemspec so the git repo
  # must be checked out in order for the gem to build with all files.
  - uses: git-checkout
    with:
      destination: ${{vars.gem}}
      expected-commit: 46372ddd521870f6a203baefb5a598209486d0bc
      repository: https://github.com/fluent/fluentd.git
      tag: v${{package.version}}

  - working-directory: ${{vars.gem}}
    pipeline:
      - uses: ruby/build
        with:
          gem: ${{vars.gem}}
      - uses: ruby/install
        with:
          gem: ${{vars.gem}}
          version: ${{package.version}}

  - uses: ruby/clean

  - runs: |
      GEM_DIR=${{targets.destdir}}$(ruby -e 'puts Gem.default_dir')/gems/${{vars.gem}}-${{package.version}}
      rm -rf ${GEM_DIR}/test \
             ${GEM_DIR}/docs \
             ${GEM_DIR}/*.md \
             ${GEM_DIR}/.github

subpackages:
  - name: ${{package.name}}-logging-operator-compat
    description: Entrypoint used by the logging operator image
    dependencies:
      runtime:
        - busybox
    pipeline:
      - runs: |
          git clone https://github.com/kube-logging/fluentd-images.git
          cd fluentd-images
          git checkout 773503fd12bcdb75f042ea3deb712ccb86a31d61
          install -Dm755 ./v1.16/entrypoint.sh "${{targets.subpkgdir}}/bin/entrypoint.sh"
          install -Dm755 ./v1.16/healthy.sh "${{targets.subpkgdir}}/bin/healthy.sh"
          install -Dm644 ./v1.16/fluent.conf "${{targets.subpkgdir}}/fluentd/etc/fluent.conf"

update:
  enabled: true
  github:
    identifier: fluent/fluentd
    strip-prefix: v
    tag-filter: v1.18.

test:
  pipeline:
    # Keep existing daemon test
    - name: Daemon test
      uses: test/daemon-check-output
      with:
        start: /usr/bin/fluentd
        setup: |
          mkdir -p /etc/fluent/
          touch /etc/fluent/fluent.conf
        expected_output: fluentd worker is now running
    # Keep command line tests
    - name: Command line tests
      runs: |
        fluent-binlog-reader --version
        fluent-ca-generate --version
        fluent-ca-generate --help
        fluent-cat --version
        fluent-cat --help
        fluent-ctl --version
        fluent-ctl --help
        fluent-debug --help
        fluent-gem --version
        fluent-gem --help
        fluent-plugin-config-format --version
        fluent-plugin-config-format --help
        fluent-plugin-generate --version
        fluent-plugin-generate --help
        fluentd --version
        fluentd --help
    - name: Basic IO test
      runs: |
        # Create minimal config
        cat > test.conf <<EOF
        <system>
          log_level debug
        </system>

        <source>
          @type forward
          port 24224
        </source>

        <match test.**>
          @type file
          path /tmp/fluentd_test
          append true
          <buffer>
            flush_mode immediate
          </buffer>
        </match>
        EOF

        # Start fluentd with logs
        fluentd -c test.conf -d /tmp/fluentd.pid --log /tmp/fluentd.log

        # Wait for start
        sleep 5

        # Send test message with specific content
        echo '{"message":"test_message_content"}' | fluent-cat test.tag

        # Wait for processing
        sleep 5

        # Check output files and content
        if ls /tmp/fluentd_test.*.log > /dev/null 2>&1; then
          OUTPUT=$(cat /tmp/fluentd_test.*.log)
          echo "Output file contents: $OUTPUT"

          if echo "$OUTPUT" | grep -q "test_message_content"; then
            echo "Test passed: Message content verified"
          else
            echo "Test failed: Expected message content not found"
            exit 1
          fi
        else
          echo "Test failed: No output file"
          echo "Fluentd logs:"
          cat /tmp/fluentd.log
          exit 1
        fi

        # Cleanup
        kill $(cat /tmp/fluentd.pid)

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
