# Generated from https://github.com/sparklemotion/http-cookie
package:
  name: ruby3.2-http-cookie
  version: 1.0.8
  epoch: 0
  description: HTTP::Cookie is a Ruby library to handle HTTP Cookies based on RFC 6265.  It has with security, standards compliance and compatibility in mind, to behave just the same as today's major web browsers.  It has builtin support for the legacy cookies.txt and the latest cookies.sqlite formats of Mozilla Firefox, and its modular API makes it easy to add support for a new backend store.
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - ruby-${{vars.rubyMM}}
      - ruby${{vars.rubyMM}}-domain_name

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/sparklemotion/http-cookie.git
      tag: v${{package.version}}
      expected-commit: 467b84fedfd0b4b933a8c5732c8492b1538a527b

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: http-cookie

test:
  pipeline:
    - runs: ruby -e "require 'http/cookie'"
    - name: Simple test
      runs: |
        cat <<EOF > /tmp/test.rb
        require 'http/cookie'

        # Smoke test for http-cookie
        def smoke_test_http_cookie
          begin
            # Create a cookie jar
            jar = HTTP::CookieJar.new

            # Set a cookie
            cookie = HTTP::Cookie.new(
              name: 'test_cookie',
              value: 'test_value',
              domain: 'example.com',
              path: '/'
            )
            jar.add(cookie)

            # Retrieve the cookie
            retrieved_cookie = jar.cookies('http://example.com').find { |c| c.name == 'test_cookie' }

            # Validate the cookie
            if retrieved_cookie && retrieved_cookie.value == 'test_value'
              puts "Smoke test passed: Cookie set and retrieved successfully."
            else
              puts "Smoke test failed: Cookie retrieval mismatch."
            end
          rescue => e
            puts "Smoke test failed: Exception occurred - #{e.message}"
          end
        end
        smoke_test_http_cookie
        EOF
        ruby /tmp/test.rb
    - uses: test/tw/gem-check

update:
  enabled: true
  github:
    identifier: sparklemotion/http-cookie
    strip-prefix: v

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
