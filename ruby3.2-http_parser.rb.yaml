package:
  name: ruby3.2-http_parser.rb
  version: 0.8.0
  epoch: 6
  description: Ruby bindings to https://github.com/joyent/http-parser and https://github.com/http-parser/http-parser.java
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - ruby-${{vars.rubyMM}}

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

vars:
  gem: http_parser.rb

pipeline:
  # This package makes use of `git ls-files` in it's gemspec so the git repo
  # must be checked out in order for the gem to build with all files.
  #
  # This package also makes use of git submodules which requires the git repo
  - uses: git-checkout
    with:
      destination: ${{vars.gem}}
      expected-commit: 90abe77b061c8b9b76204f53d4c223a2db0c858b
      repository: https://github.com/tmm1/http_parser.rb.git
      tag: v${{package.version}}

  - working-directory: ${{vars.gem}}
    pipeline:
      - runs: |-
          git submodule init ext/
          git submodule update ext/
      - uses: ruby/build
        with:
          gem: ${{vars.gem}}
      - uses: ruby/install
        with:
          gem: ${{vars.gem}}
          version: ${{package.version}}
      - uses: ruby/clean

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - name: Verify gem installation
      runs: gem list http_parser.rb
    - name: Basic import test
      runs: |
        ruby <<-EOF
        begin
          require 'http/parser'
          puts "Basic import test passed! HTTP::Parser loaded successfully."
        rescue LoadError => e
          puts "Basic import test failed: #{e.message}"
          exit 1
        end
        EOF
    - name: Expanded functionality test
      runs: |
        ruby <<-EOF
        require 'http/parser'

        # Create a basic HTTP parser and parse a simple request
        begin
          parser = HTTP::Parser.new
          parsed_headers = {}

          # Define callbacks for parsing events
          parser.on_headers_complete = proc do |headers|
            parsed_headers.merge!(headers)
            puts "Headers parsed successfully!"
          end
          parser.on_message_complete = proc { puts "Message parsed successfully!" }

          # Feed the parser with a simple HTTP request
          request = "GET /path/to/resource HTTP/1.1\r\n" \
                    "Host: example.com\r\n" \
                    "User-Agent: TestAgent\r\n\r\n"
          parser << request

          # Validate parsing results
          raise "Unexpected HTTP method" unless parser.http_method == "GET"
          raise "Unexpected request URL" unless parser.request_url == "/path/to/resource"
          raise "Unexpected HTTP version" unless parser.http_version == [1, 1]
          raise "Unexpected Host header" unless parsed_headers["Host"] == "example.com"
          raise "Unexpected User-Agent header" unless parsed_headers["User-Agent"] == "TestAgent"

          puts "Expanded functionality test passed with valid results!"
        rescue => e
          puts "Test failed: #{e.message}"
          exit 1
        end
        EOF
    - uses: test/tw/ldd-check

update:
  enabled: true
  github:
    identifier: tmm1/http_parser.rb
    strip-prefix: v
    use-tag: true

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
