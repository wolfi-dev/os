package:
  name: ruby3.2-webrick
  version: 1.9.1
  epoch: 1
  description: WEBrick is an HTTP server toolkit that can be configured as an HTTPS server, a proxy server, and a virtual-host server.
  copyright:
    - license: Ruby
    - license: BSD-2-Clause
  dependencies:
    runtime:
      - ruby-${{vars.rubyMM}}

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

vars:
  gem: webrick

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 307f24c0e9624e56fdbe8ebbe6df03ee25e9e57b
      repository: https://github.com/ruby/webrick
      tag: v${{package.version}}

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
        - ruby${{vars.rubyMM}}-uri
  pipeline:
    - name: Basic require test
      runs: ruby -e "require 'webrick'"
    - name: Basic WEBrick server configuration test
      runs: |
        ruby <<EOF-
        require 'webrick'
        require 'uri'

        # Test server configuration
        config = {
          Port: 0,  # Use a random available port
          Logger: WEBrick::Log.new(File::NULL),
          AccessLog: []
        }

        begin
          server = WEBrick::HTTPServer.new(config)
          raise 'Server creation failed' unless server
          puts 'WEBrick server configuration test passed'
        ensure
          server.shutdown if server
        end
        EOF-
    - name: Simple request handler test
      runs: |
        ruby <<EOF-
        require 'webrick'
        require 'net/http'
        require 'uri'

        # Create a server with a simple handler
        config = {
          Port: 0,
          Logger: WEBrick::Log.new(File::NULL),
          AccessLog: []
        }

        server = WEBrick::HTTPServer.new(config)
        server.mount_proc '/' do |req, res|
          res.body = 'Hello, WEBrick!'
          res.status = 200
        end

        # Run server in a thread
        thread = Thread.new { server.start }

        # Wait briefly for server to start
        sleep 1

        # Get the actual port
        port = server.config[:Port]

        begin
          uri = URI("http://localhost:#{port}")
          response = Net::HTTP.get_response(uri)

          raise 'Request failed' unless response.code == '200'
          raise 'Incorrect response' unless response.body == 'Hello, WEBrick!'
          puts 'WEBrick request handler test passed'
        ensure
          server.shutdown
          thread.exit
        end
        EOF-

update:
  enabled: true
  github:
    identifier: ruby/webrick
    strip-prefix: v

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
