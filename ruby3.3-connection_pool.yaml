package:
  name: ruby3.3-connection_pool
  version: "2.5.3"
  epoch: 0
  description: Generic connection pool for Ruby
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 1e5c0eef5113969669319bc9f8f5f1af892eb81b
      repository: https://github.com/mperham/connection_pool
      tag: v${{package.version}}

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: connection_pool

test:
  pipeline:
    # Validate that the gem is installed correctly
    - runs: |
        ruby -e "require 'connection_pool'; puts 'ConnectionPool loaded successfully!'"
    # Test basic functionality of ConnectionPool
    - runs: |
        ruby <<-EOF
        require 'connection_pool'

        # Create a pool of simple objects
        pool = ConnectionPool.new(size: 5, timeout: 5) { "ConnectionObject" }

        # Fetch a connection and validate
        connection = pool.with { |conn| conn }
        raise "Unexpected connection value: \#{connection}" unless connection == "ConnectionObject"

        # Ensure the pool returns objects within expected behavior
        results = []
        5.times do
          pool.with { |conn| results << conn }
        end

        if results.uniq.size != 1 || results.first != "ConnectionObject"
          raise "Pool did not manage connections correctly!"
        end

        puts "ConnectionPool functionality verified!"
        EOF

update:
  enabled: true
  github:
    identifier: mperham/connection_pool
    strip-prefix: v
    use-tag: true

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
