package:
  name: ruby3.3-webrick
  version: 1.9.1
  epoch: 1
  description: WEBrick is an HTTP server toolkit that can be configured as an HTTPS server, a proxy server, and a virtual-host server.
  copyright:
    - license: Ruby
    - license: BSD-2-Clause
  dependencies:
    runtime:
      - ruby-${{vars.rubyMM}}

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

vars:
  gem: webrick

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 307f24c0e9624e56fdbe8ebbe6df03ee25e9e57b
      repository: https://github.com/ruby/webrick
      tag: v${{package.version}}

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

update:
  enabled: true
  github:
    identifier: ruby/webrick
    strip-prefix: v

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - uses: test/tw/gem-check
    - name: Verify library loading
      runs: |
        ruby -e "require 'webrick'; puts 'Successfully loaded WEBrick module'"
    - name: Test basic WEBrick functionality
      runs: |
        ruby <<-EOF
        require 'webrick'

        begin
          # Test WEBrick version
          puts "WEBrick version: \#{WEBrick::VERSION}"

          # Test creating configuration
          config = WEBrick::Config::HTTP.dup
          raise "Failed to create HTTP config" unless config.is_a?(Hash)
          puts "Successfully created HTTP configuration"

          # Test HTMLUtils
          puts "Testing WEBrick::HTMLUtils"
          result = WEBrick::HTMLUtils.escape("<p>test</p>")
          raise "HTMLUtils.escape doesn't work" unless result.include?("&lt;p&gt;")
          puts "Successfully tested HTMLUtils.escape"

          puts "All WEBrick tests passed!"
        rescue => e
          puts "Test failed: \#{e.message}"
          exit 1
        end
        EOF
