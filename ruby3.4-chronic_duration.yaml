# Generated from https://github.com/hpoydar/chronic_duration
package:
  name: ruby3.4-chronic_duration
  version: 0.10.6
  epoch: 3
  description: A simple Ruby natural language parser for elapsed time. (For example, 4 hours and 30 minutes, 6 minutes 4 seconds, 3 days, etc.) Returns all results in seconds. Will return an integer unless you get tricky and need a float. (4 minutes and 13.47 seconds, for example.) The reverse can also be performed via the output method.
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - ruby${{vars.rubyMM}}-numerizer

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/hpoydar/chronic_duration
      tag: v${{package.version}}
      expected-commit: 55f992d6715a0920fefb5c4051e9eff40f948a21

  # Upstream pin to an eol version of `numerizer` as a runtime dependency. This
  # results in runtime failures when we attempt to use our (newer) version.
  # This patch removes upstream pinning to a particular version at runtime.
  #
  # There hasn't been any updates for quite some time upstream, so there doesn't
  # look to be any other reason for the pinning.
  - uses: patch
    with:
      patches: numerizer-dependency.patch

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: chronic_duration

test:
  pipeline:
    - runs: |
        ruby -e "require 'chronic_duration'; puts 'ChronicDuration loaded successfully!'"
    - runs: |
        ruby <<-EOF
        require 'chronic_duration'

        # Test case 1: Parsing a simple duration
        result = ChronicDuration.parse('4 hours and 30 minutes')
        if result != 16200
          raise 'Assertion failed: Expected 16200, got ' + result.to_s
        end
        puts 'Test case 1 passed: Simple duration parsing'

        # Test case 2: Parsing a duration with seconds
        result = ChronicDuration.parse('3 minutes and 20 seconds')
        if result != 200
          raise 'Assertion failed: Expected 200, got ' + result.to_s
        end
        puts 'Test case 2 passed: Duration with seconds parsing'

        # Test case 3: Invalid input
        result = ChronicDuration.parse('invalid input')
        if result != nil
          raise 'Assertion failed: Expected nil for invalid input, got ' + result.to_s
        end
        puts 'Test case 3 passed: Handling invalid input'

        puts 'All test cases passed!'
        EOF

update:
  enabled: true
  github:
    identifier: hpoydar/chronic_duration
    strip-prefix: v
    use-tag: true

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
