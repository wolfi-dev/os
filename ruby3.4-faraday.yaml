package:
  name: ruby3.4-faraday
  version: "2.13.0"
  epoch: 0
  description: HTTP/REST API client library.
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - ruby${{vars.rubyMM}}-faraday-net_http
      - ruby${{vars.rubyMM}}-ruby2_keywords

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 77204cc7e8aba63da0205c64b78c86d844c3df59
      repository: https://github.com/lostisland/faraday
      tag: v${{package.version}}

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: faraday

test:
  environment:
    contents:
      packages:
        - ruby${{vars.rubyMM}}-faraday-net_http
        - ruby${{vars.rubyMM}}-net-http
  pipeline:
    - name: Verify library import
      runs: ruby -e "require 'faraday'"
    - name: Basic usage
      runs: |
        cat <<EOF > /tmp/basic_usage_test.rb
        require 'faraday'
        response = Faraday.get("https://edu.chainguard.dev/open-source/wolfi/overview/")
        if response.status == 200
          puts "Basic usage test passed! Status: \#{response.status}"
        else
          raise "Basic usage test failed. Unexpected status: \#{response.status}"
        end
        EOF
        ruby /tmp/basic_usage_test.rb
    - name: Functional test with middleware
      runs: |
        cat <<EOF > /tmp/functional_test_middleware.rb
        require 'faraday'
        require 'json'

        # Configure Faraday connection with a middleware
        conn = Faraday.new(url: "https://httpbin.org") do |f|
          f.request :url_encoded
          f.adapter :net_http
        end

        # Perform a POST request with some data
        response = conn.post("/post") do |req|
          req.headers['Content-Type'] = 'application/json'
          req.body = { test_key: 'test_value' }.to_json
        end

        # Parse the JSON response
        parsed_body = JSON.parse(response.body)

        # Validate the response
        if response.status == 200 && parsed_body["json"]["test_key"] == "test_value"
          puts "Functional middleware test passed!"
        else
          raise "Functional middleware test failed."
        end
        EOF
        ruby /tmp/functional_test_middleware.rb

update:
  enabled: true
  github:
    identifier: lostisland/faraday
    strip-prefix: v

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
