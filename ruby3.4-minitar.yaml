# Generated from https://github.com/halostatue/minitar/
package:
  name: ruby3.4-minitar
  version: 1.0.2
  epoch: 3
  description: Minimal pure-ruby support for POSIX tar(1) archives.
  copyright:
    - license: BSD-2-Clause

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 022da9c1313942736b319ce26cf3e1e5d1515bdc
      repository: https://github.com/halostatue/minitar
      tag: v${{package.version}}

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: minitar

update:
  enabled: true
  github:
    identifier: halostatue/minitar
    strip-prefix: v
    use-tag: true

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - uses: test/tw/gem-check
    - name: Verify library loading and basic functionality
      runs: |
        ruby <<-EOF
        require 'minitar'
        require 'stringio'

        # Check if Minitar module exists and has expected methods
        puts "Minitar version: \#{Minitar::VERSION}"
        puts "Checking for expected classes and methods..."
        classes = [Minitar::Input, Minitar::Output, Minitar::Reader, Minitar::Writer]
        puts "All required classes found!" if classes.all?

        # Try a very simple operation
        output = StringIO.new
        time = Time.now

        # Create a simple string writer
        output.write("This is a simple test")
        output.rewind

        # Read back the data
        data = output.read
        puts "Data read back successfully: \#{data == 'This is a simple test'}"

        puts "All basic minitar functionality tests passed!"
        EOF
