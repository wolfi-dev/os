package:
  name: ruby3.4-msgpack
  version: "1.8.0"
  epoch: 0
  description: MessagePack is a binary-based efficient object serialization library. It enables to exchange structured objects between many languages like JSON. But unlike JSON, it is very fast and small.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ruby-${{vars.rubyMM}}

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

vars:
  gem: msgpack

pipeline:
  # This package makes use of `git ls-files` in it's gemspec so the git repo
  # must be checked out in order for the gem to build with all files.
  - uses: git-checkout
    with:
      destination: ${{vars.gem}}
      expected-commit: e4305b4b8a2506422bc78b6fab624907eb7e74a5
      repository: https://github.com/msgpack/msgpack-ruby.git
      tag: v${{package.version}}

  - working-directory: ${{vars.gem}}
    pipeline:
      - uses: ruby/build
        with:
          gem: ${{vars.gem}}
      - uses: ruby/install
        with:
          gem: ${{vars.gem}}
          version: ${{package.version}}
      - uses: ruby/clean

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - runs: |
        ruby <<-EOF
        require 'msgpack'
        require 'test/unit'
        include Test::Unit::Assertions
        # Test basic integer packing/unpacking
        packed = 42.to_msgpack
        assert_equal 42, MessagePack.unpack(packed)
        puts "Integer serialization test passed"
        # Test string packing/unpacking
        packed = "hello".to_msgpack
        assert_equal "hello", MessagePack.unpack(packed)
        puts "String serialization test passed"
        # Test array packing/unpacking
        data = [1, "abc", true]
        packed = data.to_msgpack
        assert_equal data, MessagePack.unpack(packed)
        puts "Array serialization test passed"
        # Test hash packing/unpacking
        data = {"name" => "test", "value" => 123}
        packed = data.to_msgpack
        assert_equal data, MessagePack.unpack(packed)
        puts "Hash serialization test passed"
        # Test nested structure
        nested = {
          "array" => [1, 2, 3],
          "hash" => {"a" => 1, "b" => 2},
          "mixed" => [{"x" => 1}, [1, 2], "test"]
        }
        packed = nested.to_msgpack
        assert_equal nested, MessagePack.unpack(packed)
        puts "Nested structure serialization test passed"
        # Test packer/unpacker streaming API
        packer = MessagePack::Packer.new
        packer.write(1)
        packer.write("string")
        packer.write([1,2,3])
        data = packer.to_s
        unpacker = MessagePack::Unpacker.new
        unpacker.feed(data)
        results = []
        unpacker.each {|obj| results << obj }
        assert_equal [1, "string", [1,2,3]], results
        puts "Streaming API test passed"
        puts "All tests passed!"
        EOF

update:
  enabled: true
  github:
    identifier: msgpack/msgpack-ruby
    strip-prefix: v
    use-tag: true
    tag-filter: v

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
