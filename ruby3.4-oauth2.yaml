package:
  name: ruby3.4-oauth2
  version: 2.0.9
  epoch: 2
  description: A Ruby wrapper for the OAuth 2.0 protocol built with a similar style to the original OAuth spec.
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - ruby${{vars.rubyMM}}-faraday
      - ruby${{vars.rubyMM}}-jwt
      - ruby${{vars.rubyMM}}-multi_xml
      - ruby${{vars.rubyMM}}-rack
      - ruby${{vars.rubyMM}}-snaky_hash
      - ruby${{vars.rubyMM}}-version_gem

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 8c88ad2f309374599ac56cd253fb93e3ad81cf07
      tag: v${{package.version}}
      repository: https://gitlab.com/oauth-xx/oauth2

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

vars:
  gem: oauth2

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - name: Verify library loading
      runs: |
        ruby -e "require 'oauth2'; puts 'Successfully loaded OAuth2 library'"
    - name: Verify class instantiation
      runs: |
        ruby <<-EOF
        require 'oauth2'

        begin
          # Test creating an OAuth2::Client
          client = OAuth2::Client.new(
            'client_id',
            'client_secret',
            site: 'https://example.org'
          )

          # Verify client was created successfully
          raise "Client instantiation failed" unless client.is_a?(OAuth2::Client)
          puts "Client instantiation successful"

          # Verify client ID and secret were set correctly
          raise "Client ID not set correctly" unless client.id == 'client_id'
          raise "Client secret not set correctly" unless client.secret == 'client_secret'
          puts "Client ID and secret verified"

          # Verify site was set correctly
          raise "Site not set correctly" unless client.site == 'https://example.org'
          puts "Site URL verified"

          # Test creating an access token instance
          token = OAuth2::AccessToken.new(client, 'sample_token')
          raise "Token instantiation failed" unless token.is_a?(OAuth2::AccessToken)
          puts "Token instantiation successful"

          puts "All OAuth2 tests passed successfully!"
        rescue => e
          puts "Test failed with error: #{e.message}"
          exit 1
        end
        EOF

update:
  enabled: false

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
