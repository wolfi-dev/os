package:
  name: ruby3.4-protocol-url
  version: 0.4.0
  epoch: 0
  description: Provides abstractions for working with URLs.
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - ruby-${{vars.rubyMM}}

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - ruby-${{vars.rubyMM}}
      - ruby-${{vars.rubyMM}}-dev

vars:
  gem: protocol-url

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 623d8d9341a64bd7b894a92b0b624a56cd27e93b
      repository: https://github.com/socketry/protocol-url
      tag: v${{package.version}}

  - uses: ruby/build
    with:
      gem: ${{vars.gem}}

  - uses: ruby/install
    with:
      gem: ${{vars.gem}}
      version: ${{package.version}}

  - uses: ruby/clean

update:
  enabled: true
  github:
    identifier: socketry/protocol-url
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - ruby-${{vars.rubyMM}}
  pipeline:
    - uses: test/tw/gem-check
    - name: Verify library loading
      runs: |
        ruby -e "require 'protocol/url'; puts 'Successfully loaded gem'"
    - name: Test URL parsing and manipulation
      runs: |
        ruby <<-EOF
        require 'protocol/url'

        # Test parsing an absolute URL using Protocol::URL[]
        url = Protocol::URL["https://example.com/path?query=value#fragment"]
        raise "Failed to parse URL" if url.nil?
        raise "Expected Absolute URL" unless url.is_a?(Protocol::URL::Absolute)

        # Test parsing a relative URL
        relative = Protocol::URL["/path/to/resource"]
        raise "Failed to parse relative URL" if relative.nil?
        raise "Expected Relative URL" unless relative.is_a?(Protocol::URL::Relative)

        # Test that nil is returned for nil input
        result = Protocol::URL[nil]
        raise "Expected nil for nil input" unless result.nil?

        puts "All tests passed!"
        EOF

var-transforms:
  - from: ${{package.name}}
    match: ^ruby(\d\.\d+)-.*
    replace: $1
    to: rubyMM
