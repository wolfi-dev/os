package:
  name: rust-stage0
  version: 1.68.2
  epoch: 1
  description: "bootstrap package for rust"
  copyright:
    - license: Apache-2.0 AND MIT
  dependencies:
    runtime:
    provides:
      # This must be updated whenever rust is updated to the latest version.
      # Rust requires at least the previously released version for bootstrapping,
      # e.g. rust 1.69 requires rust 1.68 or later to build.
      - rust=1.68.2

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle

pipeline:
  - assertions:
      required-steps: 1
    pipeline:
      - if: ${{build.arch}} == 'x86_64'
        uses: fetch
        with:
          uri: https://static.rust-lang.org/dist/rust-${{package.version}}-x86_64-unknown-linux-gnu.tar.gz
          expected-sha256: df7c7466ef35556e855c0d35af7ff08e133040400452eb3427c53202b6731926
      - if: ${{build.arch}} == 'aarch64'
        uses: fetch
        with:
          uri: https://static.rust-lang.org/dist/rust-${{package.version}}-aarch64-unknown-linux-gnu.tar.gz
          expected-sha256: b24d0df852490d80791a228f18c2b75f24b1e6437e6e745f85364edab245f7fa

  - runs: |
      sh install.sh --verbose --destdir="${{targets.destdir}}" --prefix="/usr"

  - runs: |
      mv "${{targets.destdir}}"/usr/etc "${{targets.destdir}}"/etc

  - uses: strip

subpackages:
  - name: "rust-stage0-doc"
    description: "rust stage0 documentation"
    pipeline:
      - uses: split/manpages
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/share
          mv "${{targets.destdir}}"/usr/share/doc "${{targets.subpkgdir}}"/usr/share/
    test:
      pipeline:
        - uses: test/docs

update:
  enabled: false
  exclude-reason: don't auto update stage 0 packages

test:
  pipeline:
    # AUTOGENERATED
    - runs: |
        cargo --version
        cargo-clippy --version
        cargo-fmt --version
        clippy-driver --version
        rust-analyzer --version
        rust-gdbgui --help
        rustc --version
        rustdoc --version
        rustfmt --version
        cargo --help
        cargo-clippy --help
        cargo-fmt --help
        clippy-driver --help
        rust-analyzer --help
        rustc --help
        rustdoc --help
        rustfmt --help
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}
