package:
  name: semgrep
  version: "1.118.0"
  epoch: 0
  description: "Lightweight static analysis for many languages. Find bug variants with patterns that look like source code."
  copyright:
    - license: LGPL-2.1-or-later
  dependencies:
    runtime:
      - py3-semgrep=${{package.full-version}}

vars:
  # Current ocaml version used by upstream can be found https://github.com/semgrep/semgrep/blob/v${{package.version}}/Dockerfile#L114
  ocaml_version: 5.3.0

environment:
  contents:
    packages:
      - autoconf
      - bubblewrap # build errors without it but bubblewrap throws a warning that it's not working anyway
      - build-base
      - busybox
      - ca-certificates-bundle
      - curl # needed for opam, it tries to use wget with missing flags instead.
      - curl-dev
      - git
      - gmp-dev # linked against
      - libcurl-openssl4
      - libev-dev
      - libffi-dev
      - ocaml=${{vars.ocaml_version}}
      - opam
      - openssl-dev
      - patch # needed for 'opam init'
      - pcre-dev # linked against
      - pcre2-dev
      - pkgconf-dev
      - posix-libc-utils # ldd
      - py3-gpep517 # used for py3-semgrep
      - py3-pip # used in make install
      - py3-setuptools # used for py3-semgrep
      - py3-wheel # used for py3-semgrep
      - python3 # used in make install
      - python3-dev
      - rsync
      - wolfi-base
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/returntocorp/semgrep
      tag: v${{package.version}}
      expected-commit: 294819a8581650b1955799b8196c292d03a691fe
      recurse-submodules: true

  - name: Setup and build
    runs: |
      # Setup OCaml and opam.
      rm -rf ~/.opam || true
      # Initialize OPAM with specific compiler version `vars.ocaml_version`
      opam init --bare --disable-sandboxing -y

      OPAMJOBS=1 opam switch create ${{vars.ocaml_version}} ocaml-base-compiler.${{vars.ocaml_version}} || {
        echo "Failed to create OCaml switch, retrying with debug info..."
        OPAMVERBOSE=1 OPAMJOBS=1 opam switch create ${{vars.ocaml_version}} ocaml-base-compiler.${{vars.ocaml_version}}
      }
      eval $(opam env --switch=${{vars.ocaml_version}})

      # Setup the opam environment. Install the dependencies etc.
      make setup

      # Build the core library.
      make core
      # Make binaries available to pysemgrep
      make copy-core-for-cli

  - name: install
    runs: |
      install -Dm755 _build/default/src/main/Main.exe \
        "${{targets.destdir}}"/usr/bin/osemgrep
      ln -sf osemgrep "${{targets.destdir}}"/usr/bin/semgrep-core
      install -Dm644 LICENSE \
        "${{targets.destdir}}"/usr/share/licenses/${{package.name}}/LICENSE

  - uses: strip

subpackages:
  - name: py3-semgrep
    description: "Python bindings for semgrep"
    pipeline:
      - runs: |
          cd cli
          git submodule update --init -- src/semgrep/semgrep_interfaces
          python3=$(readlink -f `which python3`)
          $python3 -m gpep517 build-wheel \
            --wheel-dir dist \
            --output-fd 3 3>&1 >&2
          $python3 -m pip install --verbose \
            --prefix=/usr "--root=${{targets.contextdir}}" dist/*.whl
          $python3 -m compileall --invalidation-mode=unchecked-hash -r100 "${{targets.contextdir}}"
      - runs: |
          # opentelemetry uses pkg_resources but does not declare a dep.
          python3=$(readlink -f `which python3`)
          $python3 -m pip install --verbose \
            --ignore-installed \
            --prefix=/usr "--root=${{targets.contextdir}}" setuptools
      - runs: |
          # clean out any bins other than semgrep and pysemgrep.
          d=$(mktemp -d)
          cd ${{targets.contextdir}}/usr/bin
          mv semgrep pysemgrep "$d"
          # there is a __pycache__ dir here, so -R
          rm -Rf *
          mv $d/* .
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            imports: |
              import semgrep
        - name: "run pysemgrep --help"
          runs: |
            pysemgrep --help

test:
  pipeline:
    - name: "run osemgrep --help"
      runs: |
        osemgrep --help

update:
  enabled: true
  manual: false
  github:
    identifier: returntocorp/semgrep
    strip-prefix: v
