package:
  name: semgrep
  version: "1.140.0"
  epoch: 1
  description: "Lightweight static analysis for many languages. Find bug variants with patterns that look like source code."
  copyright:
    - license: LGPL-2.1-or-later
  dependencies:
    provider-priority: 0
    runtime:
      - py3-${{vars.pypi-package}}-bin

vars:
  # Current ocaml version used by upstream can be found https://github.com/semgrep/semgrep/blob/v${{package.version}}/Dockerfile#L114
  ocaml_version: 5.3.0
  pypi-package: semgrep
  import: semgrep

data:
  - name: py-versions
    items:
      3.13: "313"

environment:
  contents:
    packages:
      - autoconf
      - bubblewrap # build errors without it but bubblewrap throws a warning that it's not working anyway
      - build-base
      - busybox
      - bzip2-dev
      - ca-certificates-bundle
      - curl # needed for opam, it tries to use wget with missing flags instead.
      - curl-dev
      - elfutils-dev
      - git
      - gmp-dev # linked against
      - libcurl-openssl4
      - libev-dev
      - libffi-dev
      - libunwind-dev
      - ocaml=${{vars.ocaml_version}}
      - opam
      - openssl-dev
      - patch # needed for 'opam init'
      - pcre-dev # linked against
      - pcre2-dev
      - pkgconf-dev
      - posix-libc-utils # ldd
      - py3-supported-build-base-dev
      - rsync
      - wolfi-base
      - zlib-dev
      - zstd-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/returntocorp/semgrep
      tag: v${{package.version}}
      expected-commit: 5a5d862f84b30d2237aa23a15d67f32d387c2ad8
      recurse-submodules: true

  - name: Change tree sitter version to 0.25
    runs: |
      # The tree-sitter version in the repo is 0.20.6, but we need to use 0.25.3
      sed -i 's/0\.22\.6/0.25.3/g' libs/ocaml-tree-sitter-core/tree-sitter-version.default

  - name: "initialize the environment"
    runs: |
      # Setup OCaml and opam.
      rm -rf ~/.opam || true
      # Initialize OPAM with specific compiler version `vars.ocaml_version`
      opam init --bare --disable-sandboxing -y

      OPAMJOBS=1 opam switch create ${{vars.ocaml_version}} ocaml-base-compiler.${{vars.ocaml_version}} || {
        echo "Failed to create OCaml switch, retrying with debug info..."
        OPAMVERBOSE=1 OPAMJOBS=1 opam switch create ${{vars.ocaml_version}} ocaml-base-compiler.${{vars.ocaml_version}}
      }

  - if: ${{build.arch}} == 'aarch64'
    name: "fix liburing vendored build on aarch64"
    runs: |
      eval $(opam env --switch=${{vars.ocaml_version}})

      opam install uring -y --deps-only
      opam source uring.2.7.0 --dir=$HOME/.opam/5.3.0/.opam-switch/build/uring.2.7.0

      # Patch the embedded Makefile - append to the existing CFLAGS line
      cd $HOME/.opam/5.3.0/.opam-switch/build/uring.2.7.0/vendor/liburing/src
      sed -i 's/LINK_FLAGS+=\$(LDFLAGS)/LINK_FLAGS+=$(LDFLAGS) -lgcc -lc/' Makefile
      cd $HOME/.opam/5.3.0/.opam-switch/build/uring.2.7.0
      opam install . -y

  - name: "setup and build"
    runs: |
      eval $(opam env --switch=${{vars.ocaml_version}})

      # Setup the opam environment. Install the dependencies etc.
      make setup

      # Build the core library.
      make core

      # Make binaries available to pysemgrep
      make copy-core-for-cli

  - name: install
    runs: |
      install -Dm755 _build/default/src/main/Main.exe \
        "${{targets.destdir}}"/usr/bin/osemgrep
      ln -sf osemgrep "${{targets.destdir}}"/usr/bin/semgrep-core
      install -Dm644 LICENSE \
        "${{targets.destdir}}"/usr/share/licenses/${{package.name}}/LICENSE

  - uses: strip

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
      runtime:
        - py${{range.key}}-attrs
        - py${{range.key}}-boltons
        - py${{range.key}}-click
        - py${{range.key}}-click-option-group
        - py${{range.key}}-colorama
        - py${{range.key}}-defusedxml
        - py${{range.key}}-exceptiongroup
        - py${{range.key}}-glom
        - py${{range.key}}-peewee
        - py${{range.key}}-requests
        - py${{range.key}}-rich
        - py${{range.key}}-ruamel-yaml
        - py${{range.key}}-ruamel-yaml-clib
        - py${{range.key}}-tomli
        - py${{range.key}}-typing-extensions
        - py${{range.key}}-urllib3
        - py${{range.key}}-wcmatch
    pipeline:
      - uses: py/pip-build-install
        working-directory: cli
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: test/tw/pip-check
        - uses: python/import
          with:
            python: python${{range.key}}
            import: ${{vars.import}}

  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}-bin
    description: Commands for ${{vars.pypi-package}} installed for python${{range.key}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}-bin
      runtime:
        - py${{range.key}}-${{vars.pypi-package}}
    pipeline:
      - uses: split/bin
        working-directory: cli
    test:
      pipeline:
        - runs: |
            ${{vars.pypi-package}} --version
            ${{vars.pypi-package}} --help 2>&1 | grep -q "^usage:"

test:
  pipeline:
    - uses: test/tw/ldd-check
    - name: "run osemgrep --help"
      runs: |
        osemgrep --help

update:
  enabled: true
  manual: false
  github:
    identifier: returntocorp/semgrep
    strip-prefix: v
