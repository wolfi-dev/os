#nolint:valid-pipeline-git-checkout-commit,valid-pipeline-git-checkout-tag
package:
  name: sftp
  version: 0.0.0_git20250225
  epoch: 0
  description: Secure File Transfer Protocol (SFTP) server based on OpenSSH
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - bash
      - openssh-client # Includes `sftp` command
      - openssh-keygen
      - openssh-server-pam
      - openssh-sftp-server
      - posix-libc-utils # For `getent` command
      - shadow

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - libedit-dev
      - linux-pam-dev
      - openssh-client
      - openssh-keygen
      - openssl-dev
      - posix-libc-utils
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/atmoz/sftp
      branch: master

  - runs: |
      mkdir -p ${{targets.contextdir}}/etc/ssh
      mkdir -p ${{targets.contextdir}}/usr/local/bin
      mkdir -p ${{targets.contextdir}}/usr/sbin

      cp -av files/sshd_config ${{targets.contextdir}}/etc/ssh/sshd_config
      cp -av files/create-sftp-user ${{targets.contextdir}}/usr/local/bin/
      cp -av files/entrypoint ${{targets.contextdir}}/

      # Ensure correct SSHD setup
      ln -sf /usr/sbin/sshd.pam ${{targets.contextdir}}/usr/sbin/sshd
      rm -f ${{targets.contextdir}}/etc/ssh/ssh_host_*key*

test:
  pipeline:
    - name: Verify OpenSSH installation
      runs: |
        ssh -V 2>&1 | grep -q "OpenSSH"
    - name: Verify SFTP entrypoint
      runs: |
        apk add wait-for-it
        groupadd users || true  # This creates the group if it doesn't exist
        /entrypoint foo:pass:::upload & wait-for-it localhost:22
        netstat -tan | grep ':22'

        apk add sshpass
        echo "test file" > /tmp/test.txt
        sshpass -p "pass" sftp -o StrictHostKeyChecking=no -P 22 foo@127.0.0.1 <<EOF
          put /tmp/test.txt upload/test.txt
          ls upload/test.txt && echo "File uploaded successfully" ||  { echo "File upload failed"; exit 1; }
          exit
        EOF

update:
  enabled: true
  git: {}
  schedule:
    period: weekly
    reason: This project doesn't do releases and everything is commit based
