package:
  name: spire-server
  version: "1.11.2"
  epoch: 0
  description: The SPIFFE Runtime Environment (SPIRE) server
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ca-certificates-bundle

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - git
      - go
      - libcap-utils

pipeline:
  - uses: git-checkout
    with:
      expected-commit: eaffdfae909c9508f77a54d42100c678140478fe
      repository: https://github.com/spiffe/spire
      tag: v${{package.version}}

  - runs: |
      # Spire's build assumes a specific Go version, defined in the repo's
      # .go-version file; if the expected version isn't installed, it's
      # downloaded. We'll just tell it to build with the version of Go we're
      # using to avoid this.
      goversion=$(go version | cut -d ' ' -f3)
      goversion=${goversion:2}
      # There's a bug in the spire build script that strips the .0
      # as presumably previous Go compilers omitted it
      # Just add an extra one to work around
      # Remove 'go' prefix and check if it ends with '.0'
      if [[ "${goversion:2}" == *.0 ]]; then
          # If it ends with '.0', just echo the version
          echo "$goversion"
      else
          # If it doesn't end with '.0', append '.0' and echo
          echo "${goversion}.0"
      fi
      echo ${goversion} > .go-version
      cat .go-version

      make bin/spire-agent
      make bin/spire-server
      make bin/oidc-discovery-provider
      install -Dm755 ./bin/spire-server "${{targets.destdir}}/usr/bin/spire-server"

  - uses: strip

subpackages:
  - name: spire-agent
    description: The SPIFFE Runtime Environment (SPIRE) agent
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          install -Dm755 ./bin/spire-agent "${{targets.subpkgdir}}/usr/bin/spire-agent"
    test:
      pipeline:
        - runs: |
            spire-agent --version
            spire-agent --help

  - name: spire-oidc-discovery-provider
    description: The SPIFFE Runtime Environment (SPIRE) agent
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          install -Dm755 ./bin/oidc-discovery-provider "${{targets.subpkgdir}}/usr/bin/oidc-discovery-provider"
          setcap cap_net_bind_service=+ep "${{targets.subpkgdir}}/usr/bin/oidc-discovery-provider"
    test:
      environment:
        contents:
          packages:
            - libcap-utils
      pipeline:
        - runs: |
            oidc-discovery-provider --version
            oidc-discovery-provider --help
        - name: Test file capabilities
          runs: |
            getcap /usr/bin/oidc-discovery-provider | cut -d ' ' -f2 | grep -q -E '^cap_net_bind_service=ep$'

update:
  enabled: true
  github:
    identifier: spiffe/spire
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - spire-agent
        - spire-oidc-discovery-provider
  pipeline:
    - name: "Check spire-server version"
      runs: |
        spire-server --version
    - name: "Test spire-server help"
      runs: |
        spire-server --help
    - name: "Test spire-server run"
      uses: test/daemon-check-output
      with:
        setup: |
          cat << EOF > /tmp/server.conf
          server {
            trust_domain = "example.org"
            data_dir = "/tmp/spire-server/data"
            log_level = "DEBUG"
            ca_subject = {
              country = ["US"],
              organization = ["SPIFFE"],
              common_name = "",
            }
          }

          plugins {
            DataStore "sql" {
              plugin_data {
                database_type = "sqlite3"
                connection_string = "/tmp/spire-server/datastore.sqlite3"
              }
            }
            KeyManager "memory" {
              plugin_data = {}
            }
          }
          EOF
          mkdir -p /tmp/spire-server/data
        start: |
          spire-server run -config /tmp/server.conf
        timeout: 30
        expected_output: |
          Connected to SQL database
          Plugin loaded
          Initializing health checkers
          Successfully stored CA journal entry in datastore
    - name: "Check oidc-discovery-provider version"
      runs: |
        oidc-discovery-provider -version
    - name: "Test oidc-discovery-provider help"
      runs: |
        oidc-discovery-provider -help
