package:
  name: sudo-rs
  version: 0.2.3
  epoch: 3
  description: A memory safe implementation of sudo and su.
  copyright:
    - license: MIT
  checks:
    disabled:
      - setuidgid

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - cargo-auditable
      - linux-pam-dev
      - openssl-dev
      - rust

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/memorysafety/sudo-rs
      tag: v${{package.version}}
      expected-commit: b3b90d228c3e35b9c1327e982cbb127295d6077d

  - runs: |
      cargo auditable build --release
      mkdir -p ${{targets.destdir}}/usr/bin
      mv target/release/sudo ${{targets.destdir}}/usr/bin/
      mv target/release/su ${{targets.destdir}}/usr/bin/

      # However, this binary must have the setuid flag set and must be owned by the root user in order to provide any useful functionality.
      chmod u+s  ${{targets.destdir}}/usr/bin/sudo
      chmod u+s  ${{targets.destdir}}/usr/bin/su

      # Establish a minimal working configuration
      mkdir -p ${{targets.destdir}}/etc/pam.d/
      cat <<EOF >${{targets.destdir}}/etc/pam.d/sudo
      auth    required        pam_env.so
      auth    sufficient      pam_unix.so
      account required        pam_unix.so
      session required        pam_limits.so
      session required        pam_unix.so
      EOF
      cp ${{targets.destdir}}/etc/pam.d/sudo ${{targets.destdir}}/etc/pam.d/sudo-i
      chmod 644 ${{targets.destdir}}/etc/pam.d/sudo*
      cat <<EOF >${{targets.destdir}}/etc/sudoers
      root ALL = (ALL:ALL) NOPASSWD:ALL
      @includedir /etc/sudoers.d
      EOF
      chmod 440 ${{targets.destdir}}/etc/sudoers

      mkdir -p ${{targets.destdir}}/etc/sudoers.d/

  - uses: strip

update:
  enabled: true
  github:
    identifier: memorysafety/sudo-rs
    strip-prefix: v

test:
  pipeline:
    # AUTOGENERATED
    - runs: |
        su --version
        sudo --version
        su --help
        sudo --help
