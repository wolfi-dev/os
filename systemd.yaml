package:
  name: systemd
  version: "257.3"
  epoch: 0
  description: The systemd System and Service Manager
  copyright:
    - license: LGPL-2.1-or-later AND GPL-2.0-or-later
  resources:
    cpu: 4
    memory: 12Gi
  dependencies:
    runtime:
      - kmod

vars:
  llvm-vers: 19

data:
  - name: standalone-binaries
    items:
      "systemd-repart": "systemd-repart.standalone"
      "systemd-sysusers": "systemd-sysusers.standalone"
      "systemd-tmpfiles": "systemd-tmpfiles.standalone"

environment:
  contents:
    packages:
      - acl-dev
      - audit-dev
      - bpftool
      - build-base
      - busybox-full
      - ca-certificates-bundle
      - clang-${{vars.llvm-vers}}
      - cmake
      - coreutils
      - cryptsetup-dev
      - curl-dev
      - dbus-dev
      - findutils
      - gperf
      - iptables-dev
      - kmod
      - kmod-dev
      - libarchive-dev
      - libbpf
      - libbpf-dev
      - libcap-dev
      - libgcrypt-dev
      - libgpg-error-dev
      - libidn2-dev
      - libmicrohttpd-dev
      - libmount
      - libseccomp-dev
      - libuuid
      - libxslt
      - linux-headers
      - linux-pam-dev
      - llvm-${{vars.llvm-vers}}
      - meson
      - ninja
      - openssf-compiler-options
      - pcre2-dev
      - posix-libc-utils
      - py3-jinja2
      - py3-pyelftools
      - python3
      - quota-tools
      - rsync
      - tpm2-tss
      - util-linux-dev
      - valgrind-dev
      - xz-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/systemd/systemd
      tag: v${{package.version}}
      expected-commit: 876ee10e0eb4bbb0920bdab7817a9f06cc34910f

  - uses: meson/configure
    with:
      opts: |
        -Dmode=release \
        -Dvmspawn=enabled \
        -Dinstall-tests=true \
        -Dstandalone-binaries=true

  - uses: meson/compile

  - uses: meson/install

  - runs: |
      mkdir -p ${{targets.destdir}}/lib
      mv ${{targets.destdir}}/usr/lib/libsystemd.so* ${{targets.destdir}}/lib/

subpackages:
  - range: standalone-binaries
    name: ${{range.key}}-standalone
    description: Standalone version of ${{range.key}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin
          mv ${{targets.destdir}}/usr/bin/${{range.value}} ${{targets.subpkgdir}}/usr/bin/${{range.key}}
    test:
      pipeline:
        - runs: |
            ${{range.key}} --help
            ${{range.key}} --version

  - name: systemd-shutdown-standalone
    description: Standalone version of ${{range.key}}
    # Can't test this with --version because the binary checks the pid before anything else
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd
          mv ${{targets.destdir}}/usr/lib/systemd/systemd-shutdown.standalone ${{targets.subpkgdir}}/usr/lib/systemd/systemd-shutdown

  - name: "systemd-dev"
    description: "headers for systemd"
    dependencies:
      runtime:
        - libudev
    pipeline:
      - uses: split/dev
    test:
      pipeline:
        - uses: test/pkgconf

  - name: "libudev"
    description: "udev library"
    dependencies:
      provider-priority: 10
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib
          mv ${{targets.destdir}}/usr/lib/libudev.so.* ${{targets.subpkgdir}}/usr/lib
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: libudev

  - name: "libsystemd"
    description: "systemd library"
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/lib
          mv ${{targets.destdir}}/lib/libsystemd.so.* ${{targets.subpkgdir}}/lib
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: libsystemd

  - name: "libsystemd-shared"
    description: "systemd library"
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib
          cp ${{targets.destdir}}/usr/lib/systemd/libsystemd-shared-*.so  ${{targets.subpkgdir}}/usr/lib/
    test:
      pipeline:
        - uses: test/ldd-check
          with:
            packages: libsystemd-shared

  - name: "systemd-boot-installed"
    description: "systemd bootloader (installed for EFI)"
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/boot/efi/EFI/BOOT/
      - if: ${{build.arch}} == 'aarch64'
        runs: |
          cp ${{targets.destdir}}/usr/lib/systemd/boot/efi/systemd-bootaa64.efi ${{targets.subpkgdir}}/boot/efi/EFI/BOOT/BOOTAA64.EFI
      - if: ${{build.arch}} == 'x86_64'
        runs: |
          cp ${{targets.destdir}}/usr/lib/systemd/boot/efi/systemd-bootx64.efi ${{targets.subpkgdir}}/boot/efi/EFI/BOOT/BOOTX64.EFI
    test:
      environment:
        contents:
          packages:
            - file
            - grep
      pipeline:
        - if: ${{build.arch}} == 'aarch64'
          runs: |
            file /boot/efi/EFI/BOOT/BOOTAA64.EFI | grep "executable for EFI"
        - if: ${{build.arch}} == 'x86_64'
          runs: |
            file /boot/efi/EFI/BOOT/BOOTX64.EFI | grep "executable for EFI"

  - name: "systemd-boot"
    description: "systemd bootloader"
    dependencies:
      runtime:
        - libsystemd-shared
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/etc/
          mkdir -p ${{targets.subpkgdir}}/usr/bin/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/kernel/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system-generators/
          mv ${{targets.destdir}}/etc/kernel ${{targets.subpkgdir}}/etc/
          mv ${{targets.destdir}}/usr/bin/kernel-install ${{targets.subpkgdir}}/usr/bin/
          mv ${{targets.destdir}}/usr/bin/bootctl ${{targets.subpkgdir}}/usr/bin/
          mv ${{targets.destdir}}/usr/lib/kernel ${{targets.subpkgdir}}/usr/lib/
          mv ${{targets.destdir}}/usr/lib/systemd/boot ${{targets.subpkgdir}}/usr/lib/systemd/
          mv ${{targets.destdir}}/usr/lib/systemd/systemd-bless-boot ${{targets.subpkgdir}}/usr/lib/systemd/
          mv ${{targets.destdir}}/usr/lib/systemd/system-generators/systemd-bless-boot-generator ${{targets.subpkgdir}}/usr/lib/systemd/system-generators/
    test:
      pipeline:
        - runs: |
            bootctl --version
            bootctl --help
            kernel-install --version
            kernel-install --help

  - name: "systemd-test"
    description: "Installable systemd-tests"
    dependencies:
      runtime:
        - systemd
        - systemd-container
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd
          mv ${{targets.destdir}}/usr/lib/systemd/tests ${{targets.subpkgdir}}/usr/lib/systemd
    test:
      environment:
        contents:
          packages:
            - bash
            - coreutils
            - findutils
            - python3
            - tzdata
            - busybox
            - tpm2-tss
            - libidn2 # There's a lot of dlopen tests
            - libbpf
            - libzstd1
            - libarchive
            - kmod-libs
      pipeline:
        - runs: |
            mkdir -p /var/tmp/
            # Skipping tests:
            # test-sd-device - but got the following error: No such device
            # test-path-util - failed at src/test/test-path-util.c:385, function test_find_executable_full(). Aborting.
            # test-label - Error occurred while opening directory =>: Read-only file system
            # test-dns-domain - Assertion 'r >= expected' failed at src/test/test-dns-domain.c:782, function test_dns_name_apply_idna_one(). Aborting.
            # test-compress-benchmark - failed at src/test/test-compress-benchmark.c:105, function test_compress_decompress(). Aborting.
            # test-capability - but got error: Protocol error
            # test-bcd - >= 0' failed at src/boot/test-bcd.c:19, function load_bcd().
            # test-tpm2 - none setup in the test env.
            # test-fd-util - Failed to fork off '(caf-noproc)': Operation not permitted
            # test-fstab-generator - lots of set -x seems to fail messing with mounts?
            /usr/lib/systemd/tests/run-unit-tests.py -u \
            -s test-sd-device \
            -s test-path-util \
            -s test-label \
            -s test-dns-domain \
            -s test-compress-benchmark \
            -s test-capability \
            -s test-bcd \
            -s test-tpm2 \
            -s test-fd-util \
            -s test-fstab-generator.sh

  - name: "systemd-container"
    description: "systemd container tools"
    dependencies:
      runtime:
        - systemd
        - gnutar
    pipeline:
      - runs: |
          # Move machine, vm/nspawn, import, export and portable components
          cd ${{targets.destdir}}/
          mkdir -p  ${{targets.subpkgdir}}

          find . -name '*machine*' \
          -not -name 'systemd-machine-id*' \
          -not -name 'sysinit.target.wants' \
          -not -name 'sysinit.target.wants/' \
          -not -name 'systemd-pcr*.service' \
          -exec cp -l -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*nspawn*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*vmspawn*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*import*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*export*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*portable*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;

          # Remove those files from the main package
          find . -name '*machine*' -not -name 'systemd-machine-id*' -exec rm -f '{}' \;
          find . -name '*nspawn*' -exec rm -f '{}' \;
          find . -name '*vmspawn*' -exec rm -f '{}' \;
          find . -name '*import*' -exec rm -f '{}' \;
          find . -name '*export*' -exec rm -f '{}' \;
          find . -name '*portable*' -type f -exec rm -f '{}' \;
          find . -name '*portable*' -type d -exec rmdir '{}' \;

          # Misc utilties
          mv usr/lib/systemd/systemd-pull ${{targets.subpkgdir}}/usr/lib/systemd/
          mv usr/bin/systemd-dissect ${{targets.subpkgdir}}/usr/bin/
    test:
      environment:
        contents:
          # without openssl-provider-legacy import errors referencing CRYPTOGRAPHY_OPENSSL_NO_LEGACY
          packages:
            - curl
            - gnutar
      pipeline:
        - runs: |
            machinectl --help
            machinectl --version
            portablectl --version
            portablectl --help
            systemd-dissect --help
            systemd-dissect --version
            systemd-nspawn --help
            systemd-nspawn --version
            systemd-vmspawn --help
            systemd-vmspawn --version
            /usr/lib/systemd/systemd-export --help
            /usr/lib/systemd/systemd-export --version
            /usr/lib/systemd/systemd-import --help
            /usr/lib/systemd/systemd-import --version
            /usr/lib/systemd/systemd-import-fs --help
            /usr/lib/systemd/systemd-import-fs --version
            /usr/lib/systemd/systemd-importd --help
            /usr/lib/systemd/systemd-importd --version
            /usr/lib/systemd/systemd-machined --help
            /usr/lib/systemd/systemd-machined --version
            /usr/lib/systemd/systemd-portabled --help
            /usr/lib/systemd/systemd-portabled --version
            /usr/lib/systemd/systemd-pull --help
            /usr/lib/systemd/systemd-pull --version
        - runs: |
            # Run a pull command
            SYSTEMD_LOG_LEVEL=debug /usr/lib/systemd/systemd-pull tar https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/x86_64/alpine-minirootfs-3.21.2-x86_64.tar.gz test --verify=checksum --verify=checksum --direct --force

            # ensure it exists
            #
            # # test if it works
            ls -la /var/lib/machines/test

  - name: "udev"
    description: "/dev hotplug management daemon"
    dependencies:
      runtime:
        - libsystemd-shared
    pipeline:
      - runs: |
          cd ${{targets.destdir}}/
          mkdir -p ${{targets.subpkgdir}}
          find . -name '*udev*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*systemd-hwdb*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;

          find . -name '*udev*' -exec rm -f '{}' \;
          find . -name '*systemd-hwdb*' -exec rm -f '{}' \;
    test:
      pipeline:
        - runs: |
            systemd-hwdb --version
            systemd-hwdb --help
            udevadm --help
            udevadm --version
        - name: Systemd-hwdb checks
          runs: |
            systemd-hwdb update -s

            EXPECTED=$(cat <<EOF
            ID_PCI_CLASS_FROM_DATABASE=Bridge
            ID_PCI_SUBCLASS_FROM_DATABASE=ISA bridge
            EOF
            )

            [ "$EXPECTED" = "$(systemd-hwdb query pci:v00001234d00007000sv00001AF4sd00001100bc06sc01i00)" ]

  - name: "systemd-init"
    description: "Configure systemd for use as an init system"
    dependencies:
      runtime:
        - ${{package.name}}
        - tzdata
        - agetty
        - mount
        - kbd
        - agetty
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/etc ${{targets.subpkgdir}}/sbin
          ln -s ../usr/lib/systemd/systemd ${{targets.subpkgdir}}/sbin/init
          ln -s ../run/systemd/resolve/stub-resolv.conf "${{targets.subpkgdir}}/etc/resolv.conf"
          echo "uninitialized" > "${{targets.subpkgdir}}/etc/machine-id"
    test:
      pipeline:
        - runs: |
            [ -f /sbin/init -a -x /sbin/init ]
            grep "uninitialized" /etc/machine-id

  - name: "systemd-default-network"
    description: "Configure network to DHCP on default interfaces"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/etc/systemd/network/
          cp 20-eth.network  ${{targets.subpkgdir}}/etc/systemd/network/
          cp 21-enp.network  ${{targets.subpkgdir}}/etc/systemd/network/

  - name: "systemd-logind-service"
    description: "Logind service"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system/
          mv ${{targets.destdir}}/usr/lib/systemd/system/systemd-logind.service ${{targets.subpkgdir}}/usr/lib/systemd/system/

  - name: "systemd-logind-stub"
    description: "Fake login service to boot directly into a shell"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system/
          cp ${{targets.destdir}}/usr/lib/systemd/system/serial-getty@.service ${{targets.subpkgdir}}/usr/lib/systemd/system/
          sed -i "s|^ExecStart=.*agetty.*|ExecStart=-/bin/sh -l|" ${{targets.subpkgdir}}/usr/lib/systemd/system/serial-getty@.service

  - name: "systemd-firstboot"
    description: "Initialize basic system settings on or before the first boot-up of a system"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system/
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system/sysinit.target.wants/
          mv ${{targets.destdir}}/usr/bin/systemd-firstboot ${{targets.subpkgdir}}/usr/bin/systemd-firstboot
          mv ${{targets.destdir}}/usr/lib/systemd/system/sysinit.target.wants/systemd-firstboot.service ${{targets.subpkgdir}}/usr/lib/systemd/system/sysinit.target.wants/systemd-firstboot.service
          mv ${{targets.destdir}}/usr/lib/systemd/system/systemd-firstboot.service ${{targets.subpkgdir}}/usr/lib/systemd/system/systemd-firstboot.service
          mv ${{targets.destdir}}/usr/lib/systemd/system/systemd-homed-firstboot.service ${{targets.subpkgdir}}/usr/lib/systemd/system/systemd-homed-firstboot.service
    test:
      pipeline:
        - name: "Check version"
          runs: |
            systemd-firstboot --version
            systemd-firstboot --help

  - name: "systemd-repart-rootfs"
    description: "Config file to auto grow root filesystem"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/repart.d/
          cp 50-root.conf ${{targets.subpkgdir}}/usr/lib/repart.d/

  - name: "systemd-homed"
    description: "systemd-homed is a system service designed to manage home directories"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          cd ${{targets.destdir}}/
          mkdir -p ${{targets.subpkgdir}}/etc/systemd
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system
          mkdir -p ${{targets.subpkgdir}}/usr/bin/
          find . -name '*home*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*home*' -exec rm -f '{}' \;
    test:
      pipeline:
        - runs: |
            homectl --help

  - name: "systemd-userdb"
    description: "dynamic user/group manager"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          cd ${{targets.destdir}}/
          mkdir -p ${{targets.subpkgdir}}/etc/systemd
          mkdir -p ${{targets.subpkgdir}}/usr/lib/systemd/system
          mkdir -p ${{targets.subpkgdir}}/usr/bin/
          find . -name '*userdb*' -exec cp -v --parents -r '{}' ${{targets.subpkgdir}} \;
          find . -name '*userdb*' -exec rm -f '{}' \;
    test:
      pipeline:
        - runs: |
            userdbctl --help

update:
  enabled: true
  github:
    identifier: systemd/systemd
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - build-base
        - systemd-dev
        - libsystemd
  pipeline:
    - name: "Check systemctl version"
      runs: |
        systemctl --version
        busctl --version
        busctl --help
        coredumpctl --version
        coredumpctl --help
        hostnamectl --version
        hostnamectl --help
        journalctl --version
        journalctl --help
        localectl --version
        localectl --help
        loginctl --version
        loginctl --help
        networkctl --version
        networkctl --help
        oomctl --version
        oomctl --help
        resolvectl --version
        resolvectl --help
        run0 --version
        run0 --help
        systemctl --help
        systemd-ac-power --version
        systemd-ac-power --help
        systemd-analyze --help
        systemd-ask-password --version
        systemd-ask-password --help
        systemd-cat --version
        systemd-cat --help
        systemd-cgls --version
        systemd-cgls --help
        systemd-cgtop --version
        systemd-cgtop --help
        systemd-confext --version
        systemd-confext --help
        systemd-creds --version
        systemd-creds --help
        systemd-delta --version
        systemd-delta --help
        systemd-detect-virt --help
        systemd-escape --version
        systemd-escape --help
        systemd-id128 --version
        systemd-id128 --help
        systemd-inhibit --version
        systemd-inhibit --help
        systemd-machine-id-setup --version
        systemd-machine-id-setup --help
        systemd-mount --version
        systemd-mount --help
        systemd-notify --version
        systemd-notify --help
        systemd-path --version
        systemd-path --help
        systemd-repart --version
        systemd-repart --help
        systemd-resolve --version
        systemd-resolve --help
        systemd-run --version
        systemd-run --help
        systemd-socket-activate --version
        systemd-socket-activate --help
        systemd-stdio-bridge --version
        systemd-stdio-bridge --help
        systemd-sysext --version
        systemd-sysext --help
        systemd-sysusers --version
        systemd-sysusers --help
        systemd-tmpfiles --version
        systemd-tmpfiles --help
        systemd-tty-ask-password-agent --version
        systemd-tty-ask-password-agent --help
        systemd-umount --version
        systemd-umount --help
        systemd-vpick --version
        systemd-vpick --help
        timedatectl --version
        timedatectl --help
        varlinkctl --version
        varlinkctl --help
        halt --help
        init --help
        poweroff --help
        reboot --help
        resolvconf --version
        resolvconf --help
        runlevel --help
        shutdown --help
        telinit --help
    - name: "Check libsystemd"
      runs: |
        ldconfig -p | grep libsystemd.so
        echo '#include <systemd/sd-bus.h>
        int main() { sd_bus *bus; return sd_bus_default_system(&bus); }' > test.c
        cc test.c -lsystemd -o test_systemd
        rm test.c test_systemd
    - name: "Verify stanalone binaries removed"
      runs: |
        STANDALONE_BINARIES=$(find /usr -name '*.standalone' )
        test -z "${STANDALONE_BINARIES}"
