package:
  name: temporal-server
  version: 1.26.2
  epoch: 2
  description: Temporal server executes units of application logic, Workflows, in a resilient manner that automatically handles intermittent failures, and retries failed operations
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - tctl

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go
      - tctl
      - wolfi-baselayout
  environment:
    CGO_ENABLED: 0

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/temporalio/temporal
      tag: v${{package.version}}
      expected-commit: 4151e25df8096ca254b79518c1eb7fc125871756

  - uses: go/bump
    with:
      deps: golang.org/x/crypto@v0.31.0 golang.org/x/net@v0.33.0

  - runs: |
      make bins

  - runs: |
      install -Dm755 temporal-server "${{targets.destdir}}"/usr/bin/temporal-server

  - uses: strip

subpackages:
  - name: temporal-server-compat
    description: "Compat package for temporal-server"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -s /usr/bin/temporal-server "${{targets.contextdir}}"/usr/local/bin
      - uses: strip

  - name: temporal-cassandra-tool
    description: "temporal-cassandra-tool"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          install -Dm755 temporal-cassandra-tool "${{targets.subpkgdir}}"/usr/bin/temporal-cassandra-tool
      - uses: strip
    test:
      pipeline:
        - runs: |
            temporal-cassandra-tool --version
            temporal-cassandra-tool --help

  - name: temporal-cassandra-tool-compat
    description: "Compat package for temporal-cassandra-tool"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -s /usr/bin/temporal-cassandra-tool "${{targets.subpkgdir}}"/usr/local/bin
      - uses: strip

  - name: tdbg
    description: "tdbg"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          install -Dm755 tdbg "${{targets.subpkgdir}}"/usr/bin/tdbg
      - uses: strip
    test:
      pipeline:
        - runs: |
            tdbg --version
            tdbg --help

  - name: tdbg-compat
    description: "Compat package for tdbg"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -s /usr/bin/tdbg "${{targets.subpkgdir}}"/usr/local/bin
      - uses: strip

  - name: temporal-sql-tool
    description: "temporal-sql-tool"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/bin
          install -Dm755 temporal-sql-tool "${{targets.subpkgdir}}"/usr/bin/temporal-sql-tool
      - uses: strip
    test:
      pipeline:
        - runs: |
            temporal-sql-tool --version
            temporal-sql-tool --help

  - name: temporal-sql-tool-compat
    description: "Compat package for temporal-sql-tool"
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -s /usr/bin/temporal-sql-tool "${{targets.subpkgdir}}"/usr/local/bin
      - uses: strip

  - name: temporal-server-oci-entrypoint
    description: Entrypoint for using temporal server in OCI containers
    dependencies:
      runtime:
        - bash
        - temporal-docker-builds
        - tctl
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/etc/temporal/config/dynamicconfig
          cp config/dynamicconfig/docker.yaml ${{targets.subpkgdir}}/etc/temporal/config/dynamicconfig
          cp docker/config_template.yaml ${{targets.subpkgdir}}/etc/temporal/config

  - name: temporal-server-schema
    description: Schema for using temporal server needby temporal admin tools
    dependencies:
      runtime:
        - bash
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/etc/temporal/schema
          cp -r schema ${{targets.subpkgdir}}/etc/temporal/

update:
  enabled: true
  github:
    identifier: temporalio/temporal
    strip-prefix: v

test:
  pipeline:
    - runs: |
        set -o pipefail
        temporal-server --version | grep "${{package.version}}"
        temporal-server --help
