package:
  name: thanos-operator
  version: 0.3.7
  epoch: 30
  description: Kubernetes operator for deploying Thanos
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  # Address  CVE-2022-21698  GHSA-69ch-w2m2-3vjp  GHSA-69cg-p879-7622
  # Mitigate CVE-2022-28948
  # Mitigate CVE-2023-39325 and CVE-2023-3978
  - uses: git-checkout
    with:
      repository: https://github.com/banzaicloud/thanos-operator
      tag: ${{package.version}}
      expected-commit: 7b87b4f89dee6454ae46e9579b9a98d6d7a5e550

  - uses: go/bump
    with:
      deps: |-
        github.com/prometheus/client_golang@v1.11.1
        golang.org/x/text@v0.3.8
        gopkg.in/yaml.v3@v3.0.0-20220521103104-8f96da9f5d5e
        google.golang.org/protobuf@v1.33.0
        golang.org/x/oauth2@v0.27.0
        golang.org/x/net@v0.38.0

  - uses: go/build
    with:
      packages: .
      output: manager

subpackages:
  - name: "${{package.name}}-compat"
    description: "Compatibility package to place binaries in the location expected by upstream helm charts"
    pipeline:
      - runs: |
          # The helm chart expects the thanos-operator binaries to be in / instead of /usr/bin
          mkdir -p "${{targets.subpkgdir}}"
          ln -sf /usr/bin/manager ${{targets.subpkgdir}}/manager
      - uses: strip

update:
  enabled: true
  ignore-regex-patterns:
    - "pkg/sdk/*"
  github:
    identifier: banzaicloud/thanos-operator

test:
  environment:
    contents:
      packages:
        - kubectl
        - git
  pipeline:
    # AUTOGENERATED
    - runs: |
        manager --help
    - uses: test/kwok/cluster
    - runs: |
        git clone --depth=1 https://github.com/banzaicloud/thanos-operator.git
        kubectl apply --validate=false -f thanos-operator/charts/thanos-operator/crds/
    - name: Launch thanos-operator with dummy kubeconfig
      uses: test/daemon-check-output
      with:
        setup: |
          export KUBERNETES_SERVICE_HOST="127.0.0.1"
          export KUBERNETES_SERVICE_PORT="8080"

          # Create required certificates directory
          mkdir -p /tmp/certs
          kubectl config view --minify --raw > /tmp/kwok-kubeconfig.yaml
        start: |
          manager -metrics-addr=:8080 -enable-leader-election=false -kubeconfig=/tmp/kwok-kubeconfig.yaml -verbosity=2
        timeout: 30
        expected_output: |
          starting manager
          starting metrics server
          Starting Controller
