package:
  name: thingsboard
  version: "3.9"
  epoch: 2
  description: "Open-source IoT Platform - Device management, data collection, processing and visualization."
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - dpkg
      - fontconfig
      - gnutar
      - jq
      - lcms2
      - maven
      - nodejs-16
      - openjdk-17-default-jdk
      - ttf-dejavu
      - xz
      - yarn

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 5a16da51b5d755e18c5d8088e88336f07e4766ea
      repository: https://github.com/thingsboard/thingsboard.git
      tag: v${{package.version}}

  - uses: patch
    with:
      patches: wire-schema.patch CVE-2024-50379.patch

  - uses: maven/pombump

  - uses: maven/pombump
    with:
      properties-file: pombump-properties.yaml

  - runs: |
      mvn clean install -DskipTests -Dlicense.skip=true

subpackages:
  - name: "${{package.name}}-tb-js-executor"
    description: "Executes user-defined JavaScript functions in isolation for the ThingsBoard rule engine."
    dependencies:
      runtime:
        - nodejs-16
    pipeline:
      - name: Move tb-js-executor to target directories
        runs: |
          mkdir -p "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          mkdir -p "${{targets.subpkgdir}}/usr/bin"
          cd msa/js-executor/target
          cp -r src/* "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          cp -r package/linux/conf "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          cp -r package/linux/conf/* "${{targets.subpkgdir}}/usr/share/tb-js-executor/config"
          cp -r start-js-executor.sh "${{targets.subpkgdir}}/usr/bin"
      - name: Patch CVEs
        runs: |
          cd "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          resolutions='{
            "@grpc/grpc-js": "^1.10.9",
            "debug": "^4.3.1",
            "fast-xml-parser": "^4.4.1",
            "json5": "^2.2.2",
            "moment": "^2.29.4",
            "tough-cookie": "^4.1.3",
            "xml2js": "^0.5.0",
            "cookie": "^0.7.0"
          }'
          jq --argjson resolutions "$resolutions" '.resolutions += $resolutions' package.json > temp.json && mv temp.json package.json
          jq '.dependencies.express = "^4.19.2"' package.json > temp.json && mv temp.json package.json
      - name: Install nodejs dependencies
        runs: |
          cd "${{targets.subpkgdir}}/usr/share/tb-js-executor"
          yarn install --production --non-interactive --network-concurrency 4 --network-timeout 100000 --mutex network && yarn cache clean --all
    test:
      pipeline:
        - name: Test tb-js-executor server logs
          uses: test/daemon-check-output
          with:
            start: "start-js-executor.sh"
            timeout: 30
            expected_output: |
              Starting '\''ThingsBoard JavaScript Executor Microservice'\''

  - name: "${{package.name}}-tb-mqtt-transport"
    description: Handles MQTT-based device communication and API requests for ThingsBoard.
    dependencies:
      runtime:
        - openjdk-17-default-jvm
    pipeline:
      - name: Extract tb-mqtt-transport to target directories
        runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin
          cd msa/transport/mqtt/target
          dpkg-deb -x tb-mqtt-transport.deb ${{targets.subpkgdir}}
          cp start-tb-mqtt-transport.sh ${{targets.subpkgdir}}/usr/bin
          mkdir -p ${{targets.subpkgdir}}/config
          cp ${{targets.subpkgdir}}/usr/share/tb-mqtt-transport/conf/* ${{targets.subpkgdir}}/config
    test:
      pipeline:
        - name: Test mqtt-transport server logs
          uses: test/daemon-check-output
          with:
            start: "start-tb-mqtt-transport.sh"
            timeout: 30
            expected_output: |
              Starting '\''ThingsBoard MQTT Transport Microservice'\''

  - name: "${{package.name}}-tb-node"
    description: "Core service responsible for handling REST API, WebSocket subscriptions, and processing messages via the rule engine."
    dependencies:
      runtime:
        - eudev
        - fontconfig
        - lcms2
        - openjdk-17-default-jvm
        - ttf-dejavu
    pipeline:
      - name: Extract tb-node to target directories
        runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/bin
          cd msa/tb-node/target
          dpkg-deb -x thingsboard.deb ${{targets.subpkgdir}}
          cp start-tb-node.sh ${{targets.subpkgdir}}/usr/bin
          mkdir -p ${{targets.subpkgdir}}/config
          cp -r ${{targets.subpkgdir}}/usr/share/thingsboard/conf/* ${{targets.subpkgdir}}/config
    test:
      pipeline:
        # This test needs to be run in order to ensure that tomcat-embed-core exists to provide jakarta/servlet/Filter.class (issue with pombump before)
        - name: Test for tomcat-embed-core
          runs: |
            cd /usr/share/thingsboard/bin/
            unzip thingsboard.jar
            ls BOOT-INF/lib/ | grep -q "tomcat-embed-core" || { echo "tomcat-embed-core not found"; exit 1; }
        - name: Test server logs
          runs: |
            mkdir -p /var/log/thingsboard/
          uses: test/daemon-check-output
          with:
            start: "start-tb-node.sh"
            timeout: 30
            expected_output: |
              Starting '\''ThingsBoard Node Microservice'\''

  - name: "${{package.name}}-tb-web-ui"
    description: "Hosts static web UI content using a lightweight Express.js component"
    dependencies:
      runtime:
        - nodejs-16
    pipeline:
      - name: Move tb-web-ui to target directories
        runs: |
          mkdir -p "${{targets.subpkgdir}}/usr/share/tb-web-ui"
          mkdir -p "${{targets.subpkgdir}}/usr/bin"
          cd msa/web-ui/target
          cp -r src/* "${{targets.subpkgdir}}/usr/share/tb-web-ui"
          cp -r package/linux/conf "${{targets.subpkgdir}}/usr/share/tb-web-ui"
          cp -r package/linux/conf/* "${{targets.subpkgdir}}/usr/share/tb-web-ui/config"
          cp -r start-web-ui.sh "${{targets.subpkgdir}}/usr/bin"
      - name: Patch CVEs
        runs: |
          cd "${{targets.subpkgdir}}/usr/share/tb-web-ui"
          resolutions='{
            "color-string": "^1.5.5",
            "follow-redirects": "^1.15.6",
            "minimist": "^1.2.6",
            "json5": "^2.2.2",
            "moment": "^2.29.4",
            "tinymce": "^7.0.0",
            "cookie": "^0.7.0"
          }'
          jq --argjson resolutions "$resolutions" '.resolutions += $resolutions' package.json > temp.json && mv temp.json package.json
          jq '.dependencies.express = "^4.19.2"' package.json > temp.json && mv temp.json package.json
      - name: Install nodejs dependencies
        runs: |
          cd "${{targets.subpkgdir}}/usr/share/tb-web-ui"
          yarn install --production --non-interactive --network-concurrency 4 --network-timeout 100000 --mutex network && yarn cache clean --all
    test:
      pipeline:
        - name: Test tb-web-ui logs
          uses: test/daemon-check-output
          with:
            start: "start-web-ui.sh"
            timeout: 30
            expected_output: |
              Starting '\''ThingsBoard Web UI Microservice'\''

update:
  enabled: true
  github:
    identifier: thingsboard/thingsboard
    tag-filter: v
    strip-prefix: v
