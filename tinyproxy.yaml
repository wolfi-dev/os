#nolint:valid-pipeline-git-checkout-commit,valid-pipeline-git-checkout-tag
package:
  name: tinyproxy
  version: "1.11.2_git20250421"
  epoch: 0
  description: A light-weight HTTP/HTTPS proxy daemon for POSIX operating systems
  copyright:
    - license: GPL-2.0-or-later

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - gcc
      - glibc-dev
      - gperf
      - libnsl-dev
      - libtirpc-dev
      - libtool
      - linux-headers
      - net-tools
      - pkgconf-dev
      - rpcsvc-proto
      - util-linux-dev

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 0a2da97328a5708d50561cf038c0fb6dc168362a
      repository: https://github.com/tinyproxy/tinyproxy
      branch: master

  - name: Create other needed optional directories
    runs: |
      mkdir -p ${{targets.contextdir}}/var/run/tinyproxy
      mkdir -p ${{targets.contextdir}}/var/log/tinyproxy

  - runs: ./autogen.sh

  - uses: autoconf/configure
    with:
      opts: |
        --enable-xtinyproxy \
        --enable-filter \
        --enable-upstream \
        --enable-transparent \
        --enable-reverse \
        --disable-dependency-tracking

  - uses: autoconf/make

  - uses: autoconf/make-install

  - uses: strip

subpackages:
  - name: ${{package.name}}-doc
    pipeline:
      - uses: split/manpages
      - runs: mv ${{targets.destdir}}/usr/share/doc ${{targets.contextdir}}/usr/share/
    description: ${{package.name}} manpages
    test:
      pipeline:
        - uses: test/docs

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - runs: |
        tinyproxy -h
        tinyproxy -v
    - name: "start daemon on localhost"
      uses: test/daemon-check-output
      with:
        start: "tinyproxy -d -c /etc/tinyproxy/tinyproxy.conf"
        timeout: 30
        expected_output: |
          listening on
          Starting main loop. Accepting connections.
        post: |
          curl -x http://127.0.0.1:8888 -w "%{http_code}" http://example.org | grep -q "200"

update:
  enabled: true
  git: {}
  schedule:
    period: weekly
    reason: Upstream does maintain tags and releases but not in a timely manner, last release was a year ago. But the project is active on the master branch.
