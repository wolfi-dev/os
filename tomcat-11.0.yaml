package:
  name: tomcat-11.0
  version: "11.0.4"
  epoch: 0
  description: Apache Tomcat Web Server
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - tomcat=${{package.full-version}}
      - tomcat-11=${{package.full-version}}

data:
  - name: openjdk-versions
    items:
      21: "openjdk-21"
      17: "openjdk-17"

environment:
  contents:
    packages:
      - ant
      - build-base
      - busybox
      - ca-certificates-bundle
      - curl
      - openjdk-17
      # Only 17 is used during the build process
      # 11 and 21 are included for tests
      - openjdk-21
      - tomcat-native

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/tomcat
      tag: ${{package.version}}
      expected-commit: 41f56e094dc101d787016fe0a100210f108e6f51

  - runs: |
      cat <<EOF > build.properties
      skip.installer=true
      base.path=$PWD
      compile.debug=false
      EOF

subpackages:
  - range: openjdk-versions
    name: ${{package.name}}-${{range.value}}
    dependencies:
      runtime:
        - ${{range.value}}-default-jvm
        - tomcat-native
    pipeline:
      - runs: |
          # Only OpenJDK 17 is supported at buildtime
          # However, we're able to run Tomcat with OpenJDK 17-21
          export JAVA_HOME="/usr/lib/jvm/java-17-openjdk"

          ant -Dskip.build.java.version=true

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat
          cp LICENSE ${{targets.contextdir}}/usr/share/tomcat/

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/bin
          cp output/build/bin/* ${{targets.contextdir}}/usr/share/tomcat/bin

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/conf
          cp output/build/conf/* ${{targets.contextdir}}/usr/share/tomcat/conf

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/lib
          cp output/build/lib/* ${{targets.contextdir}}/usr/share/tomcat/lib

          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/logs
          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/temp
          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/webapps

          # This includes the manager and host-manager apps.
          # The apps are not directly usable without copying into the webapps directory.
          # See https://github.com/docker-library/tomcat/pull/181 for more context.
          mkdir -p ${{targets.contextdir}}/usr/share/tomcat/webapps.dist
          rm -rf output/build/webapps/examples
          cp -r output/build/webapps/* ${{targets.contextdir}}/usr/share/tomcat/webapps.dist/
    test:
      environment:
        contents:
          packages:
            - curl
      pipeline:
        - name: Verify Tomcat installation
          runs: |
            if [[ ! -d "/usr/share/tomcat" ]]; then
              echo "Tomcat directory not found!"
              exit 1
            fi
            echo "Tomcat installation verified."
        - name: Check Tomcat version
          runs: |
            sh -c "/usr/share/tomcat/bin/version.sh" | grep "Server version: Apache Tomcat/${{package.version}}" || {
              echo "Tomcat version mismatch!"
              exit 1
            }
            echo "Tomcat version verified."
        - name: Test Tomcat catalina.sh with OpenJDK ${{range.key}}
          uses: test/daemon-check-output
          with:
            setup: |
              #!/bin/sh -ex
              cp /usr/share/tomcat/webapps.dist/docs/appdev/sample/sample.war /usr/share/tomcat/webapps/
            start: |
              sh -c "
                if [[ "${{range.key}}" == "8" ]]; then
                  export JAVA_HOME=/usr/lib/jvm/java-1.8-openjdk
                else
                  export JAVA_HOME=/usr/lib/jvm/java-${{range.key}}-openjdk
                fi
                export LD_LIBRARY_PATH=/usr/lib/tomcat-native
                /usr/share/tomcat/bin/catalina.sh run
              "
            timeout: 30
            expected_output: |
              Tomcat/${{package.version}}
              JVM.Version
              Deploying.*sample.war
              Server startup in
            post: |
              #!/bin/sh -e
              url=http://localhost:8080/sample/
              echo "testing $url"
              response=$(curl -s "$url") || {
                echo "curl $url failed $?"
                exit 1
              }
              expected="Sample.*Hello.*World.*Application"
              echo "$response" | grep -q "$expected" || {
                echo "response from $url did not contain \"$expected\""
                echo "response: $response"
                exit 1
              }
              echo "found \"$expected\" in output of curl $url"
        - name: Test Tomcat startup.sh with OpenJDK ${{range.key}}
          runs: |
            if [[ "${{range.key}}" == "8" ]]; then
              export JAVA_HOME=/usr/lib/jvm/java-1.8-openjdk
            else
              export JAVA_HOME=/usr/lib/jvm/java-${{range.key}}-openjdk
            fi

            export CATALINA_HOME="/usr/share/tomcat"
            export CATALINA_BASE="/usr/share/tomcat"
            export LD_LIBRARY_PATH="/usr/lib/tomcat-native"

            /usr/share/tomcat/bin/startup.sh
            sleep 5

            curl --silent --retry 3 --retry-connrefused http://localhost:8080/ | grep "Apache Tomcat" || {
              echo "Tomcat did not start correctly on JDK ${{range.key}}"
              exit 1
            }

            /usr/share/tomcat/bin/shutdown.sh
            sleep 3
        - name: Deploy test application
          runs: |
            cp /usr/share/tomcat/webapps.dist/docs/appdev/sample/sample.war /usr/share/tomcat/webapps/
            /usr/share/tomcat/bin/startup.sh
            sleep 5
            curl --silent --retry 3 --retry-connrefused http://localhost:8080/sample/ | grep "This is the home page for a sample application" || {
              echo "Test application deployment failed!"
              exit 1
            }
            /usr/share/tomcat/bin/shutdown.sh

update:
  enabled: true
  ignore-regex-patterns:
    - '-M\d+$'
  github:
    identifier: apache/tomcat
    use-tag: true
    tag-filter: 11.0.
