package:
  name: toml11
  version: 4.4.0
  epoch: 1
  description: toml11 is a feature-rich TOML language library for C++11/14/17/20.
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - glibc-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/ToruNiina/toml11
      tag: v${{package.version}}
      expected-commit: be08ba2be2a964edcdb3d3e3ea8d100abc26f286

  - name: "Clone submodules" # Only needed for tests and docs
    runs: git submodule update --init --recursive

  - uses: cmake/configure

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

update:
  enabled: true
  github:
    identifier: ToruNiina/toml11
    use-tag: true
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - gcc
  pipeline:
    - uses: test/tw/ldd-check
    - name: "Compile test"
      runs: |
        cat > test.cpp <<EOF
        #include <toml.hpp>
        #include <cassert>
        #include <string>
        #include <sstream>
        #include <iostream>

        int main() {
            const std::string sample = R"(
                title = "toml11 example"
                [owner]
                name = "Tom"
                age = 42
            )";

            std::istringstream ss(sample);
            toml::value data = toml::parse(ss);

            assert(toml::get<std::string>(data["title"]) == "toml11 example");
            assert(toml::get<std::string>(data["owner"]["name"]) == "Tom");
            assert(toml::get<int>(data["owner"]["age"]) == 42);
            std::cout << "toml11 functionality test passed!\n";
            return 0;
        }
        EOF
        # compile into executable
        g++ -std=c++17 -Wall -Wextra -I/usr/include -o test test.cpp
    - name: "Run functional test"
      runs: |
        ./test | grep -q "passed!"
