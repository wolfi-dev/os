package:
  name: tshark-4.4
  version: "4.4.7"
  epoch: 2
  description: "TShark is a network protocol analyzer to dump and analyze network traffic"
  copyright:
    - license: GPL-2.0-only
  dependencies:
    provides:
      - tshark=${{package.full-version}}
    runtime:
      - ${{package.name}}-libs

environment:
  contents:
    packages:
      - brotli-dev
      - build-base
      - busybox
      - c-ares-dev
      - cmake
      - flex
      - gcc-13 # gcc-14 fails with strange pointer clobbering errors
      - glib-dev
      - libcap-utils
      - libgcrypt-dev
      - libpcap-dev
      - speexdsp-dev
      - wolfi-base
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://gitlab.com/wireshark/wireshark
      tag: v${{package.version}}
      expected-commit: 7980339b16307b07ff84f7878e68fde07d71fc8b

  - uses: cmake/configure
    with:
      opts: -DBUILD_wireshark=off

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

subpackages:
  - name: ${{package.name}}-libs
    dependencies:
      provides:
        - tshark-libs=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/lib
          mv "${{targets.destdir}}"/usr/lib/* "${{targets.subpkgdir}}"/usr/lib
    description: ${{package.name}} libraries
    test:
      pipeline:
        - uses: test/tw/ldd-check

  - name: editcap
    # This is meant to be used as a standalone package for users who want to use editcap without installing all of tshark.
    description: Editcap is used to edit and/or translate the format of capture files.
    dependencies:
      runtime:
        - ${{package.name}}-libs
    pipeline:
      - runs: |
          install -Dm755 "${{targets.destdir}}/usr/bin/editcap" "${{targets.contextdir}}/usr/bin/editcap"
    test:
      environment:
        contents:
          packages:
            - tcpdump
            - curl
      pipeline:
        - uses: test/tw/ldd-check
        - name: Verify installation
          runs: |
            set -o pipefail
            editcap --help | grep -F -e "Usage: editcap"
            editcap --version | grep -F -e "${{package.version}}"
        - name: Download a sample .pcap file
          runs: |
            PCAP_FILE_URL="https://gitlab.com/wireshark/wireshark/-/raw/release-4.4/test/captures/http-ooo2.pcap?ref_type=heads&inline=false"
            curl "$PCAP_FILE_URL" -o /tmp/test.pcap
        - name: Verify packet split
          runs: |
            cd /tmp
            no_of_packets=$(tcpdump -r test.pcap | wc -l)
            echo "Splitting test.pcap into individual packet files (split*.pcap)..."
            editcap -c 1 test.pcap split.pcap
            no_of_files=$(find . -type f -iname 'split*' | wc -l)
            if [[ "$no_of_packets" -ne "$no_of_files" ]]; then
              echo "Error: Number of packets ($no_of_packets) does not match number of files ($no_of_files)."
              exit 1
            fi
            echo "Successfully verified packet split."
            echo "Discarding the first 3 packets from test.pcap into remaining.pcap..."
            editcap test.pcap remaining.pcap 1-3
            expected_packets=$((no_of_packets - 3))
            actual_packets=$(tcpdump -r remaining.pcap | wc -l)
            if [[ "$actual_packets" -ne "$expected_packets" ]]; then
              echo "Error: Expected $expected_packets packets in remaining.pcap, but got $actual_packets packets."
              exit 1
            fi
            echo "Successfully verified discarding packets."

  - name: tshark-4.4-privileged
    description: tshark with cap_net_raw and cap_net_admin capabilities set for running as nonroot user
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/
          cp -r ${{targets.destdir}}/* ${{targets.contextdir}}/
          # Allow tshark to run as nonroot user
          setcap cap_net_raw,cap_net_admin=eip "${{targets.contextdir}}/usr/bin/tshark"
          setcap cap_net_raw,cap_net_admin=eip "${{targets.contextdir}}/usr/bin/dumpcap"
    test:
      environment:
        contents:
          packages:
            - libcap-utils
      pipeline:
        - runs: |
            getcap /usr/bin/tshark | cut -d ' ' -f2 | grep -q -E '^cap_net_admin,cap_net_raw=eip$'
            getcap /usr/bin/dumpcap | cut -d ' ' -f2 | grep -q -E '^cap_net_admin,cap_net_raw=eip$'
        - uses: test/tw/ldd-check

update:
  enabled: true
  git:
    strip-prefix: v
    tag-filter-prefix: v4.4.

test:
  environment:
    contents:
      packages:
        - curl
  pipeline:
    - name: Verify installation
      runs: |
        set -o pipefail
        tshark --help | grep -F -e "Usage: tshark"
        tshark --version | grep -F -e "${{package.version}}"
    - name: Test packet capture
      runs: |
        tshark -w /tmp/out.pcap -c 20 host example.com &
        PID=$!
        sleep 1; curl -sI http://example.com; sleep 1
        tshark -r /tmp/out.pcap -Y "http" |grep '200 OK'
        kill $PID
    - uses: test/tw/ldd-check
