package:
  name: tw
  version: 0.0.6
  epoch: 1
  description: Testing tools
  options:
    no-provides: true
  copyright:
    - license: Apache-2.0

environment:
  environment:
    GOMODCACHE: /var/cache/melange
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/chainguard-dev/tw
      tag: v${{package.version}}
      expected-commit: 19ab7b67ce0df66ed36867980ba6f1a6979e06b1

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/oauth2@v0.27.0
        golang.org/x/crypto@v0.35.0
        golang.org/x/net@v0.36.0
      modroot: ./tw

  # Make the tw binary in the main package so we don't end up with `tw-tw`
  - runs: |
      make -C tw MELANGE_CONTEXTDIR=${{targets.contextdir}} melange-install

  - uses: strip

subpackages:
  - name: twt
    options:
      no-provides: true
    pipeline:
      - runs: |
          install -Dm755 tw/bin/twt ${{targets.contextdir}}/usr/bin/twt
      - uses: strip

  - name: ldd-check
    options:
      no-provides: true
    dependencies:
      runtime:
        - apk-tools
        - busybox
        - posix-libc-utils
    pipeline:
      - runs: |
          make -C ldd-check MELANGE_CONTEXTDIR=${{targets.contextdir}} melange-install
    test:
      pipeline:
        - runs: |
            [ -f /usr/bin/ldd-check ]
            [ -x /usr/bin/ldd-check ]

  - name: gem-check
    options:
      no-provides: true
    dependencies:
      runtime:
        - apk-tools
        - busybox
    pipeline:
      - runs: |
          make -C gem-check MELANGE_CONTEXTDIR=${{targets.contextdir}} melange-install
    test:
      pipeline:
        - runs: |
            [ -f /usr/bin/gem-check ]
            [ -x /usr/bin/gem-check ]

  - name: header-check
    options:
      no-provides: true
    dependencies:
      runtime:
        - apk-tools
        - autoconf
        - build-base
        - busybox
    pipeline:
      - runs: |
          make -C header-check MELANGE_CONTEXTDIR=${{targets.contextdir}} melange-install
    test:
      pipeline:
        - runs: |
            [ -f /usr/bin/header-check ]
            [ -x /usr/bin/header-check ]

  - name: syspeek
    options:
      no-provides: true
    dependencies:
      runtime:
        - apk-tools
        - binutils
        - busybox
        - linux-headers
        - posix-libc-utils
    pipeline:
      - runs: |
          make -C syspeek-tool MELANGE_CONTEXTDIR=${{targets.contextdir}} melange-install
    test:
      pipeline:
        - runs: |
            [ -f /usr/bin/syspeek ]
            [ -x /usr/bin/syspeek ]

  - name: usrmerge-tool
    options:
      no-provides: true
    pipeline:
      - runs: |
          make -C usrmerge-tool MELANGE_CONTEXTDIR=${{targets.contextdir}} melange-install
      - uses: strip
    test:
      pipeline:
        - runs: |
            usrmerge-tool --help

# TODO: I'd like to do this, but until we can dynamically generate the dependencies, we need to manually set them
# data:
#   - name: bins
#     items:
#       ldd-check:
#       usrmerge-tool:
#
# subpackages:
#   - range: bins
#     name: ${{package.name}}-${{range.key}}
#     options:
#       no-provides: true
#     pipeline:
#       - runs: |
#           make -C ${{range.key}} MELANGE_CONTEXTDIR=${{targets.contextdir}} melange-install
update:
  enabled: true
  github:
    identifier: chainguard-dev/tw
    strip-prefix: v
