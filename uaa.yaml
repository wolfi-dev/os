package:
  name: uaa
  version: 77.33.0
  epoch: 0
  description: CloudFoundry User Account and Authentication (UAA) Server
  copyright:
    - license: Apache 2.0
  dependencies:
    runtime:
      - tzdata

environment:
  contents:
    packages:
      - bash
      - busybox
      - gradle
      - openjdk-17
  environment:
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk

update:
  enabled: true
  github:
    identifier: cloudfoundry/uaa
    strip-prefix: v

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/cloudfoundry/uaa.git
      tag: v${{package.version}}
      expected-commit: 591769505440f82e718afaaefbb429e316e011aa

  - name: Build
    runs: |
      ./gradlew -v
      ./gradlew :clean :assemble -Pversion=${{package.version}}

  - name: Install
    runs: |
      install -Dpm0644 -t ${{targets.destdir}}/share/java/uaa/ ./build/libs/cloudfoundry-identity-parent-${{package.version}}.war

subpackages:
  - name: "${{package.name}}-compat"
    pipeline:
      - runs: |
          mkdir -p /workspace /cnb/process/
          ln -s /usr/share/java/uaa/cloudfoundry-identity-parent-${{package.version}}.war "${{targets.subpkgdir}}"/cnb/process/web
          jar -xvf /usr/share/java/uaa/cloudfoundry-identity-parent-${{package.version}}.war -C /workspace
    test:
      pipeline:
        - runs: |
            stat /cnb/process/web

test:
  environment:
    contents:
      packages:
        - uaa-compat
  pipeline:
    - name: "start daemon on localhost"
      uses: test/daemon-check-output
      with:
        start: jenkins.sh
        timeout: 120
        expected_output: |
          Jenkins is fully up and running
    - name: "Check .war timestamp is being set correctly (not zero)"
      runs: |
        WAR_TIME=$(stat -c %Y /usr/share/java/jenkins/jenkins.war)
        if [ "$WAR_TIME" -eq 0 ]; then
          echo "WAR file timestamp is zero"
          exit 1
        fi
    # Run the azurediskplugin binary and verify its startup
    - name: Run and test `azurediskplugin`
      uses: test/daemon-check-output
      with:
        start: /usr/bin/azurediskplugin
        timeout: 30
        expected_output: |
          Enabling controller service capability: CREATE_DELETE_VOLUME
          Enabling volume access mode: SINGLE_NODE_WRITER
