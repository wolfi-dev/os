package:
  name: unibilium
  version: 2.1.2
  epoch: 2
  description: "Terminfo parsing library"
  copyright:
    - license: LGPL-3.0-or-later

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - libtool
      - perl
      - wolfi-base

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/neovim/unibilium
      tag: v${{package.version}}
      expected-commit: bfcb0350129dd76893bc90399cf37c45812268a2

  - uses: autoconf/configure

  - uses: autoconf/make

  - uses: autoconf/make-install

subpackages:
  - name: ${{package.name}}-dev
    pipeline:
      - uses: split/dev
    description: ${{package.name}} dev

  - name: unibilium-doc
    description: unibilium docs
    pipeline:
      - uses: split/manpages
    test:
      pipeline:
        - uses: test/docs

update:
  enabled: true
  github:
    identifier: neovim/unibilium
    strip-prefix: v
    use-tag: true
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - build-base
        - unibilium-dev
        - gcc
        - ncurses # For terminfo data
  pipeline:
    - name: Compile and run a basic unibilium test
      runs: |
        # Create a test C file that uses unibilium to query terminfo
        cat > test_unibilium.c <<EOF
        #include <stdio.h>
        #include <unibilium.h>

        int main() {
            unibi_term *term = unibi_from_env();
            if (term == NULL) {
                fprintf(stderr, "Failed to read terminfo from environment\\n");
                return 1;
            }
            printf("Terminal name: %s\\n", unibi_get_name(term));
            printf("Max colors: %d\\n", unibi_get_num(term, unibi_max_colors));
            unibi_destroy(term);
            return 0;
        }
        EOF

        # Compile the test program
        gcc -o test_unibilium test_unibilium.c -lunibilium

        # Run the test program
        ./test_unibilium 2>&1 | grep -q "Failed to read terminfo"
    - uses: test/ldd-check
      with:
        packages: ${{package.name}}
