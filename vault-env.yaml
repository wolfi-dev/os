package:
  name: vault-env
  version: "1.21.8"
  epoch: 2
  description: Minimalistic init system for containers with Hashicorp Vault secrets support
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ca-certificates
      - libcap
      - tzdata

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/bank-vaults/vault-env
      tag: v${{package.version}}
      expected-commit: c835d8db876f842469ed85d7f95831986fc583ff

  - uses: go/bump
    with:
      deps: |-
        github.com/go-jose/go-jose/v4@v4.0.5
        github.com/golang-jwt/jwt/v5@v5.2.2
        golang.org/x/crypto@v0.36.0
        golang.org/x/oauth2@v0.28.0
        golang.org/x/net@v0.38.0

  - uses: go/build
    with:
      packages: .
      output: vault-env

subpackages:
  - name: "${{package.name}}-compat"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -s /usr/bin/vault-env ${{targets.subpkgdir}}/usr/local/bin/vault-env

update:
  enabled: true
  github:
    identifier: bank-vaults/vault-env
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - vault
    environment:
      VAULT_TOKEN: root
      VAULT_ADDR: http://127.0.0.1:8200
      VAULT_API_ADDR: http://127.0.0.1:8200
      TEST_VARIABLE: 'vault:kvv2/data/webapp/config#Username is: ${.username}'
  pipeline:
    - uses: test/kwok/cluster
    - name: Install, configure, and add a secret to vault
      runs: |
        vault server -dev -dev-root-token-id $VAULT_TOKEN -dev-listen-address="0.0.0.0:8200" &
        sleep 3s # vault startup
        vault auth enable approle
        vault secrets enable -path=kvv2 kv-v2
        vault policy write webapp - <<EOF
        path "kvv2/data/webapp/config" {
          capabilities = ["read", "list", "update", "create"]
        }
        EOF
        vault write auth/approle/role/role1 \
          policies=webapp \
          ttl=24h
        vault kv put kvv2/webapp/config username="static-user" password="static-password"
    - name: Run the vault-env binary and verify the secret is injected into TEST_VARIABLE environment variable
      runs: |
        vault-env /bin/sh -c 'echo $TEST_VARIABLE >  /tmp/output'
        grep 'Username is: static-user' /tmp/output
