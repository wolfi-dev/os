package:
  name: vault-secrets-webhook
  version: "1.21.4"
  epoch: 1
  description: A Kubernetes mutating webhook that makes direct secret injection into Pods possible.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ca-certificates
      - libcap
      - tzdata

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/bank-vaults/vault-secrets-webhook
      tag: v${{package.version}}
      expected-commit: be52ffa2ad14b492036e814fb922b690c4a6d8e6

  - uses: go/bump
    with:
      deps: |-
        github.com/go-jose/go-jose/v4@v4.0.5
        github.com/golang-jwt/jwt/v5@v5.2.2
        github.com/golang-jwt/jwt/v4@v4.5.2
        golang.org/x/crypto@v0.36.0
        golang.org/x/net@v0.37.0
        golang.org/x/oauth2@v0.28.0

  - uses: go/build
    with:
      packages: .
      output: vault-secrets-webhook

subpackages:
  - name: "${{package.name}}-compat"
    dependencies:
      runtime:
        - ${{package.name}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/local/bin
          ln -s /usr/bin/vault-secrets-webhook ${{targets.subpkgdir}}/usr/local/bin/vault-secrets-webhook

update:
  enabled: true
  github:
    identifier: bank-vaults/vault-secrets-webhook
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - curl
        - kwok
        - kwokctl
        - vault
        - jq
        - git
        - wait-for-it
    environment:
      VAULT_TOKEN: root
      VAULT_ADDR: http://127.0.0.1:8200
      VAULT_API_ADDR: http://127.0.0.1:8200
  pipeline:
    - uses: test/kwok/cluster
    - name: Install, configure, and add a secret to vault
      runs: |
        git clone https://github.com/bank-vaults/vault-secrets-webhook
        vault server -dev -dev-root-token-id $VAULT_TOKEN -dev-listen-address="0.0.0.0:8200" &
        sleep 3s # vault startup
        vault auth enable approle
        vault secrets enable -path=kvv2 kv-v2
        vault policy write webapp - <<EOF
        path "kvv2/data/webapp/config" {
          capabilities = ["read", "list", "update", "create"]
        }
        EOF
        vault write auth/approle/role/role1 \
          policies=webapp \
          ttl=24h
        vault kv put kvv2/webapp/config username="static-user" password="static-password"
    - name: Run the vault-secrets-webhook
      runs: |
        mkdir -p /var/run/secrets/kubernetes.io/serviceaccount
        echo "default" > /var/run/secrets/kubernetes.io/serviceaccount/namespace
        vault-secrets-webhook &
        wait-for-it -t 60 localhost:8443
    - name: Fake AdmissionReview and check response for secret from vault
      runs: |
        curl -X POST localhost:8443/configmaps -d'{
          "kind": "AdmissionReview",
          "apiVersion": "admission.k8s.io/v1",
          "request": {
            "uid": "12345-abcde",
            "kind": {
              "group": "",
              "version": "v1",
              "kind": "ConfigMap"
            },
            "resource": {
              "group": "",
              "version": "v1",
              "resource": "configmaps"
            },
            "namespace": "default",
            "operation": "CREATE",
            "userInfo": {
              "username": "system:serviceaccount:default:sa",
              "uid": "67890-xyz",
              "groups": ["system:serviceaccounts"],
              "extra": {}
            },
            "object": {
              "apiVersion": "v1",
              "kind": "ConfigMap",
              "metadata": {
                "name": "test-configmap",
                "namespace": "default",
                "annotations": {
                  "vault.security.banzaicloud.io/vault-addr": "http://127.0.0.1:8200",
                  "vault.security.banzaicloud.io/vault-role": "default",
                  "vault.security.banzaicloud.io/vault-skip-verify": "true",
                  "vault.security.banzaicloud.io/vault-path": "kubernetes"
                }
              },
              "data": {
                "secret": "vault:kvv2/data/webapp/config#username"
              }
            },
            "oldObject": null,
            "dryRun": false,
            "options": {
              "kind": "CreateOptions",
              "apiVersion": "meta.k8s.io/v1"
            }
          }
        }' | jq -r .response.patch | base64 -d | grep "static-user"
