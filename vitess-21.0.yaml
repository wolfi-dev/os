package:
  name: vitess-21.0
  version: "21.0.3"
  epoch: 0
  description: Autoscaling components for Kubernetes
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - vitess=${{package.full-version}}
    runtime:
      # Vitess supports multiple versions of MySQL and percona-server: 5.7 and 8.0
      # So those runtime dependencies will be added in the image build to properly
      # build the supported components as needed:
      # https://github.com/vitessio/vitess/blob/v20.0.2/docker/utils/install_dependencies.sh
      - bash
      - bzip2
      - ca-certificates-bundle
      - curl
      - esbuild
      - gnupg
      - gnupg-dirmngr
      - jemalloc
      - libaio
      - libatomic
      - libcurl-openssl4
      - libev
      - perl-libwww
      - procps
      - rsync
      - strace
      - sysstat
      - tcmalloc-minimal
      - wget
      - zstd

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go-1.23
      - jq
      - nodejs-20
      - npm
      - nvm
  environment:
    VITE_ENABLE_EXPERIMENTAL_TABLET_DEBUG_VARS: "true"
    # Binaries we only need: https://github.com/vitessio/vitess/blob/2592c5932b3036647868299b6df76f8ef28dfbc8/Makefile#L142
    KEEP_BINARIES: "mysqlctl mysqlctld vtorc vtadmin vtctl vtctld vtctlclient vtctldclient vtgate vttablet vtbackup vtexplain"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/vitessio/vitess
      tag: v${{package.version}}
      expected-commit: 94fdc736eae8928a8fdde44e9ec9c3bee1868d6f

  - uses: go/build
    with:
      packages: ./go/...
      output: " " # Workaround: set to non-empty string to build all binaries at once
      ldflags: |
        -w
        -X 'vitess.io/vitess/go/vt/servenv.buildGitRev=$(git rev-parse --short HEAD)'
        -X 'vitess.io/vitess/go/vt/servenv.buildGitBranch=$(git rev-parse --abbrev-ref HEAD)'
        -X 'vitess.io/vitess/go/vt/servenv.buildTime=$(date +"%a %b %d %T %Z %Y")'

  # Add a step to enforce secure versions of dependencies via overrides
  - name: Add dependency overrides
    working-directory: web/vtadmin
    runs: |
      npm pkg set overrides.cookie=0.7.0
      npm pkg set overrides['get-func-name']=2.0.1
      npm pkg set overrides.nanoid=3.3.8
      npm pkg set overrides.ip=2.0.1
      npm pkg set overrides.tar=6.2.1

  - name: Build web UI
    working-directory: web/vtadmin
    runs: |
      npm install --omit=dev

      # CVE GHSA-3xgq-45jj-v275
      npm install cross-spawn@7.0.6

      npm prune --production
      npm install vite --save-dev
      npm run build

      mkdir -p "${{targets.contextdir}}"/vt/web/vtadmin
      cp -r * "${{targets.contextdir}}"/vt/web/vtadmin
      cp -r build "${{targets.contextdir}}"/vt/web/vtadmin
      cp -r node_modules "${{targets.contextdir}}"/vt/web/vtadmin

  - name: Copy configuration files
    runs: |
      # https://github.com/vitessio/vitess/blob/3e5371377b43951465687e9eadc4dc5e47467427/docker/lite/Dockerfile#L58-L59
      mkdir -p "${{targets.contextdir}}"/vt/config
      cp -r ./config/mycnf/* "${{targets.contextdir}}"/vt/config/
      cp -r ./config/init_db.sql "${{targets.contextdir}}"/vt/config/

  - runs: |
      # Remove the clipboard_x86_64.exe binary as it breaks the aarch64 installation
      # since it installs the ld-linux-x86-64.so.2 library.
      rm -rf "${{targets.contextdir}}"/vt/web/vtadmin/node_modules/clipboardy/fallbacks/windows/clipboard_x86_64.exe
      rm -rf "${{targets.contextdir}}"/vt/web/vtadmin/node_modules/clipboardy/fallbacks/linux/xsel

  - name: Forcing the use of our esbuild to mitigate 20+ CVEs
    runs: |
      if [[ "${{build.arch}}" == "aarch64" ]]; then
        rm ${{targets.destdir}}/vt/web/vtadmin/node_modules/@esbuild/linux-arm64/bin/esbuild
        ln -sf /usr/bin/esbuild ${{targets.destdir}}/vt/web/vtadmin/node_modules/@esbuild/linux-arm64/bin/esbuild
      fi
      if [[ "${{build.arch}}" == "x86_64" ]]; then
        rm ${{targets.destdir}}/vt/web/vtadmin/node_modules/@esbuild/linux-x64/bin/esbuild
        ln -sf /usr/bin/esbuild ${{targets.destdir}}/vt/web/vtadmin/node_modules/@esbuild/linux-x64/bin/esbuild
      fi
      rm ${{targets.destdir}}/vt/web/vtadmin/node_modules/esbuild/bin/esbuild
      ln -sf /usr/bin/esbuild ${{targets.destdir}}/vt/web/vtadmin/node_modules/esbuild/bin/esbuild

subpackages:
  - name: "${{package.name}}-compat"
    description: "Compatibility package to place binaries in the location expected by upstream Dockerfile"
    dependencies:
      provides:
        - vitess-compat=${{package.full-version}}
    pipeline:
      - runs: |
          # https://github.com/vitessio/vitess/blob/2592c5932b3036647868299b6df76f8ef28dfbc8/docker/lite/Dockerfile.percona80#L42-L56
          mkdir -p "${{targets.contextdir}}"/vt/bin
          mkdir -p "${{targets.contextdir}}"/vt/config
          mkdir -p "${{targets.contextdir}}"/vt/vtdataroot
          # symlink only ${KEEP_BINARIES}
          for bin in ${KEEP_BINARIES}; do
            ln -sf /usr/bin/$bin "${{targets.contextdir}}"/vt/bin/
          done
    test:
      environment:
        contents:
          packages:
            - vitess
      pipeline:
        - name: Ensure symlinks are valid
          runs: |
            #!/bin/bash
            find /vt/bin -type l ! -exec test -e {} \; -print

  - name: "${{package.name}}-binaries"
    description: "All the binaries built by Vitess"
    dependencies:
      provides:
        - vitess-binaries=${{package.full-version}}
    pipeline:
      - name: Copy all binaries
        runs: |
          mkdir -p ${{targets.contextdir}}/usr/bin
          cp -r ${{targets.destdir}}/usr/bin/* ${{targets.contextdir}}/usr/bin
      - name: Remove redundant binaries
        runs: |
          for bin in $(ls ${{targets.destdir}}/usr/bin); do
            if [[ ! " ${KEEP_BINARIES} " =~ " ${bin} " ]]; then
              rm -f ${{targets.destdir}}/usr/bin/${bin}
            fi
          done
    test:
      pipeline:
        - name: Smoke test for vitess binaries
          runs: |
            autogenerate --version
            autogenerate --help
            demo --version
            demo --help
            docgen --version
            docgen --help
            example --help
            go-upgrade --help
            maketestdata --help
            mysqlctl --version
            mysqlctl --help
            mysqlctld --version
            mysqlctld --help
            rulesctl --version
            rulesctl --help
            topo2topo --version
            topo2topo --help
            vtaclcheck --version
            vtaclcheck --help
            vtadmin --version
            vtadmin --help
            vtbackup --version
            vtbackup --help
            vtbench --version
            vtbench --help
            vtclient --version
            vtclient --help
            vtcombo --version
            vtcombo --help
            vtctl --version
            vtctl --help
            vtctlclient --version
            vtctlclient --help
            vtctld --version
            vtctld --help
            vtctldclient --version
            vtctldclient --help
            vterrorsgen --version
            vterrorsgen --help
            vtexplain --version
            vtexplain --help
            vtgate --version
            vtgate --help
            vtgateclienttest --help
            vtorc --version
            vtorc --help
            vttablet --version
            vttablet --help
            vttestserver --version
            vttestserver --help
            vttlstest --help

update:
  enabled: true
  github:
    identifier: vitessio/vitess
    strip-prefix: v
    use-tag: true
    tag-filter: v21.

test:
  environment:
    contents:
      packages:
        - vitess-compat
  pipeline:
    - name: Smoke test for vitess binaries
      runs: |
        mysqlctl --version
        mysqlctl --help
        mysqlctld --version
        mysqlctld --help
        vtadmin --version
        vtadmin --help
        vtbackup --version
        vtbackup --help
        vtctl --version
        vtctl --help
        vtctlclient --version
        vtctlclient --help
        vtctld --version
        vtctld --help
        vtctldclient --version
        vtctldclient --help
        vtexplain --version
        vtexplain --help
        vtgate --version
        vtgate --help
        vtorc --version
        vtorc --help
        vttablet --version
        vttablet --help
