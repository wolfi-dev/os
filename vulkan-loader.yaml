package:
  name: vulkan-loader
  version: "1.4.307"
  epoch: 0
  description: Vulkan Installable Client Driver (ICD) Loader
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - libx11-dev
      - libxrandr-dev
      - libxrender-dev
      - samurai
      - vulkan-headers
      - wayland-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/KhronosGroup/Vulkan-Loader
      tag: v${{package.version}}
      expected-commit: 0508dee4ff864f5034ae6b7f68d34cb2822b827d

  - runs: |
      cmake -B build -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=lib \
        -DCMAKE_INSTALL_SYSCONFDIR=/etc \
        -DCMAKE_INSTALL_DATADIR=share \
        -DCMAKE_SKIP_RPATH=True \
        -DVULKAN_HEADERS_INSTALL_DIR=/usr
      cmake --build build

  - runs: |
      DESTDIR="${{targets.destdir}}" cmake --install build

  - uses: strip

update:
  enabled: true
  ignore-regex-patterns:
    - ulkan-sdk
  github:
    identifier: KhronosGroup/Vulkan-Loader
    strip-prefix: v
    use-tag: true
    tag-filter: v

test:
  environment:
    contents:
      packages:
        - build-base
        - gcc
        - libx11
        - libxrandr
        - libxrender
        - vulkan-headers
  pipeline:
    - uses: test/pkgconf
    - name: Verify Vulkan Loader Installation
      runs: |
        # Check if the Vulkan loader library files exist
        ls /usr/lib/libvulkan.so || exit 1
        ls /usr/lib/libvulkan.so.1 || exit 1
    - name: Basic Vulkan loader test
      runs: |
        # Create a basic C program to verify Vulkan loader functionality
        echo '#include <vulkan/vulkan.h>
        int main() {
          VkInstance instance;
          VkApplicationInfo appInfo = {};
          appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
          appInfo.pApplicationName = "Test";
          VkInstanceCreateInfo createInfo = {};
          createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
          createInfo.pApplicationInfo = &appInfo;
          vkCreateInstance(&createInfo, NULL, &instance);
          return 0;
        }' > test_vulkan_loader.c

        # Compile the test program to ensure it links to the Vulkan loader
        gcc -o test_vulkan_loader test_vulkan_loader.c -lvulkan || exit 1

        # Run the compiled program to verify the Vulkan loader is working
        ./test_vulkan_loader || exit 1
