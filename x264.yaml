#nolint:valid-pipeline-git-checkout-tag
# Generated from https://git.alpinelinux.org/aports/plain/community/x264/APKBUILD
package:
  name: x264
  # We are using the stable branch of x264, which is not tagged. Need to update the commit hash manually.
  version: "2025.06.08"
  epoch: 2
  description: Free library for encoding H264/AVC video streams
  copyright:
    - license: GPL-2.0-or-later

environment:
  contents:
    packages:
      - autoconf
      - automake
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - coreutils
      - libx11-dev
      - nasm=2.16.03-r3 # ftbfs with nasm 3.00 https://code.videolan.org/videolan/x264/-/issues/80
      - perl

pipeline:
  - uses: git-checkout
    with:
      repository: https://code.videolan.org/videolan/x264.git
      branch: stable
      expected-commit: b35605ace3ddf7c1a5d67a2eb553f034aef41d55

  - runs: |
      ./configure \
        --host=$CHOST \
        --prefix=/usr \
        --enable-shared \
        --enable-static \
        --enable-pic \
        --extra-cflags=-fno-aggressive-loop-optimizations

  - uses: autoconf/make

  - runs: |
      make DESTDIR="${{targets.destdir}}" \
        bindir=/usr/bin libdir=/usr/lib includedir=/usr/include install

  - uses: strip

subpackages:
  - name: x264-dev
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - x264
    description: x264 development files
    test:
      pipeline:
        - uses: test/pkgconf
        - uses: test/tw/ldd-check

update:
  enabled: true
  release-monitor:
    identifier: 369388

test:
  environment:
    contents:
      packages:
        - ffmpeg
  pipeline:
    - uses: test/tw/ver-check
      with:
        bins: x264
        version: "0.165.3222 b35605a"
    - uses: test/tw/help-check
      with:
        bins: x264
    - name: Generate a sample video
      runs: |
        ffmpeg -f lavfi -i testsrc=duration=10:size=1280x720:rate=25 -c:v rawvideo -pix_fmt yuv420p sample.y4m
    - name: Encode the generated sample video to raw H.264
      runs: |
        x264 -o encoded.h264 sample.y4m
    - name: Package raw H.264 stream into an MP4 container
      runs: |
        ffmpeg -i encoded.h264 -c copy encoded.mp4
    - name: Verify the encoded video is a valid MP4 file
      runs: |
        ffprobe -v error -show_entries format=format_name -of default=noprint_wrappers=1:nokey=1 encoded.mp4 | grep -q 'mp4'
    - uses: test/tw/ldd-check
    - runs: |
        # Create a temporary raw YUV file (empty video, just for testing)
        RAW_YUV="test.yuv"
        WIDTH=1920
        HEIGHT=1080
        FPS=30
        FRAMES=10

        # Calculate frame size for YUV420p format
        FRAME_SIZE=$((WIDTH * HEIGHT * 3 / 2))

        echo "Generating raw YUV file ($WIDTH x $HEIGHT, $FRAMES frames)..."
        dd if=/dev/zero of=$RAW_YUV bs=$FRAME_SIZE count=$FRAMES status=none

        # Output file
        OUTPUT_HEVC="test_output.hevc"

        echo "Encoding YUV to HEVC using x264..."
        x264 --input-res ${WIDTH}x${HEIGHT} \
             --fps $FPS \
             --frames $FRAMES \
             --output $OUTPUT_HEVC \
             $RAW_YUV
        # Check if the output file was created
        if [ -f "$OUTPUT_HEVC" ]; then
            echo "Encoding successful! Output file: $OUTPUT_HEVC"
        else
            echo "Encoding failed!"
        fi

        # Clean up
        rm -f $RAW_YUV

        echo "Done."
