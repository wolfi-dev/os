package:
  name: x265
  version: "4.1"
  epoch: 2
  description: H.265/HEVC encoder
  copyright:
    - license: GPL-2.0-only

environment:
  contents:
    packages:
      - build-base
      - busybox
      - cmake
      - coreutils
      - nasm

pipeline:
  - uses: git-checkout
    with:
      repository: https://bitbucket.org/multicoreware/x265_git.git
      tag: ${{package.version}}
      expected-commit: 1d117bed4747758b51bd2c124d738527e30392cb

  - name: build 10bit static library
    uses: cmake/configure
    with:
      output-dir: 10bit
      opts: >
        -S source -DENABLE_ASSEMBLY=ON -DLINKED_10BIT=ON -DLINKED_12BIT=ON -DHIGH_BIT_DEPTH=ON -DEXPORT_C_API=OFF -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DENABLE_HDR10_PLUS=ON


  - uses: cmake/build
    with:
      output-dir: 10bit

  - name: build 12bit static library
    uses: cmake/configure
    with:
      output-dir: 12bit
      opts: >
        -S source -DENABLE_ASSEMBLY=ON -DLINKED_10BIT=ON -DLINKED_12BIT=ON -DHIGH_BIT_DEPTH=ON -DEXPORT_C_API=OFF -DENABLE_SHARED=OFF -DENABLE_CLI=OFF -DMAIN12=ON


  - uses: cmake/build
    with:
      output-dir: 12bit

  - name: inject 10 & 12 bit builds into 8 bit build
    runs: |
      mkdir -p 8bit
      mv 10bit/libx265.a 8bit/libx265_main10.a
      mv 12bit/libx265.a 8bit/libx265_main12.a

  - name: build default shared library
    uses: cmake/configure
    with:
      output-dir: 8bit
      opts: >
        -S source -DENABLE_ASSEMBLY=ON -DLINKED_10BIT=ON -DLINKED_12BIT=ON -DENABLE_PIC=ON -DEXTRA_LINK_FLAGS=-L. -DEXTRA_LIB="x265_main10.a;x265_main12.a"


  - uses: cmake/build
    with:
      output-dir: 8bit

  - name: assemble multi-bit static library
    runs: |
      cd 8bit
      mv libx265.a libx265_main.a
      ar cr libx265.a libx265_main.a libx265_main10.a libx265_main12.a

  - uses: cmake/install
    with:
      output-dir: 8bit

  - uses: strip

subpackages:
  - name: x265-dev
    pipeline:
      - uses: split/dev
    description: x265 development files
    test:
      pipeline:
        - uses: test/pkgconf
        - uses: test/tw/ldd-check

update:
  enabled: true
  git: {}

test:
  pipeline:
    - uses: test/tw/ldd-check
    - runs: |
        # Create a temporary raw YUV file (empty video, just for testing)
        RAW_YUV="test.yuv"
        WIDTH=1920
        HEIGHT=1080
        FPS=30
        FRAMES=10

        # Calculate frame size for YUV420p format
        FRAME_SIZE=$((WIDTH * HEIGHT * 3 / 2))

        echo "Generating raw YUV file ($WIDTH x $HEIGHT, $FRAMES frames)..."
        dd if=/dev/zero of=$RAW_YUV bs=$FRAME_SIZE count=$FRAMES status=none

        # Output file
        OUTPUT_HEVC="test_output.hevc"

        echo "Encoding YUV to HEVC using x265..."
        x265 --input $RAW_YUV \
             --input-res ${WIDTH}x${HEIGHT} \
             --fps $FPS \
             --frames $FRAMES \
             --output $OUTPUT_HEVC

        # Check if the output file was created
        if [ -f "$OUTPUT_HEVC" ]; then
            echo "Encoding successful! Output file: $OUTPUT_HEVC"
        else
            echo "Encoding failed!"
        fi

        # Clean up
        rm -f $RAW_YUV

        echo "Done."
